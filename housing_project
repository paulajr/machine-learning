{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Proyecto Regresión Vivienda",
      "provenance": [],
      "collapsed_sections": [
        "7wqW5l4WYv_N",
        "i0LUGABMZIHr",
        "IjmERdhfZMrC"
      ]
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "3y-LUyZ0AkvW"
      },
      "source": [
        "En el presente trabajo se buscara el mejor modelo para predicir el precio del area de una vivienda en Taiwan respecto a nuestras variables de estudio. "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "601hkKc6qw2A"
      },
      "source": [
        "#INFORMATION DATA\n",
        "* The transaction date (for example, 2013.250=2013 March, 2013.500=2013 June, etc.)\n",
        "* The house age (unit: year)\n",
        "* The distance to the nearest MRT station (unit: meter)\n",
        "* The number of convenience stores in the living circle on foot (integer)\n",
        "* The geographic coordinate, latitude. (unit: degree)\n",
        "* The geographic coordinate, longitude. (unit: degree)\n",
        "* House price of unit area (10000 New Taiwan Dollar/Ping, where Ping is a local unit, 1 Ping = 3.3 meter squared)"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CWnVMlKzKCV-"
      },
      "source": [
        "import pandas as pd\n",
        "data =pd.read_excel(\"/content/Real estate valuation data set.xlsx\")"
      ],
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 436
        },
        "id": "teb5HCJjKe5R",
        "outputId": "38c0a859-743f-4d49-c678-8ace5fa0bf25"
      },
      "source": [
        "data"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>No</th>\n",
              "      <th>transaction date</th>\n",
              "      <th>house age</th>\n",
              "      <th>distance to the nearest MRT station</th>\n",
              "      <th>number of convenience stores</th>\n",
              "      <th>latitude</th>\n",
              "      <th>longitude</th>\n",
              "      <th>house price of unit area</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>2012.916667</td>\n",
              "      <td>32.0</td>\n",
              "      <td>84.87882</td>\n",
              "      <td>10</td>\n",
              "      <td>24.98298</td>\n",
              "      <td>121.54024</td>\n",
              "      <td>37.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>2012.916667</td>\n",
              "      <td>19.5</td>\n",
              "      <td>306.59470</td>\n",
              "      <td>9</td>\n",
              "      <td>24.98034</td>\n",
              "      <td>121.53951</td>\n",
              "      <td>42.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>2013.583333</td>\n",
              "      <td>13.3</td>\n",
              "      <td>561.98450</td>\n",
              "      <td>5</td>\n",
              "      <td>24.98746</td>\n",
              "      <td>121.54391</td>\n",
              "      <td>47.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>2013.500000</td>\n",
              "      <td>13.3</td>\n",
              "      <td>561.98450</td>\n",
              "      <td>5</td>\n",
              "      <td>24.98746</td>\n",
              "      <td>121.54391</td>\n",
              "      <td>54.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>2012.833333</td>\n",
              "      <td>5.0</td>\n",
              "      <td>390.56840</td>\n",
              "      <td>5</td>\n",
              "      <td>24.97937</td>\n",
              "      <td>121.54245</td>\n",
              "      <td>43.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>409</th>\n",
              "      <td>410</td>\n",
              "      <td>2013.000000</td>\n",
              "      <td>13.7</td>\n",
              "      <td>4082.01500</td>\n",
              "      <td>0</td>\n",
              "      <td>24.94155</td>\n",
              "      <td>121.50381</td>\n",
              "      <td>15.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>410</th>\n",
              "      <td>411</td>\n",
              "      <td>2012.666667</td>\n",
              "      <td>5.6</td>\n",
              "      <td>90.45606</td>\n",
              "      <td>9</td>\n",
              "      <td>24.97433</td>\n",
              "      <td>121.54310</td>\n",
              "      <td>50.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>411</th>\n",
              "      <td>412</td>\n",
              "      <td>2013.250000</td>\n",
              "      <td>18.8</td>\n",
              "      <td>390.96960</td>\n",
              "      <td>7</td>\n",
              "      <td>24.97923</td>\n",
              "      <td>121.53986</td>\n",
              "      <td>40.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>412</th>\n",
              "      <td>413</td>\n",
              "      <td>2013.000000</td>\n",
              "      <td>8.1</td>\n",
              "      <td>104.81010</td>\n",
              "      <td>5</td>\n",
              "      <td>24.96674</td>\n",
              "      <td>121.54067</td>\n",
              "      <td>52.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>413</th>\n",
              "      <td>414</td>\n",
              "      <td>2013.500000</td>\n",
              "      <td>6.5</td>\n",
              "      <td>90.45606</td>\n",
              "      <td>9</td>\n",
              "      <td>24.97433</td>\n",
              "      <td>121.54310</td>\n",
              "      <td>63.9</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>414 rows × 8 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "      No   transaction date  ...  longitude  house price of unit area\n",
              "0      1        2012.916667  ...  121.54024                      37.9\n",
              "1      2        2012.916667  ...  121.53951                      42.2\n",
              "2      3        2013.583333  ...  121.54391                      47.3\n",
              "3      4        2013.500000  ...  121.54391                      54.8\n",
              "4      5        2012.833333  ...  121.54245                      43.1\n",
              "..   ...                ...  ...        ...                       ...\n",
              "409  410        2013.000000  ...  121.50381                      15.4\n",
              "410  411        2012.666667  ...  121.54310                      50.0\n",
              "411  412        2013.250000  ...  121.53986                      40.6\n",
              "412  413        2013.000000  ...  121.54067                      52.5\n",
              "413  414        2013.500000  ...  121.54310                      63.9\n",
              "\n",
              "[414 rows x 8 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "98P1JkGbud_v",
        "outputId": "9601840a-c1f7-499a-c0a1-ab32c195441e"
      },
      "source": [
        "data.info()"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 414 entries, 0 to 413\n",
            "Data columns (total 8 columns):\n",
            " #   Column                               Non-Null Count  Dtype  \n",
            "---  ------                               --------------  -----  \n",
            " 0   No                                   414 non-null    int64  \n",
            " 1    transaction date                    414 non-null    float64\n",
            " 2   house age                            414 non-null    float64\n",
            " 3   distance to the nearest MRT station  414 non-null    float64\n",
            " 4    number of convenience stores        414 non-null    int64  \n",
            " 5   latitude                             414 non-null    float64\n",
            " 6   longitude                            414 non-null    float64\n",
            " 7   house price of unit area             414 non-null    float64\n",
            "dtypes: float64(6), int64(2)\n",
            "memory usage: 26.0 KB\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "d11czKJnZLrx",
        "outputId": "75ec1523-5f35-443a-c96c-97cd84bf677e"
      },
      "source": [
        "data.columns"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['No', ' transaction date', 'house age',\n",
              "       'distance to the nearest MRT station', ' number of convenience stores',\n",
              "       'latitude', 'longitude', 'house price of unit area'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zIUH2h-1BPRY"
      },
      "source": [
        "Para nuestros modelos nuestra \"y\" sera \"house price of unit area' y las variables de estudio es decir nuestras X seran house age, distance to the nearest MRT station, number of convenience stores"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "g3HFJdg0KgM3"
      },
      "source": [
        "X=data[['house age','distance to the nearest MRT station',' number of convenience stores']]\n",
        "y=data[['house price of unit area']]"
      ],
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "mqTN34o_ByIt"
      },
      "source": [
        "Antes de empezar con los modelos hallaremos las estadisticas descriptivas de nuestras variables para concerlas un poco mejor"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xunHF2ohujLw"
      },
      "source": [
        "### **Estadísticas descriptivas**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1JbDettCuwpW"
      },
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt"
      ],
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LLDJSWMovAv-",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "outputId": "105550d5-f8d5-4967-fca1-76d06fc11794"
      },
      "source": [
        "y.describe()"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>house price of unit area</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>414.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>37.980193</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>13.606488</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>7.600000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>27.700000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>38.450000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>46.600000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>117.500000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "       house price of unit area\n",
              "count                414.000000\n",
              "mean                  37.980193\n",
              "std                   13.606488\n",
              "min                    7.600000\n",
              "25%                   27.700000\n",
              "50%                   38.450000\n",
              "75%                   46.600000\n",
              "max                  117.500000"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZLvK4gqAvD0T",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 384
        },
        "outputId": "e1900ed2-b311-4f9e-a35f-5c00b98a37ec"
      },
      "source": [
        "plt.hist(y[\"house price of unit area\"],bins=15)"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([ 14.,  38.,  71.,  61., 104.,  61.,  43.,  14.,   4.,   3.,   0.,\n",
              "          0.,   0.,   0.,   1.]),\n",
              " array([  7.6       ,  14.92666667,  22.25333333,  29.58      ,\n",
              "         36.90666667,  44.23333333,  51.56      ,  58.88666667,\n",
              "         66.21333333,  73.54      ,  80.86666667,  88.19333333,\n",
              "         95.52      , 102.84666667, 110.17333333, 117.5       ]),\n",
              " <a list of 15 Patch objects>)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 9
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "qilqgnYpCRBr"
      },
      "source": [
        "Encontramos que la media de nuestra y es 37.98 tenemos un dato minimo de 7.6 y un dato maximo de 117.50, los datos tienen un comportamineto parecido a una campana de Gauss lo cual nos puede dar como resultado que tienden a ser normal."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WSoVVHuJveBI",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "outputId": "1382fee3-0732-4609-b6b1-979261d7aaa4"
      },
      "source": [
        "X.describe()"
      ],
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>house age</th>\n",
              "      <th>distance to the nearest MRT station</th>\n",
              "      <th>number of convenience stores</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>414.000000</td>\n",
              "      <td>414.000000</td>\n",
              "      <td>414.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>17.712560</td>\n",
              "      <td>1083.885689</td>\n",
              "      <td>4.094203</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>11.392485</td>\n",
              "      <td>1262.109595</td>\n",
              "      <td>2.945562</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>23.382840</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>9.025000</td>\n",
              "      <td>289.324800</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>16.100000</td>\n",
              "      <td>492.231300</td>\n",
              "      <td>4.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>28.150000</td>\n",
              "      <td>1454.279000</td>\n",
              "      <td>6.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>43.800000</td>\n",
              "      <td>6488.021000</td>\n",
              "      <td>10.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "        house age  ...   number of convenience stores\n",
              "count  414.000000  ...                     414.000000\n",
              "mean    17.712560  ...                       4.094203\n",
              "std     11.392485  ...                       2.945562\n",
              "min      0.000000  ...                       0.000000\n",
              "25%      9.025000  ...                       1.000000\n",
              "50%     16.100000  ...                       4.000000\n",
              "75%     28.150000  ...                       6.000000\n",
              "max     43.800000  ...                      10.000000\n",
              "\n",
              "[8 rows x 3 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "O4Z3tRFXPc1z"
      },
      "source": [
        "La descripción de nuestros X nos muestra que la media de nuestra primera variable es decir house age, es de 17.71 con un dato maximo de 43.80 y un minimo de 0. La segunda variables distance to the nearest MRT station nos muestra que tiene una media de 1083.88 con un dato maximo de 6488.02 y un minimo de 23.3828. Y por ultimo nuestra variable de number of convenience stores nos muestra que tiene una media de 4.09, un dato maximo de 10 y un dato minimo de 0."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "VIrA-AIdQRJZ"
      },
      "source": [
        " **Histograma house age** "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9Rkt4K-svi7D",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 350
        },
        "outputId": "f4287da6-d8d0-4be1-fecc-62adc481c291"
      },
      "source": [
        "plt.hist(X[\"house age\"],bins=15, color = 'olivedrab')"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([36., 37., 28., 22., 61., 63., 33., 15.,  6., 13., 33., 31., 17.,\n",
              "        12.,  7.]),\n",
              " array([ 0.  ,  2.92,  5.84,  8.76, 11.68, 14.6 , 17.52, 20.44, 23.36,\n",
              "        26.28, 29.2 , 32.12, 35.04, 37.96, 40.88, 43.8 ]),\n",
              " <a list of 15 Patch objects>)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 11
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "IogtQGa8Qolz"
      },
      "source": [
        "**Histograma distance to the nearest MRT station**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FfCsI4jsvjiH",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 384
        },
        "outputId": "be3a7d1d-239a-4f75-ef41-f08f9e6f48e4"
      },
      "source": [
        "plt.hist(X['distance to the nearest MRT station'],bins=15, color = 'grey')"
      ],
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([185.,  83.,  25.,  34.,  27.,  16.,   3.,   4.,   3.,  20.,   9.,\n",
              "          0.,   2.,   0.,   3.]),\n",
              " array([  23.38284   ,  454.35871733,  885.33459467, 1316.310472  ,\n",
              "        1747.28634933, 2178.26222667, 2609.238104  , 3040.21398133,\n",
              "        3471.18985867, 3902.165736  , 4333.14161333, 4764.11749067,\n",
              "        5195.093368  , 5626.06924533, 6057.04512267, 6488.021     ]),\n",
              " <a list of 15 Patch objects>)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 12
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jHi3sY2OQ5XA"
      },
      "source": [
        "**Histograma number of convenience stores**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UcYpbxLywYtO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 387
        },
        "outputId": "16b2f179-1185-4917-a225-2e03a4359d2f"
      },
      "source": [
        "plt.hist(X[' number of convenience stores'],bins=15, color = 'teal')"
      ],
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([67., 46.,  0., 24., 46.,  0., 31., 67.,  0., 37., 31.,  0., 30.,\n",
              "        25., 10.]),\n",
              " array([ 0.        ,  0.66666667,  1.33333333,  2.        ,  2.66666667,\n",
              "         3.33333333,  4.        ,  4.66666667,  5.33333333,  6.        ,\n",
              "         6.66666667,  7.33333333,  8.        ,  8.66666667,  9.33333333,\n",
              "        10.        ]),\n",
              " <a list of 15 Patch objects>)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 13
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "NKMqdsJzSnrn"
      },
      "source": [
        "**Histograma entre house age y house price of unit area**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "11bAXLRXwcEL",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 469
        },
        "outputId": "d53fe9ed-055d-48b5-a5de-7ad372f933e2"
      },
      "source": [
        "fig, ax = plt.subplots()\n",
        "\n",
        "ax.hist(data[\"house age\"], bins = 30, alpha = 0.5)\n",
        "ax.hist(data[\"house price of unit area\"], bins = 30, alpha = 0.5, color=\"purple\")"
      ],
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([ 2., 12., 14., 24., 38., 33., 30., 31., 50., 54., 35., 26., 28.,\n",
              "        15.,  9.,  5.,  2.,  2.,  1.,  2.,  0.,  0.,  0.,  0.,  0.,  0.,\n",
              "         0.,  0.,  0.,  1.]),\n",
              " array([  7.6       ,  11.26333333,  14.92666667,  18.59      ,\n",
              "         22.25333333,  25.91666667,  29.58      ,  33.24333333,\n",
              "         36.90666667,  40.57      ,  44.23333333,  47.89666667,\n",
              "         51.56      ,  55.22333333,  58.88666667,  62.55      ,\n",
              "         66.21333333,  69.87666667,  73.54      ,  77.20333333,\n",
              "         80.86666667,  84.53      ,  88.19333333,  91.85666667,\n",
              "         95.52      ,  99.18333333, 102.84666667, 106.51      ,\n",
              "        110.17333333, 113.83666667, 117.5       ]),\n",
              " <a list of 30 Patch objects>)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 14
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5OQXajHRTE-l"
      },
      "source": [
        "**Relación de datos entre distance to the nearest MRT station y house price of unit area siendo y=house price**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kK4Gx9eewivD",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "outputId": "66beb547-65bd-4e52-9173-55e13eef0654"
      },
      "source": [
        "fig, ax =plt.subplots()\n",
        "ax.scatter(data['distance to the nearest MRT station'], data[\"house price of unit area\"], color = 'green', marker='*')\n",
        "plt.show()"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5AX4h7OFceP6"
      },
      "source": [
        "**Relación entre number of convenience stores y house price of unit area**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RXVlLYKowpJT",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "outputId": "ecc6610a-f7a4-4560-cd35-b7543497d437"
      },
      "source": [
        "fig, ax =plt.subplots()\n",
        "ax.scatter(data[' number of convenience stores'], data[\"house price of unit area\"], color = 'cornflowerblue')\n",
        "plt.show()"
      ],
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Q1JreYeScv6a"
      },
      "source": [
        "**Relación entre house age y distance to the nearest MRT station con respecto a house price**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SdSnqC5qwqAN",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 333
        },
        "outputId": "bb6f77f8-df40-4949-b0a4-1e0f0c5e565e"
      },
      "source": [
        "import seaborn as sns\n",
        "sns.scatterplot(\"house age\",\"distance to the nearest MRT station\", hue = \"house price of unit area\", data = data)\n",
        "\n",
        "plt.show()"
      ],
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
            "  FutureWarning\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "HRB9e-sOdCii"
      },
      "source": [
        "**Relación entre house age y house price of unit area**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yY_Qfp-EwumB",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 387
        },
        "outputId": "1882cc02-ba8a-43d8-c8f2-02f9155e936d"
      },
      "source": [
        "g=sns.relplot(x = \"house age\", y = \"house price of unit area\",\n",
        "           data = data,\n",
        "           kind = \"scatter\")\n",
        "\n",
        "g.fig.suptitle(\"Relación entre house age y house price of unit area\")\n",
        "\n",
        "plt.show()"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 360x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zojc4ULndKWR"
      },
      "source": [
        "**Relación entre house age y distance to the neares MRT station**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fpMv6XJswvOR",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 387
        },
        "outputId": "08293352-7eb8-470d-e573-16d631a506c5"
      },
      "source": [
        "g =sns.relplot(x = \"house age\", y = \"distance to the nearest MRT station\",\n",
        "           data = data,\n",
        "           color= 'orange',\n",
        "           kind = \"scatter\")\n",
        "g.fig.suptitle(\"Relación entre house age y distance to the neares MRT station\")\n",
        "plt.show()"
      ],
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 360x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dHCWBwVMdPwh"
      },
      "source": [
        "Los modelos y las regresiones lo haremos partiendo nuestra base de datos entre 80/20 ademas de eso analizaremos la regresión lineal, regresión lasso, regresión ridge y la regresión ElasticNet para asi finalizar con una predicción del precio y buscar el modelo que mas se acerque al mismo. "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "0G-mqG_fY2dp"
      },
      "source": [
        "### **Regresión Lineal**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nP-ssn85gODm"
      },
      "source": [
        "import time \n",
        "from sklearn import linear_model\n",
        "from sklearn.linear_model import LinearRegression\n",
        "from sklearn.metrics import mean_squared_error, r2_score\n",
        "import matplotlib.pyplot as plt"
      ],
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AXkiElIOcDX5"
      },
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "X_train, X_eval, y_train, y_eval = train_test_split(X, y, test_size = 0.2, shuffle=False)"
      ],
      "execution_count": 26,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DU2DWxune_K0"
      },
      "source": [
        "linear_model = LinearRegression()\n",
        "linear_model.fit(X_train,y_train)\n",
        "start_time = time.process_time()\n",
        "y_pred_in = linear_model.predict(X_train)\n",
        "y_pred_out = linear_model.predict(X_eval) \n"
      ],
      "execution_count": 27,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "czdPnaMwf5V-",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d154ace1-b278-4f79-bcec-88b28113fbf1"
      },
      "source": [
        "print(\"Modelo Lineal\")\n",
        "print(\"Coeficientes\", linear_model.coef_)  \n",
        "print(\"Intercepto\",linear_model.intercept_)\n",
        "print(\"El tiempo de ejecución es\", time.process_time() - start_time, \"segundos\")\n",
        "print(\"El error cuadratico dentro de muestra\",mean_squared_error(y_train, y_pred_in))\n",
        "print(\"El error cuadratico fuera de muestra\",mean_squared_error(y_eval, y_pred_out))"
      ],
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Modelo Lineal\n",
            "Coeficientes [[-0.2728775  -0.00529075  1.34939254]]\n",
            "Intercepto [43.02758005]\n",
            "El tiempo de ejecución es 0.02572804400000006 segundos\n",
            "El error cuadratico dentro de muestra 90.51119776261261\n",
            "El error cuadratico fuera de muestra 62.1393607682994\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7wqW5l4WYv_N"
      },
      "source": [
        "### **Regresión Lasso**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "j4mYEIVNhBD-"
      },
      "source": [
        "from sklearn.linear_model import Lasso"
      ],
      "execution_count": 29,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IcnhBWighrNA",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "57ba050c-d506-42a7-a25f-152093ad7750"
      },
      "source": [
        "lasso_model = Lasso(alpha=0.5)  \n",
        "start_time =time.process_time()\n",
        "lasso_model.fit(X_train,y_train)\n",
        "\n",
        "y_pred_in= lasso_model.predict(X_train)\n",
        "y_pred_out=lasso_model.predict(X_eval)\n",
        "\n",
        "print(\"Modelo Lasso \")\n",
        "print(\"Los coeficientes son\", lasso_model.coef_)\n",
        "print(\"El intercepto es\", lasso_model.intercept_)\n",
        "print(\"El tiempo de ejecucción es \", time.process_time()-start_time, \"en segundos\")\n",
        "print(\"El error cuadratico dentro de muestra es\", mean_squared_error(y_train,y_pred_in))\n",
        "print(\"El error cuadratico fuera de muesta es \", mean_squared_error(y_eval, y_pred_out))"
      ],
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Modelo Lasso \n",
            "Los coeficientes son [-0.26813917 -0.00542455  1.2550762 ]\n",
            "El intercepto es [43.47106429]\n",
            "El tiempo de ejecucción es  0.006770755999999878 en segundos\n",
            "El error cuadratico dentro de muestra es 90.5606916702358\n",
            "El error cuadratico fuera de muesta es  61.845711359517495\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "i0LUGABMZIHr"
      },
      "source": [
        "### **Regresión Ridge**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dMHkmTaChuVL",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "13b2f8c0-f77d-4064-9b06-db9388731639"
      },
      "source": [
        "from sklearn.linear_model import Ridge\n",
        "\n",
        "\n",
        "ridge_model=Ridge(alpha=0.5)\n",
        "start_time= time.process_time()\n",
        "ridge_model.fit(X_train, y_train)\n",
        "\n",
        "y_pred_in =ridge_model.predict(X_train)\n",
        "y_pred_out =ridge_model.predict(X_eval)\n",
        "\n",
        "\n",
        "print(\"Modelo Ridge \")\n",
        "print(\"Los coeficientes son\", ridge_model.coef_)\n",
        "print(\"El intercepto es\", ridge_model.intercept_)\n",
        "print(\"El tiempo de ejecucción es \", time.process_time()-start_time, \"en segundos\")\n",
        "print(\"El error cuadratico dentro de muestra es\", mean_squared_error(y_train,y_pred_in))\n",
        "print(\"El error cuadratico fuera de muesta es \", mean_squared_error(y_eval, y_pred_out))"
      ],
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Modelo Ridge \n",
            "Los coeficientes son [[-0.27287111 -0.00529129  1.34901037]]\n",
            "El intercepto es [43.02960315]\n",
            "El tiempo de ejecucción es  0.006362911000000082 en segundos\n",
            "El error cuadratico dentro de muestra es 90.51119854403397\n",
            "El error cuadratico fuera de muesta es  62.13827715712885\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "IjmERdhfZMrC"
      },
      "source": [
        "### **Regresión ElasticNet**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aUROMaA4iDCC",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ca1515e7-90e7-4631-9d3f-6e1c8485017d"
      },
      "source": [
        "import time\n",
        "from sklearn.linear_model import ElasticNet\n",
        "\n",
        "elasticnet_model=ElasticNet(alpha=0.5,l1_ratio=0.5)\n",
        "start_time= time.process_time()\n",
        "elasticnet_model.fit(X_train, y_train)\n",
        "\n",
        "y_pred_in =elasticnet_model.predict(X_train)\n",
        "y_pred_out =elasticnet_model.predict(X_eval)\n",
        "\n",
        "print(\"Modelo ElasticNet \")\n",
        "print(\"Los coeficientes son\", elasticnet_model.coef_)\n",
        "print(\"El intercepto es\", elasticnet_model.intercept_)\n",
        "print(\"El tiempo de ejecucción es \", time.process_time()-start_time, \"en segundos\")\n",
        "print(\"El error cuadratico dentro de muestra es\", mean_squared_error(y_train,y_pred_in))\n",
        "print(\"El error cuadratico fuera de muesta es \", mean_squared_error(y_eval, y_pred_out))"
      ],
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Modelo ElasticNet \n",
            "Los coeficientes son [-0.26949599 -0.00544006  1.24388848]\n",
            "El intercepto es [43.557598]\n",
            "El tiempo de ejecucción es  0.007264100999999634 en segundos\n",
            "El error cuadratico dentro de muestra es 90.57144697834569\n",
            "El error cuadratico fuera de muesta es  61.8655618010048\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "A3Fao0jX9CNa"
      },
      "source": [
        "### **Prediciones y Resultados finales**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OCGSRlon-h_K",
        "outputId": "4cf92646-37a7-4e9b-f64f-a80bd9f731f8"
      },
      "source": [
        "data.iloc[351]"
      ],
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "No                                      352.000000\n",
              " transaction date                      2012.833333\n",
              "house age                                 4.000000\n",
              "distance to the nearest MRT station    2180.245000\n",
              " number of convenience stores             3.000000\n",
              "latitude                                 24.963240\n",
              "longitude                               121.512410\n",
              "house price of unit area                 28.600000\n",
              "Name: 351, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "C6A0NxGqOoa7",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "37125fba-810a-4ce9-dab5-5f2c8ed57793"
      },
      "source": [
        "X.iloc[351].values"
      ],
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([   4.   , 2180.245,    3.   ])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LfELKo0zPAq5",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "62264732-ad42-44de-ef41-65db85e95d99"
      },
      "source": [
        "y.iloc[351]"
      ],
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "house price of unit area    28.6\n",
              "Name: 351, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cFBhm_PDPFJw",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0f372d36-d782-400e-a44a-948fb7d5ac8b"
      },
      "source": [
        "linear_model.predict([[    4.   , 2180.245,    3.     ]])"
      ],
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[34.4491097]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "i4YISLd26AXi",
        "outputId": "d0299f22-6e94-41ef-e230-c73cce6bb949"
      },
      "source": [
        "lasso_model.predict([[    4.   , 2180.245,    3.     ]])"
      ],
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([34.33688605])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "S7xnDuoo6Hs7",
        "outputId": "afd357e5-4ec4-4d95-bab8-77292d9b47ff"
      },
      "source": [
        "ridge_model.predict([[    4.   , 2180.245,    3.     ]])"
      ],
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[34.44883578]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "h-q0EWnQ6Kb3",
        "outputId": "5dbfe71e-439e-4432-8c76-c953270c6793"
      },
      "source": [
        "elasticnet_model.predict([[    4.   , 2180.245,    3.     ]])"
      ],
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([34.35062493])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "cC4TcptWegVF"
      },
      "source": [
        "**Conclusiones**"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "iGudSKClek3C"
      },
      "source": [
        "En los 4 modelos observamos un error cuadratico fuera y dentro de muestra muy parecidos, que en promedio es de 60 y 90 respectivamente, ademas de eso en los 4 modelos nuestros coeficientes presentan los mismos signos, con nuetra primera varible negativo y esto debido a que entre mas años tenga una vivienda menor puede ser su precio, tambien la segunda variable la cual es la cercania con una estacion de  MRT que es es el sistema de transporte de Taiwan nos demuestra que entre mas lejos este de la estación el valor de la vivienda puede ser menor, y nuestra ultima variable presenta signo positivo, debido a que entre mas tiendas tenga cerca la vivienda su precio sera mayor.  "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "pkDreryJrEfx"
      },
      "source": [
        "Con respecto a nuestros modelos de regresión recordamos que partimos nuestra base en 80/20 para poder generar las predicciones, los resultados en los 4 modelos es que predicen de muy buena manera teniendo un error de 6 unidades aproximadamente en los 4 modelos, sin embargo para ser mas preciso, el modelo que mejor predice el precio y el cual escogemos es el modelo laso que tiene un error mas precisamente de 5.73688605 "
      ]
    }
  ]
}
