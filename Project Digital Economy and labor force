{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Economía Digital Trabajo Final",
      "provenance": [],
      "collapsed_sections": [
        "E__jypWlumQQ",
        "yvKq_DJbusj_"
      ]
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jftoEnnabfbo"
      },
     ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7pz_-pEdcZ8-"
      },
      "source": [
        "## **TICs y empleo** (Base principal)\n",
        "\n",
        "Fuente: OECD Statistics\n",
        "\n",
        "**Variables:**\n",
        "\n",
        "\n",
        "\n",
        "*   **Años** : Del 2016 al  2019.\n",
        "*   **Paises** : 27 paises. (Barzil, Bélgica,Colombia, Républica Checa, Dinamarca, Estonia, Finlandia, Francia, Alemania, Grecia, Hungria, Islandia, Irlanda, Italia, Corea del sur, Lituania, Paises bajos, Noruega, Portugal, Turquia, Estados Unidos, España, Suecia, Suiza y Reino Unido).\n",
        "\n",
        "*   **A1:** Personas empleadas que utilizan habitualmente una computadora en su trabajo (%).\n",
        "* **D1:** Empresas que reciben pedidos a través de redes informáticas (%).\n",
        "*  **G7B:** Empresas que han realizado análisis de Big Data solo con un proveedor de servicios externo (%).\n",
        "*   **H3:** \"Empresas que impartieron algún tipo de formación para el desarrollo de competencias relacionadas con las TIC de las personas empleadas, en los últimos 12 meses (%)\".\n",
        "*   **H4:** \"Empresas que ofrecieron puestos especializados en TIC, en los últimos 12 meses (%)\".\n",
        "*   **GERD** (Gasto interior bruto en I + D) como porcentaje del PIB.\n",
        "*   **Total de personal de I + D por mil empleos totales**\n",
        "*   **Tasa de desempleo mundial.**\n",
        "*   **Inversión en TICS y I+D en $US**\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WIQuuQpLGxF9",
        "outputId": "0534581c-5a2b-4839-8aed-a7b084686303"
      },
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "\n",
        "df = pd.read_excel(\"/content/EconomiaDigital.xlsx\")\n",
        "df"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country</th>\n",
              "      <th>Time</th>\n",
              "      <th>A1: Persons employed regularly using a computer in their work (%)</th>\n",
              "      <th>D1: Businesses receiving orders over computer networks (%)</th>\n",
              "      <th>G7B: Businesses having performed Big data analysis only with external service provider (%)</th>\n",
              "      <th>H3: \"Businesses which provided any type of training to develop ICT related skills of the persons employed, whithin the last 12 months (%)\"</th>\n",
              "      <th>H4: \"Businesses that offered positions for ICT specialist, whithin the last 12 months (%)\"</th>\n",
              "      <th>GERD as a percentage of GDP</th>\n",
              "      <th>Total R&amp;D personnel per thousand total employment</th>\n",
              "      <th>Unemployment rate</th>\n",
              "      <th>Invest in TICS and I+D $US</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Belgium</td>\n",
              "      <td>2016</td>\n",
              "      <td>63.427500</td>\n",
              "      <td>25.609600</td>\n",
              "      <td>6.9567</td>\n",
              "      <td>33.586100</td>\n",
              "      <td>10.63930</td>\n",
              "      <td>2.523377</td>\n",
              "      <td>16.920264</td>\n",
              "      <td>7.887972</td>\n",
              "      <td>1752</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Belgium</td>\n",
              "      <td>2017</td>\n",
              "      <td>64.324000</td>\n",
              "      <td>25.791600</td>\n",
              "      <td>7.6874</td>\n",
              "      <td>34.649900</td>\n",
              "      <td>13.01940</td>\n",
              "      <td>2.667015</td>\n",
              "      <td>17.402117</td>\n",
              "      <td>7.147249</td>\n",
              "      <td>1885</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Belgium</td>\n",
              "      <td>2018</td>\n",
              "      <td>64.316800</td>\n",
              "      <td>29.921200</td>\n",
              "      <td>8.2354</td>\n",
              "      <td>35.579700</td>\n",
              "      <td>12.82850</td>\n",
              "      <td>2.673260</td>\n",
              "      <td>18.274706</td>\n",
              "      <td>6.003281</td>\n",
              "      <td>7768</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Belgium</td>\n",
              "      <td>2019</td>\n",
              "      <td>64.992900</td>\n",
              "      <td>30.549500</td>\n",
              "      <td>21.9476</td>\n",
              "      <td>36.373000</td>\n",
              "      <td>14.46340</td>\n",
              "      <td>2.889670</td>\n",
              "      <td>19.653375</td>\n",
              "      <td>5.409494</td>\n",
              "      <td>9856</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Colombia</td>\n",
              "      <td>2016</td>\n",
              "      <td>59.141383</td>\n",
              "      <td>27.740196</td>\n",
              "      <td>2.7623</td>\n",
              "      <td>7.024567</td>\n",
              "      <td>1.92345</td>\n",
              "      <td>0.295756</td>\n",
              "      <td>2.048770</td>\n",
              "      <td>9.534614</td>\n",
              "      <td>1689</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>2019</td>\n",
              "      <td>64.396500</td>\n",
              "      <td>25.953300</td>\n",
              "      <td>14.3560</td>\n",
              "      <td>29.403400</td>\n",
              "      <td>10.13000</td>\n",
              "      <td>1.755940</td>\n",
              "      <td>14.822200</td>\n",
              "      <td>3.963302</td>\n",
              "      <td>12354</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>2016</td>\n",
              "      <td>43.346600</td>\n",
              "      <td>16.356700</td>\n",
              "      <td>4.4208</td>\n",
              "      <td>11.746752</td>\n",
              "      <td>12.76840</td>\n",
              "      <td>2.788210</td>\n",
              "      <td>4.465639</td>\n",
              "      <td>4.933998</td>\n",
              "      <td>1427</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>2017</td>\n",
              "      <td>50.000000</td>\n",
              "      <td>21.200000</td>\n",
              "      <td>5.2346</td>\n",
              "      <td>12.335000</td>\n",
              "      <td>13.14050</td>\n",
              "      <td>2.846766</td>\n",
              "      <td>4.353933</td>\n",
              "      <td>4.406087</td>\n",
              "      <td>1544</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>2018</td>\n",
              "      <td>48.456700</td>\n",
              "      <td>18.465348</td>\n",
              "      <td>6.1344</td>\n",
              "      <td>12.768400</td>\n",
              "      <td>12.08600</td>\n",
              "      <td>2.947206</td>\n",
              "      <td>5.235000</td>\n",
              "      <td>3.937702</td>\n",
              "      <td>1659</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>103</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>2019</td>\n",
              "      <td>49.000000</td>\n",
              "      <td>21.200000</td>\n",
              "      <td>11.8398</td>\n",
              "      <td>23.575700</td>\n",
              "      <td>13.53340</td>\n",
              "      <td>3.067476</td>\n",
              "      <td>7.345000</td>\n",
              "      <td>3.716811</td>\n",
              "      <td>1765</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>104 rows × 11 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "            Country  Time  ...  Unemployment rate  Invest in TICS and I+D $US\n",
              "0           Belgium  2016  ...           7.887972                        1752\n",
              "1           Belgium  2017  ...           7.147249                        1885\n",
              "2           Belgium  2018  ...           6.003281                        7768\n",
              "3           Belgium  2019  ...           5.409494                        9856\n",
              "4          Colombia  2016  ...           9.534614                        1689\n",
              "..              ...   ...  ...                ...                         ...\n",
              "99   United Kingdom  2019  ...           3.963302                       12354\n",
              "100          Brazil  2016  ...           4.933998                        1427\n",
              "101          Brazil  2017  ...           4.406087                        1544\n",
              "102          Brazil  2018  ...           3.937702                        1659\n",
              "103          Brazil  2019  ...           3.716811                        1765\n",
              "\n",
              "[104 rows x 11 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 174
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "laaCTl0lEseR",
        "outputId": "83d4e00b-fdba-409f-a81c-6a4c001f2c97"
      },
      "source": [
        "df.info()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 104 entries, 0 to 103\n",
            "Data columns (total 11 columns):\n",
            " #   Column                                                                                                                                      Non-Null Count  Dtype  \n",
            "---  ------                                                                                                                                      --------------  -----  \n",
            " 0   Country                                                                                                                                     104 non-null    object \n",
            " 1   Time                                                                                                                                        104 non-null    int64  \n",
            " 2   A1: Persons employed regularly using a computer in their work (%)                                                                           104 non-null    float64\n",
            " 3   D1: Businesses receiving orders over computer networks (%)                                                                                  104 non-null    float64\n",
            " 4   G7B: Businesses having performed Big data analysis only with external service provider (%)                                                  104 non-null    float64\n",
            " 5   H3: \"Businesses which provided any type of training to develop ICT related skills of the persons employed, whithin the last 12 months (%)\"  104 non-null    float64\n",
            " 6   H4: \"Businesses that offered positions for ICT specialist, whithin the last 12 months (%)\"                                                  104 non-null    float64\n",
            " 7   GERD as a percentage of GDP                                                                                                                 104 non-null    float64\n",
            " 8   Total R&D personnel per thousand total employment                                                                                           104 non-null    float64\n",
            " 9   Unemployment rate                                                                                                                           104 non-null    float64\n",
            " 10  Invest in TICS and I+D $US                                                                                                                  104 non-null    int64  \n",
            "dtypes: float64(8), int64(2), object(1)\n",
            "memory usage: 9.1+ KB\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "eX6A1lXXv87C"
      },
      "source": [
        "Realizamos un cambio en el nombre de las variables para su mayor manejo "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rj00tC9xP7d8"
      },
      "source": [
        "df.rename(columns={'A1: Persons employed regularly using a computer in their work (%)' :'Employers using computer',\n",
        "                        'D1: Businesses receiving orders over computer networks (%)':'Bussiness through computer networks' ,\n",
        "                        'G7B: Businesses having performed Big data analysis only with external service provider (%)': 'Bussineses demand Big data analyst' ,\n",
        "                        'H3: \"Businesses which provided any type of training to develop ICT related skills of the persons employed, whithin the last 12 months (%)\"' : 'Businesses training employers in ICT' ,\n",
        "                        'H4: \"Businesses that offered positions for ICT specialist, whithin the last 12 months (%)\"': 'Bussines offered ICT specialist'} ,\n",
        "                         inplace=True)\n",
        "df.drop(['Invest in TICS and I+D $US'], axis=1) \n",
        "Economia_digital = df\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "blw_JQw8bqeC",
        "outputId": "1706b623-e32a-490c-c190-47f02090615f"
      },
      "source": [
        "Economia_digital['Time'].unique()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([2016, 2017, 2018, 2019])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 177
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JGxyY2MSdhua",
        "outputId": "a6f6a5b5-113f-4760-d6e0-946e733d4f0d"
      },
      "source": [
        "Economia_digital['Country'].unique()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Belgium', 'Colombia', 'Czech Republic', 'Denmark', 'Estonia',\n",
              "       'Finland', 'France', 'Germany', 'Greece', 'Hungary', 'Iceland',\n",
              "       'Ireland', 'Italy', 'Korea', 'Lithuania', 'Netherlands', 'Norway',\n",
              "       'Poland', 'Portugal', 'Turkey', 'United States', 'Spain', 'Sweden',\n",
              "       'Switzerland', 'United Kingdom', 'Brazil'], dtype=object)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 178
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IvO9FFQwE8Tf",
        "outputId": "ff6782d0-8027-47b2-8f7b-db13f31a6446"
      },
      "source": [
        "Economia_digital_paises = Economia_digital.set_index([\"Country\",\"Time\"])\n",
        "\n",
        "Economia_digital_paises"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Employers using computer</th>\n",
              "      <th>Bussiness through computer networks</th>\n",
              "      <th>Bussineses demand Big data analyst</th>\n",
              "      <th>Businesses training employers in ICT</th>\n",
              "      <th>Bussines offered ICT specialist</th>\n",
              "      <th>GERD as a percentage of GDP</th>\n",
              "      <th>Total R&amp;D personnel per thousand total employment</th>\n",
              "      <th>Unemployment rate</th>\n",
              "      <th>Invest in TICS and I+D $US</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Country</th>\n",
              "      <th>Time</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th rowspan=\"4\" valign=\"top\">Belgium</th>\n",
              "      <th>2016</th>\n",
              "      <td>63.427500</td>\n",
              "      <td>25.609600</td>\n",
              "      <td>6.9567</td>\n",
              "      <td>33.586100</td>\n",
              "      <td>10.63930</td>\n",
              "      <td>2.523377</td>\n",
              "      <td>16.920264</td>\n",
              "      <td>7.887972</td>\n",
              "      <td>1752</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>64.324000</td>\n",
              "      <td>25.791600</td>\n",
              "      <td>7.6874</td>\n",
              "      <td>34.649900</td>\n",
              "      <td>13.01940</td>\n",
              "      <td>2.667015</td>\n",
              "      <td>17.402117</td>\n",
              "      <td>7.147249</td>\n",
              "      <td>1885</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>64.316800</td>\n",
              "      <td>29.921200</td>\n",
              "      <td>8.2354</td>\n",
              "      <td>35.579700</td>\n",
              "      <td>12.82850</td>\n",
              "      <td>2.673260</td>\n",
              "      <td>18.274706</td>\n",
              "      <td>6.003281</td>\n",
              "      <td>7768</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>64.992900</td>\n",
              "      <td>30.549500</td>\n",
              "      <td>21.9476</td>\n",
              "      <td>36.373000</td>\n",
              "      <td>14.46340</td>\n",
              "      <td>2.889670</td>\n",
              "      <td>19.653375</td>\n",
              "      <td>5.409494</td>\n",
              "      <td>9856</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Colombia</th>\n",
              "      <th>2016</th>\n",
              "      <td>59.141383</td>\n",
              "      <td>27.740196</td>\n",
              "      <td>2.7623</td>\n",
              "      <td>7.024567</td>\n",
              "      <td>1.92345</td>\n",
              "      <td>0.295756</td>\n",
              "      <td>2.048770</td>\n",
              "      <td>9.534614</td>\n",
              "      <td>1689</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>United Kingdom</th>\n",
              "      <th>2019</th>\n",
              "      <td>64.396500</td>\n",
              "      <td>25.953300</td>\n",
              "      <td>14.3560</td>\n",
              "      <td>29.403400</td>\n",
              "      <td>10.13000</td>\n",
              "      <td>1.755940</td>\n",
              "      <td>14.822200</td>\n",
              "      <td>3.963302</td>\n",
              "      <td>12354</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"4\" valign=\"top\">Brazil</th>\n",
              "      <th>2016</th>\n",
              "      <td>43.346600</td>\n",
              "      <td>16.356700</td>\n",
              "      <td>4.4208</td>\n",
              "      <td>11.746752</td>\n",
              "      <td>12.76840</td>\n",
              "      <td>2.788210</td>\n",
              "      <td>4.465639</td>\n",
              "      <td>4.933998</td>\n",
              "      <td>1427</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>50.000000</td>\n",
              "      <td>21.200000</td>\n",
              "      <td>5.2346</td>\n",
              "      <td>12.335000</td>\n",
              "      <td>13.14050</td>\n",
              "      <td>2.846766</td>\n",
              "      <td>4.353933</td>\n",
              "      <td>4.406087</td>\n",
              "      <td>1544</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>48.456700</td>\n",
              "      <td>18.465348</td>\n",
              "      <td>6.1344</td>\n",
              "      <td>12.768400</td>\n",
              "      <td>12.08600</td>\n",
              "      <td>2.947206</td>\n",
              "      <td>5.235000</td>\n",
              "      <td>3.937702</td>\n",
              "      <td>1659</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>49.000000</td>\n",
              "      <td>21.200000</td>\n",
              "      <td>11.8398</td>\n",
              "      <td>23.575700</td>\n",
              "      <td>13.53340</td>\n",
              "      <td>3.067476</td>\n",
              "      <td>7.345000</td>\n",
              "      <td>3.716811</td>\n",
              "      <td>1765</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>104 rows × 9 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                     Employers using computer  ...  Invest in TICS and I+D $US\n",
              "Country        Time                            ...                            \n",
              "Belgium        2016                 63.427500  ...                        1752\n",
              "               2017                 64.324000  ...                        1885\n",
              "               2018                 64.316800  ...                        7768\n",
              "               2019                 64.992900  ...                        9856\n",
              "Colombia       2016                 59.141383  ...                        1689\n",
              "...                                       ...  ...                         ...\n",
              "United Kingdom 2019                 64.396500  ...                       12354\n",
              "Brazil         2016                 43.346600  ...                        1427\n",
              "               2017                 50.000000  ...                        1544\n",
              "               2018                 48.456700  ...                        1659\n",
              "               2019                 49.000000  ...                        1765\n",
              "\n",
              "[104 rows x 9 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 179
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zl2ssaltgD8x",
        "outputId": "e4225900-998c-4f59-cb37-64225f25a17a"
      },
      "source": [
        "Economia_digital_paises.describe().round(3)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Employers using computer</th>\n",
              "      <th>Bussiness through computer networks</th>\n",
              "      <th>Bussineses demand Big data analyst</th>\n",
              "      <th>Businesses training employers in ICT</th>\n",
              "      <th>Bussines offered ICT specialist</th>\n",
              "      <th>GERD as a percentage of GDP</th>\n",
              "      <th>Total R&amp;D personnel per thousand total employment</th>\n",
              "      <th>Unemployment rate</th>\n",
              "      <th>Invest in TICS and I+D $US</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>104.000</td>\n",
              "      <td>104.000</td>\n",
              "      <td>104.000</td>\n",
              "      <td>104.000</td>\n",
              "      <td>104.000</td>\n",
              "      <td>104.000</td>\n",
              "      <td>104.000</td>\n",
              "      <td>104.000</td>\n",
              "      <td>104.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>61.043</td>\n",
              "      <td>23.599</td>\n",
              "      <td>9.445</td>\n",
              "      <td>21.962</td>\n",
              "      <td>8.624</td>\n",
              "      <td>1.995</td>\n",
              "      <td>13.527</td>\n",
              "      <td>7.080</td>\n",
              "      <td>6535.250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>14.548</td>\n",
              "      <td>9.450</td>\n",
              "      <td>4.694</td>\n",
              "      <td>8.819</td>\n",
              "      <td>2.812</td>\n",
              "      <td>0.963</td>\n",
              "      <td>4.576</td>\n",
              "      <td>4.236</td>\n",
              "      <td>17784.168</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>41.935</td>\n",
              "      <td>11.019</td>\n",
              "      <td>2.285</td>\n",
              "      <td>7.025</td>\n",
              "      <td>1.923</td>\n",
              "      <td>0.262</td>\n",
              "      <td>1.859</td>\n",
              "      <td>2.061</td>\n",
              "      <td>57.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>48.788</td>\n",
              "      <td>18.162</td>\n",
              "      <td>6.304</td>\n",
              "      <td>14.118</td>\n",
              "      <td>6.466</td>\n",
              "      <td>1.239</td>\n",
              "      <td>9.998</td>\n",
              "      <td>4.157</td>\n",
              "      <td>712.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>59.442</td>\n",
              "      <td>21.884</td>\n",
              "      <td>8.138</td>\n",
              "      <td>21.270</td>\n",
              "      <td>8.699</td>\n",
              "      <td>1.921</td>\n",
              "      <td>14.438</td>\n",
              "      <td>5.864</td>\n",
              "      <td>1441.500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>68.733</td>\n",
              "      <td>27.690</td>\n",
              "      <td>10.801</td>\n",
              "      <td>28.365</td>\n",
              "      <td>10.632</td>\n",
              "      <td>2.763</td>\n",
              "      <td>16.737</td>\n",
              "      <td>8.592</td>\n",
              "      <td>5298.250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>100.000</td>\n",
              "      <td>64.223</td>\n",
              "      <td>25.983</td>\n",
              "      <td>44.372</td>\n",
              "      <td>14.463</td>\n",
              "      <td>4.640</td>\n",
              "      <td>21.853</td>\n",
              "      <td>23.704</td>\n",
              "      <td>95397.000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "       Employers using computer  ...  Invest in TICS and I+D $US\n",
              "count                   104.000  ...                     104.000\n",
              "mean                     61.043  ...                    6535.250\n",
              "std                      14.548  ...                   17784.168\n",
              "min                      41.935  ...                      57.000\n",
              "25%                      48.788  ...                     712.000\n",
              "50%                      59.442  ...                    1441.500\n",
              "75%                      68.733  ...                    5298.250\n",
              "max                     100.000  ...                   95397.000\n",
              "\n",
              "[8 rows x 9 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 180
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "OpIHNoaRwI2t"
      },
      "source": [
        "Haremos una división de la base de datos en los diferentes continentes. "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kv8ngmEWuTXx"
      },
      "source": [
        " ###  **América**\n",
        "\n",
        "\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MRiEWlrxHBQU",
        "outputId": "60994f0e-982e-4e3c-92ef-4d7bddf9aa02"
      },
      "source": [
        "Economia_digital_amca = [\"Colombia\" , \"Brazil\" , \"United States\"]\n",
        "\n",
        "America_Edigital =Economia_digital_paises.loc[Economia_digital_amca]\n",
        "America_Edigital.round(3)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Employers using computer</th>\n",
              "      <th>Bussiness through computer networks</th>\n",
              "      <th>Bussineses demand Big data analyst</th>\n",
              "      <th>Businesses training employers in ICT</th>\n",
              "      <th>Bussines offered ICT specialist</th>\n",
              "      <th>GERD as a percentage of GDP</th>\n",
              "      <th>Total R&amp;D personnel per thousand total employment</th>\n",
              "      <th>Unemployment rate</th>\n",
              "      <th>Invest in TICS and I+D $US</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Country</th>\n",
              "      <th>Time</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th rowspan=\"4\" valign=\"top\">Colombia</th>\n",
              "      <th>2016</th>\n",
              "      <td>59.141</td>\n",
              "      <td>27.740</td>\n",
              "      <td>2.762</td>\n",
              "      <td>7.025</td>\n",
              "      <td>1.923</td>\n",
              "      <td>0.296</td>\n",
              "      <td>2.049</td>\n",
              "      <td>9.535</td>\n",
              "      <td>1689</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>58.257</td>\n",
              "      <td>25.457</td>\n",
              "      <td>3.214</td>\n",
              "      <td>7.974</td>\n",
              "      <td>2.032</td>\n",
              "      <td>0.262</td>\n",
              "      <td>2.007</td>\n",
              "      <td>9.721</td>\n",
              "      <td>1469</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>60.351</td>\n",
              "      <td>26.379</td>\n",
              "      <td>3.953</td>\n",
              "      <td>8.697</td>\n",
              "      <td>3.571</td>\n",
              "      <td>0.286</td>\n",
              "      <td>1.859</td>\n",
              "      <td>10.006</td>\n",
              "      <td>1469</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>63.570</td>\n",
              "      <td>27.780</td>\n",
              "      <td>7.017</td>\n",
              "      <td>11.700</td>\n",
              "      <td>3.976</td>\n",
              "      <td>0.281</td>\n",
              "      <td>2.017</td>\n",
              "      <td>10.832</td>\n",
              "      <td>1507</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"4\" valign=\"top\">Brazil</th>\n",
              "      <th>2016</th>\n",
              "      <td>43.347</td>\n",
              "      <td>16.357</td>\n",
              "      <td>4.421</td>\n",
              "      <td>11.747</td>\n",
              "      <td>12.768</td>\n",
              "      <td>2.788</td>\n",
              "      <td>4.466</td>\n",
              "      <td>4.934</td>\n",
              "      <td>1427</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>50.000</td>\n",
              "      <td>21.200</td>\n",
              "      <td>5.235</td>\n",
              "      <td>12.335</td>\n",
              "      <td>13.140</td>\n",
              "      <td>2.847</td>\n",
              "      <td>4.354</td>\n",
              "      <td>4.406</td>\n",
              "      <td>1544</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>48.457</td>\n",
              "      <td>18.465</td>\n",
              "      <td>6.134</td>\n",
              "      <td>12.768</td>\n",
              "      <td>12.086</td>\n",
              "      <td>2.947</td>\n",
              "      <td>5.235</td>\n",
              "      <td>3.938</td>\n",
              "      <td>1659</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>49.000</td>\n",
              "      <td>21.200</td>\n",
              "      <td>11.840</td>\n",
              "      <td>23.576</td>\n",
              "      <td>13.533</td>\n",
              "      <td>3.067</td>\n",
              "      <td>7.345</td>\n",
              "      <td>3.717</td>\n",
              "      <td>1765</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"4\" valign=\"top\">United States</th>\n",
              "      <th>2016</th>\n",
              "      <td>65.378</td>\n",
              "      <td>20.305</td>\n",
              "      <td>9.896</td>\n",
              "      <td>27.485</td>\n",
              "      <td>6.475</td>\n",
              "      <td>2.008</td>\n",
              "      <td>7.655</td>\n",
              "      <td>19.746</td>\n",
              "      <td>87659</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>76.630</td>\n",
              "      <td>24.667</td>\n",
              "      <td>7.239</td>\n",
              "      <td>26.734</td>\n",
              "      <td>6.508</td>\n",
              "      <td>1.865</td>\n",
              "      <td>8.014</td>\n",
              "      <td>17.331</td>\n",
              "      <td>94472</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>78.501</td>\n",
              "      <td>25.377</td>\n",
              "      <td>9.314</td>\n",
              "      <td>28.532</td>\n",
              "      <td>7.961</td>\n",
              "      <td>1.947</td>\n",
              "      <td>8.376</td>\n",
              "      <td>15.350</td>\n",
              "      <td>94997</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>86.550</td>\n",
              "      <td>24.934</td>\n",
              "      <td>5.148</td>\n",
              "      <td>28.439</td>\n",
              "      <td>7.733</td>\n",
              "      <td>2.044</td>\n",
              "      <td>8.668</td>\n",
              "      <td>14.189</td>\n",
              "      <td>95397</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                    Employers using computer  ...  Invest in TICS and I+D $US\n",
              "Country       Time                            ...                            \n",
              "Colombia      2016                    59.141  ...                        1689\n",
              "              2017                    58.257  ...                        1469\n",
              "              2018                    60.351  ...                        1469\n",
              "              2019                    63.570  ...                        1507\n",
              "Brazil        2016                    43.347  ...                        1427\n",
              "              2017                    50.000  ...                        1544\n",
              "              2018                    48.457  ...                        1659\n",
              "              2019                    49.000  ...                        1765\n",
              "United States 2016                    65.378  ...                       87659\n",
              "              2017                    76.630  ...                       94472\n",
              "              2018                    78.501  ...                       94997\n",
              "              2019                    86.550  ...                       95397\n",
              "\n",
              "[12 rows x 9 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 181
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "szAEOyI0MsTk",
        "outputId": "b76e519b-631c-418a-bdd3-0d805a9ea8f0"
      },
      "source": [
        "America_Edigital.mean(1)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Country        Time\n",
              "Colombia       2016      199.941226\n",
              "               2017      175.324799\n",
              "               2018      176.011350\n",
              "               2019      181.574697\n",
              "Brazil         2016      169.758566\n",
              "               2017      184.168543\n",
              "               2018      196.558973\n",
              "               2019      210.919798\n",
              "United States  2016     9757.549860\n",
              "               2017    10515.665415\n",
              "               2018    10574.706412\n",
              "               2019    10619.411790\n",
              "dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 182
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PLG2jJBvfyIa",
        "outputId": "7a278c84-f273-4f2a-826e-5f6d97470d6d"
      },
      "source": [
        "America_Edigital.mean(1).plot(kind='bar', color = \"brown\", alpha=0.7)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7ffb45c35790>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 183
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qUPeb0gPcLjF",
        "outputId": "46d88211-d5e1-4c38-c7d9-8310f2d8be71"
      },
      "source": [
        "America_Edigital_años = America_Edigital.groupby(['Time', 'Employers using computer'])['Employers using computer'].count()\n",
        "America_Edigital_años"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Time  Employers using computer\n",
              "2016  43.346600                   1\n",
              "      59.141383                   1\n",
              "      65.378500                   1\n",
              "2017  50.000000                   1\n",
              "      58.257144                   1\n",
              "      76.629800                   1\n",
              "2018  48.456700                   1\n",
              "      60.351333                   1\n",
              "      78.501000                   1\n",
              "2019  49.000000                   1\n",
              "      63.570000                   1\n",
              "      86.549800                   1\n",
              "Name: Employers using computer, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 184
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TgYooGevR2W7",
        "outputId": "24ae2df4-0ea6-4b70-aced-9cc827530236"
      },
      "source": [
        "America_Edigital.plot(kind='bar',  stacked=True)\n",
        "plt.legend(title= '**Digital Economy Colombia, Brazil and UU.EE (2016-2019)**', loc='best', ncol=3, bbox_to_anchor=(0.5, 1.05))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.legend.Legend at 0x7ffb4501e750>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 185
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "EezXokjkuhO6"
      },
      "source": [
        "* **Colombia**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kmHiTi7zFogx",
        "outputId": "bbfee983-242f-4c02-d9e4-0f798ee74eb3"
      },
      "source": [
        "America_Edigital.loc[\"Colombia\"]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Employers using computer</th>\n",
              "      <th>Bussiness through computer networks</th>\n",
              "      <th>Bussineses demand Big data analyst</th>\n",
              "      <th>Businesses training employers in ICT</th>\n",
              "      <th>Bussines offered ICT specialist</th>\n",
              "      <th>GERD as a percentage of GDP</th>\n",
              "      <th>Total R&amp;D personnel per thousand total employment</th>\n",
              "      <th>Unemployment rate</th>\n",
              "      <th>Invest in TICS and I+D $US</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Time</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>59.141383</td>\n",
              "      <td>27.740196</td>\n",
              "      <td>2.7623</td>\n",
              "      <td>7.024567</td>\n",
              "      <td>1.923450</td>\n",
              "      <td>0.295756</td>\n",
              "      <td>2.048770</td>\n",
              "      <td>9.534614</td>\n",
              "      <td>1689</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>58.257144</td>\n",
              "      <td>25.456616</td>\n",
              "      <td>3.2145</td>\n",
              "      <td>7.973550</td>\n",
              "      <td>2.032312</td>\n",
              "      <td>0.261546</td>\n",
              "      <td>2.006793</td>\n",
              "      <td>9.720731</td>\n",
              "      <td>1469</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>60.351333</td>\n",
              "      <td>26.379277</td>\n",
              "      <td>3.9528</td>\n",
              "      <td>8.696650</td>\n",
              "      <td>3.571340</td>\n",
              "      <td>0.285997</td>\n",
              "      <td>1.858605</td>\n",
              "      <td>10.006153</td>\n",
              "      <td>1469</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>63.570000</td>\n",
              "      <td>27.780000</td>\n",
              "      <td>7.0170</td>\n",
              "      <td>11.700000</td>\n",
              "      <td>3.976300</td>\n",
              "      <td>0.280656</td>\n",
              "      <td>2.016755</td>\n",
              "      <td>10.831563</td>\n",
              "      <td>1507</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "      Employers using computer  ...  Invest in TICS and I+D $US\n",
              "Time                            ...                            \n",
              "2016                 59.141383  ...                        1689\n",
              "2017                 58.257144  ...                        1469\n",
              "2018                 60.351333  ...                        1469\n",
              "2019                 63.570000  ...                        1507\n",
              "\n",
              "[4 rows x 9 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 186
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2iY23UBAiIjU",
        "outputId": "49347c0e-3ea2-4411-f3f6-0d69e401285d"
      },
      "source": [
        "America_Edigital.loc[\"Colombia\"].plot(kind='bar',  stacked=True)\n",
        "plt.legend(title= '**Digital Economy Colombia (2016-2019)**', loc='center', ncol=3, bbox_to_anchor=(0.5, 1.05))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.legend.Legend at 0x7ffb456ab6d0>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 187
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "E__jypWlumQQ"
      },
      "source": [
        "### **Europa**\n",
        "\n",
        "\n",
        "\n",
        "---\n",
        "\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8NpefQDMJRkg"
      },
      "source": [
        "Economia_digital_EU = [\"Finland\", \"Germany\", \"Iceland\", \"Norway\", \"Spain\", \"Sweden\" , \"United Kingdom\"]\n",
        "\n",
        "Europa_Edigital = Economia_digital_paises.loc[Economia_digital_EU]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "63IcG65sPbVQ",
        "outputId": "f3f19d44-a4e4-4cab-e7f4-5ffb2c87283f"
      },
      "source": [
        "Europa_Edigital.plot(kind='bar',  stacked=True)\n",
        "plt.legend(title= '**Digital Economy Finland, Germany,Iceland,Norway,Spain,Sweden and UK (2016-2019)**',loc='best', ncol=3, bbox_to_anchor=(0.5, 1.05))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.legend.Legend at 0x7ffb45486f50>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 189
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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9/jx49u8//77kQEBATYgIEBTpkxZ06dPn911fb04OdFCDpyESkpKAps3b+6WDm5FHTlyZEdv68qNN97YPi4uLjUxMdE1bty4GEmaPn16y4SEhNSkpCRXRkZG0oHLuPPOO9sNGTIktmfPnkkxMTFpjz766KneZU+ZMqVVWlpaSnJysmv48OGd3G633G63Bg8eHJuQkJCamJjo+tvf/naqJGVnZ4eec845CampqSk9evRIWrJkSZOa1u+rqqpKI0eO7BgbG9v1rLPOStyyZcv+C4/ffvtt+O9+97uk1NTUlN69eyesWbMmWKr+sL7mmms6dO3aNaVLly6pX3/9dfhFF10U16lTp6633nprO+/8F154YVxqampKfHx86jPPPLP/y3B4eHj3W265pX1SUpIrPT09uaioKEiS8vLyQk477bTkxMREl+9yartvVq5cGZKQkJAqSTt37gz4/e9/3yUuLi61X79+cd26dUv+5ptvwg+cf86cOc06d+6c6nK5UubMmbM/YVu4cGH4aaedlpySkuLq3r178rJly0L37t1rnnjiiXbz5s1rmZyc7Hrttdda+ovzU8eAXr16JbpcrpTExETXP/7xjxbe+nbp0iV16NChneLj41PPPvvshF27dhlJevbZZ6O6du2akpSU5Lr44ovjdu7c+ZvPn+zs7FCXy5Xifb5ixYr9zw88DhcsWHDK559/3uLBBx+MSU5OPqg18UQzb968iODgYHvvvfdu9pYlJibu+8tf/rKpLss588wzdxcXF4f4m+ZyufY99dRTRa+88spBvRVWrlwZ0qNHjySXy5Xi24NjzZo1wRkZGUneFvhPP/206YHz3n333W27du2akpCQkDps2LBOVVVVB6178ODBscOHD+/YtWvXlNjY2K7vvPNOc0lyu9267rrrYrp27ZqSmJjoevrpp6Ok6vebHj16JPXp0yc+ISGhq9vt1rhx42K87yGPPfbYqdKhz/cbbrihfVpaWkpsbGzXTz/9tGldzoVDnYsffPBBs9NOOy3Z5XKlDBgwoEtJSclB37MWLVoUlp6enpyYmOjq169f3ObNmwNnz57d/NVXX23997//PfqMM85I9I3Pzs4OXbp06SkvvPBCcWBgoCSpXbt27scee2xjXfdl+/bt3R07diwvKCjwexygcfvwww9bLF++PMzftHvvvXdzbZJxSerZs+eevLy8nLy8vJwLL7xwx6OPProuLy8vZ9GiRfm+cUVFRUEjRoyIe/LJJ9cVFhZm5ebm5vTv3790x44dAePHj2/fp0+f0pUrV+asWrUq+6mnnnL8N80nT54ceeedd/r9rJ05c+bq/Pz8nNzc3JzQ0NCqAQMG+O09NnPmzBYulytlxowZ0d27d0/+4Ycf/G5vX59//vkpn332WYsVK1bk5Ofn5yxcuDC/S5cu+xr6enDyICEHThLl5eUBycnJrs6dO6fedtttnSZMmHBQK4yvjRs3Bn788cctf/755+z8/Pycxx9/fIMkPfnkk23//e9/569cuTLn008/9Xs1vKCgoMnXX3+d/+OPP+Y+88wz7crLy81PP/3UZM6cOa0yMzPz8vLycgICAuwrr7wS+d///jd8w4YNwd713HTTTVslaezYsZ2mTJmyNjs7O/fpp59ed8MNN3SszfrfeuutFgUFBaEFBQVZb7/99i8//fRTU8/rN7feemvHjz76aFV2dnbuqFGjttx9993tvfOFhIRUZWVl5Y4ZM2bzkCFD4l977bW1eXl52bNnz47auHFjoCT985//LMzOzs5dunRpzrRp01p7y/fs2RPQq1evXStXrszp1avXrhdffDFakm688caOY8eO3Zyfn5/Ttm3biobsm6effjq6RYsWlatWrcp+/PHHi3Nycg665aCsrMzcfPPNsXPnzi3IysrK3bRp0/6mw/T09L0//vhjXm5ubs6ECROK77333pgmTZrY+++/f/2gQYO25+Xl5Vx77bXb/cUduJ7w8PCqf/3rXwU5OTm5X3/9df4DDzwQ40201q5d2+TWW2/dVFBQkN28efPKmTNntpSkESNGbM/KyspduXJlTlJS0p7Jkyf/pttsampqeUREROWiRYvCJGnatGlRI0aM2OrvOOzXr99u3y+Rqamp5TVt2xPBihUrwrp163bIHiiZmZlNfbusH3iRwu12a+HChRGXXXbZjpqWcdZZZ5X98ssvB90G0K5dO/e3336bn5OTkzt79uzVd9xxR0dJmj59equ+ffuW5OXl5eTm5mafccYZB9Xxnnvu2ZSVlZX7888/Z+/Zsydg1qxZfruEFxUVhS5btix33rx5P99+++2dysrKzKRJk6KaN29emZWVlbts2bLcGTNmROfl5YVIUk5OTviUKVPWFhYWZj377LPRa9euDcnJycnOz8/PGTt27NbDne9ut9usWLEid+LEiUUPP/xwu7qcCzWdixs2bAh6/PHH237zzTf5OTk5uaeffnrZI488clBSPHr06M6PP/74uvz8/JzU1NQ948ePb3fllVeWjBw5cvP111//6/fff/+bpGjp0qVNUlJSyrzJeG3UtC9zcnJCioqKQl0u1wl9zjhl/vz5ET179kzq379/l86dO6f+4Q9/6FxVVaU5c+Y0GzBgQBffOO9F7Jou4tT1QqTv7T/+LjrV5/U8++yzp15xxRVbL7zwwv0tvWPGjNneoUMH98aNG4M7dOiwP+k844wz9vhbxrG4kF0XTZo0sVOnTl23fv36kP/+978HJdt33XVXxw8++GDVqFGjNs+dO7fgUJ/dXsXFxcGtWrVyh4WFWUlq27atOzY29rDzAV50WQdOEr5dVz///PNTxowZ0zk/Pz+7pvjIyMjK0NDQqiuvvDJ24MCBO7zdODMyMnaNGDEidvDgwdtHjBix3d+8F1100Y6wsDAbFhbmbtWqVcW6deuCPv3004isrKzw9PT0FEnau3dvwKmnnuq+8sordxQVFYWOGjWqw6BBg0r++Mc/lpaUlAQsWbKk6ZAhQ+K8y9y3b5+pzfq//vrriCuuuGJbUFCQYmNjK3r16rVTkpYvXx76888/h/Xp0ydRqm5Jj46O3v+B+cc//nGHJKWnp++Jj4/f06lTpwqpuivo6tWrQ9q0abNn4sSJrf/1r3+1kKSNGzcGZ2dnN2nTps3u4OBgO3To0BJJ6tGjx+7PP/+8mST99NNPTT/55JNVknTddddtfeSRRw5Kbmu7bxYtWtT0tttu2yRJv/vd7/YmJiYelPwsXbq0SUxMTHlaWlq5JI0YMWLr66+/Hi1J27ZtC7zyyis7FxYWNjHG2IqKCuOvLrWJq6qqMrfffnvMd9991zQgIECbNm0KWbduXZAktW/fvvyss87aI0ndu3cvKywsDJWkxYsXhz300EPtd+7cGbh79+7A884776BuwaNHj97y2muvRfXs2bPoo48+avnjjz/m1nQcnsyuvvrqjj/88EPT4OBgm5WVlSvV3GXde7Hn119/DY6Li9t72WWXlda0XGut3/J9+/aZa665plNOTk5YQECA1qxZEypVt7hfd911sRUVFQGXX375du9+9/XJJ59EPPfcc2327t0bsGPHjiCXy7VH0kH7cPDgwdsCAwOVlpZW3qFDh/KlS5c2+fzzz5vl5eWFz507t6Uk7dy5MzAnJ6dJSEiI7dat2+7k5OR9kvTll182u/766zd7u663bt268scff2xyqPN9yJAh2yXprLPO2n3PPff4bS2u6Vyo6Vz86quvTlm1alWTnj17JktSRUWF6dGjxy7fZW7dujVw586dgZdccskuSbr22mu3DhkypE7jRIwfP77NRx991Grbtm1BmzZtWu4v5sB96Wn5bxoSElI1adKkNa1bt66xqy4aJjc3N2zp0qWrY2NjK3r06JG8YMGCppdeemnpLbfc0qm0tDSgWbNmVe+8807LIUOGbPO9iNOsWbOqv/zlL20eeeSR1nffffemjz/+uOXq1auzAgICtGXLlsCoqKjKCy+8cMfAgQNLxowZ4/ez15f3otPs2bObP/zww+369++ff7h5DpSTkxM2cuRIv63uN91006bRo0d3mTp1atn5559fesMNN2z1l4T+85//LGzdunXlrl27TPfu3V1XXXXV9jZt2lR6L2S/+OKLxddff33Miy++GP3UU09t8F7Ivvnmm7c+8cQT0XWtc20EBQUpJSWlLCsrq0lp7p71AAAgAElEQVSvXr32HDDNrl+/PliSantbx2WXXVb6xBNPtIuNje3au3fv0mHDhm3znuNAbdBCDpyELrzwwt3bt28P2rBhQ1BwcLD17UZaXl5uJCk4OFhLly7Nvfzyy7fPnz+/xfnnn58gSW+//fbaRx99dH1RUVFIjx49XN5WYl+hoaH7vw0GBgbK7XYba60ZMmTIVm83ucLCwqznnntufXR0dGVWVlbOBRdcsPOVV16JHjp0aGxlZaUiIiLc3ti8vLyc1atXZ9d2/f5Ya018fPz+bnr5+fk5/+///b+fvdObNGliJSkgIOA39Q8ICJDb7Tbz58+P+PrrryMyMzPzVq5cmZOSkrJnz549AVL1B3hAQPXbaVBQkNxut/GZ33+WUwPffVOX+Q5n/Pjx7c8777ydP//8c/a8efMK9u3b5/f9vzZx06ZNa7V169agFStW5Obl5eVERkZWeLdFSEiI77633m0xbty4zi+99NLa/Pz8nPHjx68vLy8/aLmjRo3avnDhwuazZs1qkZaWVtamTZvKmo7Dk0laWtqe5cuX77894a233lr71Vdf5W/fvv2wx4j3Ys/atWtXWGv15JNPnlpT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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "yvKq_DJbusj_"
      },
      "source": [
        "### **Asia**\n",
        "\n",
        "\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "siMEFzWvLx4K",
        "outputId": "2939004c-bce3-4dad-e8c6-804222386cd4"
      },
      "source": [
        "Economia_digital_asia = [\"Korea\" , \"Turkey\"]\n",
        "\n",
        "Asia_Edigital = Economia_digital_paises.loc[Economia_digital_asia]\n",
        "Asia_Edigital.round(3)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Employers using computer</th>\n",
              "      <th>Bussiness through computer networks</th>\n",
              "      <th>Bussineses demand Big data analyst</th>\n",
              "      <th>Businesses training employers in ICT</th>\n",
              "      <th>Bussines offered ICT specialist</th>\n",
              "      <th>GERD as a percentage of GDP</th>\n",
              "      <th>Total R&amp;D personnel per thousand total employment</th>\n",
              "      <th>Unemployment rate</th>\n",
              "      <th>Invest in TICS and I+D $US</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Country</th>\n",
              "      <th>Time</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th rowspan=\"4\" valign=\"top\">Korea</th>\n",
              "      <th>2016</th>\n",
              "      <td>68.170</td>\n",
              "      <td>11.170</td>\n",
              "      <td>2.285</td>\n",
              "      <td>12.348</td>\n",
              "      <td>4.198</td>\n",
              "      <td>3.987</td>\n",
              "      <td>16.942</td>\n",
              "      <td>3.797</td>\n",
              "      <td>4954</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>66.780</td>\n",
              "      <td>11.430</td>\n",
              "      <td>4.510</td>\n",
              "      <td>14.124</td>\n",
              "      <td>3.962</td>\n",
              "      <td>4.292</td>\n",
              "      <td>17.631</td>\n",
              "      <td>3.765</td>\n",
              "      <td>4914</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>66.880</td>\n",
              "      <td>15.700</td>\n",
              "      <td>4.550</td>\n",
              "      <td>15.468</td>\n",
              "      <td>5.185</td>\n",
              "      <td>4.516</td>\n",
              "      <td>18.685</td>\n",
              "      <td>3.933</td>\n",
              "      <td>5130</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>65.790</td>\n",
              "      <td>19.457</td>\n",
              "      <td>5.236</td>\n",
              "      <td>14.142</td>\n",
              "      <td>5.702</td>\n",
              "      <td>4.640</td>\n",
              "      <td>19.381</td>\n",
              "      <td>3.829</td>\n",
              "      <td>6324</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"4\" valign=\"top\">Turkey</th>\n",
              "      <th>2016</th>\n",
              "      <td>49.171</td>\n",
              "      <td>15.324</td>\n",
              "      <td>8.294</td>\n",
              "      <td>20.090</td>\n",
              "      <td>7.056</td>\n",
              "      <td>0.791</td>\n",
              "      <td>10.840</td>\n",
              "      <td>8.102</td>\n",
              "      <td>2459</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>50.420</td>\n",
              "      <td>17.900</td>\n",
              "      <td>7.123</td>\n",
              "      <td>16.794</td>\n",
              "      <td>6.085</td>\n",
              "      <td>0.886</td>\n",
              "      <td>11.451</td>\n",
              "      <td>6.666</td>\n",
              "      <td>2234</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>50.562</td>\n",
              "      <td>16.344</td>\n",
              "      <td>6.324</td>\n",
              "      <td>17.536</td>\n",
              "      <td>4.951</td>\n",
              "      <td>0.839</td>\n",
              "      <td>11.833</td>\n",
              "      <td>5.202</td>\n",
              "      <td>1947</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>51.798</td>\n",
              "      <td>15.183</td>\n",
              "      <td>4.565</td>\n",
              "      <td>18.069</td>\n",
              "      <td>5.820</td>\n",
              "      <td>0.827</td>\n",
              "      <td>12.409</td>\n",
              "      <td>4.502</td>\n",
              "      <td>2165</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "              Employers using computer  ...  Invest in TICS and I+D $US\n",
              "Country Time                            ...                            \n",
              "Korea   2016                    68.170  ...                        4954\n",
              "        2017                    66.780  ...                        4914\n",
              "        2018                    66.880  ...                        5130\n",
              "        2019                    65.790  ...                        6324\n",
              "Turkey  2016                    49.171  ...                        2459\n",
              "        2017                    50.420  ...                        2234\n",
              "        2018                    50.562  ...                        1947\n",
              "        2019                    51.798  ...                        2165\n",
              "\n",
              "[8 rows x 9 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 190
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nK-M8OX8NAmf",
        "outputId": "13372ec9-3ca7-41ba-f443-db35c2f45680"
      },
      "source": [
        "Asia_Edigital.mean(1)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Country  Time\n",
              "Korea    2016    564.099600\n",
              "         2017    560.054924\n",
              "         2018    584.990840\n",
              "         2019    718.019843\n",
              "Turkey   2016    286.518716\n",
              "         2017    261.258272\n",
              "         2018    228.954631\n",
              "         2019    253.130479\n",
              "dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 191
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XyEjqsNant7u",
        "outputId": "c0c72a75-ae3e-4dd7-9e78-ba7c51026ea4"
      },
      "source": [
        "Asia_Edigital.mean(1).plot(kind='barh', color = \"darkgoldenrod\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7ffb44c4ce90>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 192
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "O7WGTGl_RKo-",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c18420e8-4d66-46ed-be42-9433626a788b"
      },
      "source": [
        "Asia_Edigital.plot(kind='bar',  stacked=True)\n",
        "plt.legend(title= '**Digital Economy Korea and Turkey (2016-2019)**', loc='best', ncol=3, bbox_to_anchor=(0.5, 1.05))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.legend.Legend at 0x7ffb44b85b90>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 193
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "0ExcdnOmuxQy"
      },
      "source": [
        "### **Estadísticas descriptivas de las variables**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SSyE2EBGPrY4"
      },
      "source": [
        "import numpy as np\n",
        "import pandas as pd"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Lrh16voBWS2T"
      },
      "source": [
        "X=Economia_digital[[\"Employers using computer\",\"Bussiness through computer networks\",\"Bussineses demand Big data analyst\",\"Businesses training employers in ICT\" , \"Bussines offered ICT specialist\" , \"GERD as a percentage of GDP\"]]\n",
        "y=Economia_digital[['Unemployment rate']]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b7m_ubD8iQ7Q",
        "outputId": "aae5401f-799d-4ca5-b2d7-b7d5dda937aa"
      },
      "source": [
        "y.describe().round(3)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unemployment rate</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>104.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>7.080</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>4.236</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>2.061</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>4.157</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>5.864</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>8.592</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>23.704</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "       Unemployment rate\n",
              "count            104.000\n",
              "mean               7.080\n",
              "std                4.236\n",
              "min                2.061\n",
              "25%                4.157\n",
              "50%                5.864\n",
              "75%                8.592\n",
              "max               23.704"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 196
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xn9SHViuiTVC",
        "outputId": "dc37323e-cb7b-4c90-a11e-e0f858082791"
      },
      "source": [
        "X.describe().round(3)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Employers using computer</th>\n",
              "      <th>Bussiness through computer networks</th>\n",
              "      <th>Bussineses demand Big data analyst</th>\n",
              "      <th>Businesses training employers in ICT</th>\n",
              "      <th>Bussines offered ICT specialist</th>\n",
              "      <th>GERD as a percentage of GDP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>104.000</td>\n",
              "      <td>104.000</td>\n",
              "      <td>104.000</td>\n",
              "      <td>104.000</td>\n",
              "      <td>104.000</td>\n",
              "      <td>104.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>61.043</td>\n",
              "      <td>23.599</td>\n",
              "      <td>9.445</td>\n",
              "      <td>21.962</td>\n",
              "      <td>8.624</td>\n",
              "      <td>1.995</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>14.548</td>\n",
              "      <td>9.450</td>\n",
              "      <td>4.694</td>\n",
              "      <td>8.819</td>\n",
              "      <td>2.812</td>\n",
              "      <td>0.963</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>41.935</td>\n",
              "      <td>11.019</td>\n",
              "      <td>2.285</td>\n",
              "      <td>7.025</td>\n",
              "      <td>1.923</td>\n",
              "      <td>0.262</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>48.788</td>\n",
              "      <td>18.162</td>\n",
              "      <td>6.304</td>\n",
              "      <td>14.118</td>\n",
              "      <td>6.466</td>\n",
              "      <td>1.239</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>59.442</td>\n",
              "      <td>21.884</td>\n",
              "      <td>8.138</td>\n",
              "      <td>21.270</td>\n",
              "      <td>8.699</td>\n",
              "      <td>1.921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>68.733</td>\n",
              "      <td>27.690</td>\n",
              "      <td>10.801</td>\n",
              "      <td>28.365</td>\n",
              "      <td>10.632</td>\n",
              "      <td>2.763</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>100.000</td>\n",
              "      <td>64.223</td>\n",
              "      <td>25.983</td>\n",
              "      <td>44.372</td>\n",
              "      <td>14.463</td>\n",
              "      <td>4.640</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "       Employers using computer  ...  GERD as a percentage of GDP\n",
              "count                   104.000  ...                      104.000\n",
              "mean                     61.043  ...                        1.995\n",
              "std                      14.548  ...                        0.963\n",
              "min                      41.935  ...                        0.262\n",
              "25%                      48.788  ...                        1.239\n",
              "50%                      59.442  ...                        1.921\n",
              "75%                      68.733  ...                        2.763\n",
              "max                     100.000  ...                        4.640\n",
              "\n",
              "[8 rows x 6 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 197
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7rtWAg_APxlC",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2b579b5b-e0b1-4051-b71a-1d6628443e0c"
      },
      "source": [
        "plt.hist(X[\"Employers using computer\"] , bins = 15 , color = 'steelblue')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([13., 17.,  9.,  6., 14.,  9., 11.,  3.,  9.,  4.,  2.,  2.,  0.,\n",
              "         0.,  5.]),\n",
              " array([ 41.935,  45.806,  49.677,  53.548,  57.419,  61.29 ,  65.161,\n",
              "         69.032,  72.903,  76.774,  80.645,  84.516,  88.387,  92.258,\n",
              "         96.129, 100.   ]),\n",
              " <a list of 15 Patch objects>)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 199
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TqJzE6SIa6Ey",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "dff7ab50-9b6d-4e22-b3a0-82f657694453"
      },
      "source": [
        "plt.hist(X[\"Bussiness through computer networks\"] , bins = 15 , color = 'olivedrab')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([13., 13., 25., 11., 22., 10.,  5.,  1.,  0.,  0.,  0.,  1.,  0.,\n",
              "         2.,  1.]),\n",
              " array([11.0193 , 14.56624, 18.11318, 21.66012, 25.20706, 28.754  ,\n",
              "        32.30094, 35.84788, 39.39482, 42.94176, 46.4887 , 50.03564,\n",
              "        53.58258, 57.12952, 60.67646, 64.2234 ]),\n",
              " <a list of 15 Patch objects>)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 200
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "v2ksizZgbUHJ",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "947fc6db-669e-4d08-c882-a92d0d3f6173"
      },
      "source": [
        "plt.hist(X[\"Bussineses demand Big data analyst\"], bins = 15 , color = 'tomato')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([ 3., 14., 20., 18., 17.,  9.,  5.,  5.,  1.,  5.,  3.,  0.,  2.,\n",
              "         1.,  1.]),\n",
              " array([ 2.284579  ,  3.86447373,  5.44436847,  7.0242632 ,  8.60415793,\n",
              "        10.18405267, 11.7639474 , 13.34384213, 14.92373687, 16.5036316 ,\n",
              "        18.08352633, 19.66342107, 21.2433158 , 22.82321053, 24.40310527,\n",
              "        25.983     ]),\n",
              " <a list of 15 Patch objects>)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 201
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6WhaDmr7bw-I",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "98d05df1-ee4a-4c18-d9c2-a43c84478059"
      },
      "source": [
        "plt.hist(X[\"Businesses training employers in ICT\" ], bins = 15 , color = 'chocolate')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([ 4., 11., 13.,  9.,  9.,  9.,  8.,  7., 13.,  7.,  4.,  5.,  1.,\n",
              "         2.,  2.]),\n",
              " array([ 7.024567  ,  9.51440253, 12.00423807, 14.4940736 , 16.98390913,\n",
              "        19.47374467, 21.9635802 , 24.45341573, 26.94325127, 29.4330868 ,\n",
              "        31.92292233, 34.41275787, 36.9025934 , 39.39242893, 41.88226447,\n",
              "        44.3721    ]),\n",
              " <a list of 15 Patch objects>)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 202
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXAAAAD4CAYAAAD1jb0+AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAANCklEQVR4nO3db4xl9V3H8fdHoH8oREAmBFmWRSUYAhXMWKkYNdAmKyWlJn0AKYYqyTzAKjWNCDGx+sBEo/ZPomBWoBAhtJFiSoh/WBcaYlKpu7CyC0sF29IuAjsNNm3VlK79+mDO2ullZu7sPWfn3h/7fiU3c8/vHu755LfMZ8/89p4zqSokSe35gWkHkCRNxgKXpEZZ4JLUKAtckhplgUtSo47dyIOdeuqptWXLlo08pCQ1b9euXV+rqrnR8Q0t8C1btrBz586NPKQkNS/J8yuNu4QiSY2ywCWpURa4JDXKApekRlngktQoC1ySGmWBS1KjLHBJapQFLkmN2tArMV/v9lx/1qDvd8EtK158pSka+s8Y/HPW5DwDl6RGWeCS1CgLXJIaZYFLUqMscElqlAUuSY2ywCWpURa4JDXKApekRlngktQoC1ySGjW2wJPckeRAkr3Lxv44yTNJnkzyN0lOOrIxJUmj1nMGfiewdWRsO3B+Vb0V+Dfg5oFzSZLGGFvgVfUo8MrI2ENVdbDb/Gdg0xHIJklawxBr4L8K/N0A7yNJOgy9CjzJ7wAHgXvW2Gchyc4kOxcXF/scTpK0zMQFnuT9wBXA+6qqVtuvqrZV1XxVzc/NzU16OEnSiIl+I0+SrcCNwM9X1X8PG0mStB7r+RjhvcDngHOT7E9yHfBnwInA9iS7k/zFEc4pSRox9gy8qq5eYfj2I5BFknQYvBJTkhplgUtSoyxwSWqUBS5JjbLAJalRFrgkNcoCl6RGWeCS1CgLXJIaZYFLUqMscElq1ER3I3w92HP9WdOOIEm9eAYuSY2ywCWpURa4JDXKApekRlngktQoC1ySGmWBS1KjLHBJapQFLkmNssAlqVEWuCQ1amyBJ7kjyYEke5eNnZJke5Jnu68nH9mYkqRR6zkDvxPYOjJ2E7Cjqs4BdnTbkqQNNLbAq+pR4JWR4SuBu7rndwHvGTiXJGmMSdfAT6uqF7vnLwGnDZRHkrROvf8Rs6oKqNVeT7KQZGeSnYuLi30PJ0nqTFrgLyc5HaD7emC1HatqW1XNV9X83NzchIeTJI2atMAfAK7tnl8LfGaYOJKk9VrPxwjvBT4HnJtkf5LrgD8E3pnkWeAd3bYkaQON/Z2YVXX1Ki9dNnAWSdJh8EpMSWqUBS5JjbLAJalRFrgkNcoCl6RGWeCS1CgLXJIaZYFLUqMscElqlAUuSY0aeym9pmfP9WdNO8KGu+CW56cdQWqGZ+CS1CgLXJIaZYFLUqMscElqlAUuSY2ywCWpURa4JDXKApekRlngktQoC1ySGmWBS1KjLHBJalSvAk/ym0meSrI3yb1J3jRUMEnS2iYu8CRnAL8BzFfV+cAxwFVDBZMkra3vEsqxwJuTHAscD/xH/0iSpPWY+H7gVfVCkj8BvgL8D/BQVT00ul+SBWABYPPmzZMeTkeJoe+B7v3F9XrWZwnlZOBK4Gzgh4G3JLlmdL+q2lZV81U1Pzc3N3lSSdL36bOE8g7gS1W1WFXfAe4HfmaYWJKkcfoU+FeAi5McnyTAZcC+YWJJksaZuMCr6jHgPuBxYE/3XtsGyiVJGqPXLzWuqg8DHx4oiyTpMHglpiQ1ygKXpEZZ4JLUKAtckhplgUtSoyxwSWqUBS5JjbLAJalRFrgkNcoCl6RG9bqUXpp1Q99f/EjwHuialGfgktQoC1ySGmWBS1KjLHBJapQFLkmNssAlqVEWuCQ1ygKXpEZZ4JLUKAtckhplgUtSoyxwSWpUrwJPclKS+5I8k2RfkrcPFUyStLa+dyP8OPD3VfXeJG8Ajh8gkyRpHSYu8CQ/CPwc8H6AqnoVeHWYWJKkcfosoZwNLAKfSPJEktuSvGV0pyQLSXYm2bm4uNjjcJKk5foU+LHATwK3VtVFwH8BN43uVFXbqmq+qubn5uZ6HE6StFyfAt8P7K+qx7rt+1gqdEnSBpi4wKvqJeCrSc7thi4Dnh4klSRprL6fQvl14J7uEyhfBH6lfyRJ0nr0KvCq2g3MD5RFknQYvBJTkhplgUtSoyxwSWqUBS5JjbLAJalRFrgkNcoCl6RGWeCS1CgLXJIaZYFLUqP63gtF0uvcnuvPGvw9L7jl+cHf82jkGbgkNcoCl6RGWeCS1CgLXJIaZYFLUqMscElqlAUuSY2ywCWpURa4JDXKApekRlngktQoC1ySGtW7wJMck+SJJA8OEUiStD5DnIHfAOwb4H0kSYehV4En2QS8C7htmDiSpPXqez/wjwE3AieutkOSBWABYPPmzRMf6Ejck1h6PfJ75egx8Rl4kiuAA1W1a639qmpbVc1X1fzc3Nykh5MkjeizhHIJ8O4kXwY+CVya5O5BUkmSxpq4wKvq5qraVFVbgKuAh6vqmsGSSZLW5OfAJalRg/xS46r6LPDZId5LkrQ+noFLUqMscElqlAUuSY2ywCWpURa4JDXKApekRlngktQoC1ySGmWBS1KjLHBJapQFLkmNssAlqVEWuCQ1ygKXpEZZ4JLUKAtckhplgUtSoyxwSWqUBS5JjbLAJalRFrgkNcoCl6RGWeCS1KiJCzzJmUkeSfJ0kqeS3DBkMEnS2o7t8d8eBD5UVY8nORHYlWR7VT09UDZJ0homPgOvqher6vHu+TeBfcAZQwWTJK2tzxn4/0uyBbgIeGyF1xaABYDNmzcPcThJ+j57rj9r2hHGuuCW5wd/z97/iJnkBODTwAer6hujr1fVtqqar6r5ubm5voeTJHV6FXiS41gq73uq6v5hIkmS1qPPp1AC3A7sq6qPDBdJkrQefc7ALwF+Gbg0ye7ucflAuSRJY0z8j5hV9U9ABswiSToMXokpSY2ywCWpURa4JDXKApekRlngktQoC1ySGmWBS1KjLHBJapQFLkmNssAlqVGD3A9ckg5HC/fvboFn4JLUKAtckhplgUtSoyxwSWqUBS5JjbLAJalRFrgkNcoCl6RGWeCS1CgLXJIaZYFLUqMscElqVK8CT7I1yReSPJfkpqFCSZLGm7jAkxwD/Dnwi8B5wNVJzhsqmCRpbX3OwN8GPFdVX6yqV4FPAlcOE0uSNE6f+4GfAXx12fZ+4KdHd0qyACx0m99K8oUexzySTgW+Nu0QY5hxGLOecdbzgRkP361ZaXS9GVe8gfoR/4UOVbUN2Hakj9NXkp1VNT/tHGsx4zBmPeOs5wMzDqVvxj5LKC8AZy7b3tSNSZI2QJ8C/xfgnCRnJ3kDcBXwwDCxJEnjTLyEUlUHk3wA+AfgGOCOqnpqsGQbb+aXeTDjUGY946znAzMOpVfGVNVQQSRJG8grMSWpURa4JDXqqCzwJHckOZBk77KxU5JsT/Js9/XkGcz4e0leSLK7e1w+xXxnJnkkydNJnkpyQzc+M/O4RsZZmsc3Jfl8kn/tMv5+N352kse621R8qvugwKxlvDPJl5bN44XTytjlOSbJE0ke7LZnZg7XyNhrDo/KAgfuBLaOjN0E7Kiqc4Ad3fY03clrMwJ8tKou7B5/u8GZljsIfKiqzgMuBn6tu5XCLM3jahlhdubx28ClVfUTwIXA1iQXA3/UZfwx4D+B62YwI8BvLZvH3dOLCMANwL5l27M0h4eMZoQec3hUFnhVPQq8MjJ8JXBX9/wu4D0bGmrEKhlnRlW9WFWPd8+/ydL/lGcwQ/O4RsaZUUu+1W0e1z0KuBS4rxuf9jyulnFmJNkEvAu4rdsOMzSH8NqMQzgqC3wVp1XVi93zl4DTphlmDR9I8mS3xDLVZZ5DkmwBLgIeY0bncSQjzNA8dj9W7wYOANuBfwe+XlUHu132M+W/eEYzVtWhefyDbh4/muSNU4z4MeBG4Lvd9g8xY3PIazMeMvEcWuArqKXPVs7UGUbnVuBHWfox9kXgT6cbB5KcAHwa+GBVfWP5a7MyjytknKl5rKr/raoLWbqa+W3Aj08zz0pGMyY5H7iZpaw/BZwC/PY0siW5AjhQVbumcfz1WCNjrzm0wL/n5SSnA3RfD0w5z2tU1cvdN9J3gb9k6Zt9apIcx1Ix3lNV93fDMzWPK2WctXk8pKq+DjwCvB04KcmhC+1m5jYVyzJu7Zaoqqq+DXyC6c3jJcC7k3yZpbuiXgp8nNmaw9dkTHJ33zm0wL/nAeDa7vm1wGemmGVFh4qx80vA3tX23YAsAW4H9lXVR5a9NDPzuFrGGZvHuSQndc/fDLyTpbX6R4D3drtNex5XyvjMsr+ow9L68lTmsapurqpNVbWFpVt6PFxV72OG5nCVjNf0nsOqOuoewL0s/ej8HZbWxq5jac1sB/As8I/AKTOY8a+APcCTLBXl6VPM97MsLY88CezuHpfP0jyukXGW5vGtwBNdlr3A73bjPwJ8HngO+GvgjTOY8eFuHvcCdwMnTCvjsqy/ADw4a3O4RsZec+il9JLUKJdQJKlRFrgkNcoCl6RGWeCS1CgLXJIaZYFLUqMscElq1P8BHMUWYQEhy30AAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WkEvtrZYcdMA",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "840c4456-f474-46e2-d6bb-bf57f14b8ddf"
      },
      "source": [
        "plt.hist(X[\"Bussines offered ICT specialist\"], bins = 15 , color = 'darkseagreen')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([ 2.,  1.,  3.,  3., 14., 12.,  8.,  8., 10., 13.,  8.,  6.,  7.,\n",
              "         7.,  2.]),\n",
              " array([ 1.92345   ,  2.75944667,  3.59544333,  4.43144   ,  5.26743667,\n",
              "         6.10343333,  6.93943   ,  7.77542667,  8.61142333,  9.44742   ,\n",
              "        10.28341667, 11.11941333, 11.95541   , 12.79140667, 13.62740333,\n",
              "        14.4634    ]),\n",
              " <a list of 15 Patch objects>)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 203
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8xBCiUxQc5Ux",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7ea809ca-9c77-4779-d232-5652dda794ab"
      },
      "source": [
        "plt.hist(X[\"GERD as a percentage of GDP\"], bins = 15 , color = 'seagreen')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([ 4.,  4.,  7., 25.,  7.,  9., 15.,  2.,  9., 12.,  5.,  0.,  1.,\n",
              "         2.,  2.]),\n",
              " array([0.26154565, 0.5534552 , 0.84536475, 1.1372743 , 1.42918386,\n",
              "        1.72109341, 2.01300296, 2.30491251, 2.59682207, 2.88873162,\n",
              "        3.18064117, 3.47255073, 3.76446028, 4.05636983, 4.34827938,\n",
              "        4.64018894]),\n",
              " <a list of 15 Patch objects>)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 204
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OngCBw9Ue0dA",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c3336618-7b8b-4e57-ec5e-e1d17680d191"
      },
      "source": [
        "fig, ax =plt.subplots()\n",
        "ax.scatter(Economia_digital_paises[\"Employers using computer\"], Economia_digital_paises['Unemployment rate'], color = 'slateblue', marker='^')\n",
        "ax.scatter(Economia_digital[\"Businesses training employers in ICT\"], Economia_digital['Unemployment rate'], color = 'peru')\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tGP1EmGSfwJ8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "bf2b01db-5c5f-4be3-88e6-97e2dc80a6af"
      },
      "source": [
        "fig, ax =plt.subplots()\n",
        "ax.scatter(Economia_digital[\"Bussiness through computer networks\"], Economia_digital['Unemployment rate'], color = 'green', marker='D', alpha = 0.5)\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cp03XwYbhOS5",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "37f07af8-8330-4da5-c357-c6df6845fa80"
      },
      "source": [
        "fig, ax =plt.subplots()\n",
        "ax.scatter(Economia_digital[\"Bussines offered ICT specialist\"], Economia_digital['Unemployment rate'], color = 'darkseagreen')\n",
        "ax.scatter(Economia_digital[\"Bussineses demand Big data analyst\"], Economia_digital['Unemployment rate'], color = 'coral')\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pf1UjY6Yh5Ut",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "126c11e8-e7c7-4f50-8265-49ad7a896cdc"
      },
      "source": [
        "fig, ax =plt.subplots()\n",
        "ax.scatter(Economia_digital[\"GERD as a percentage of GDP\"], Economia_digital['Unemployment rate'], color = 'darkslategrey')\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "M4peXMa1qEyC"
      },
      "source": [
        "### ***Generamos Index de la variable tiempo para medirlo por años***"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0GRGUmRmqQSe",
        "outputId": "a232b85e-a824-4a44-c60d-e44e70ed1ee7"
      },
      "source": [
        "df_TIME = df.set_index('Time')\n",
        "df_TIME"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country</th>\n",
              "      <th>Employers using computer</th>\n",
              "      <th>Bussiness through computer networks</th>\n",
              "      <th>Bussineses demand Big data analyst</th>\n",
              "      <th>Businesses training employers in ICT</th>\n",
              "      <th>Bussines offered ICT specialist</th>\n",
              "      <th>GERD as a percentage of GDP</th>\n",
              "      <th>Total R&amp;D personnel per thousand total employment</th>\n",
              "      <th>Unemployment rate</th>\n",
              "      <th>Invest in TICS and I+D $US</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Time</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Belgium</td>\n",
              "      <td>63.427500</td>\n",
              "      <td>25.609600</td>\n",
              "      <td>6.9567</td>\n",
              "      <td>33.586100</td>\n",
              "      <td>10.63930</td>\n",
              "      <td>2.523377</td>\n",
              "      <td>16.920264</td>\n",
              "      <td>7.887972</td>\n",
              "      <td>1752</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>Belgium</td>\n",
              "      <td>64.324000</td>\n",
              "      <td>25.791600</td>\n",
              "      <td>7.6874</td>\n",
              "      <td>34.649900</td>\n",
              "      <td>13.01940</td>\n",
              "      <td>2.667015</td>\n",
              "      <td>17.402117</td>\n",
              "      <td>7.147249</td>\n",
              "      <td>1885</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>Belgium</td>\n",
              "      <td>64.316800</td>\n",
              "      <td>29.921200</td>\n",
              "      <td>8.2354</td>\n",
              "      <td>35.579700</td>\n",
              "      <td>12.82850</td>\n",
              "      <td>2.673260</td>\n",
              "      <td>18.274706</td>\n",
              "      <td>6.003281</td>\n",
              "      <td>7768</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>Belgium</td>\n",
              "      <td>64.992900</td>\n",
              "      <td>30.549500</td>\n",
              "      <td>21.9476</td>\n",
              "      <td>36.373000</td>\n",
              "      <td>14.46340</td>\n",
              "      <td>2.889670</td>\n",
              "      <td>19.653375</td>\n",
              "      <td>5.409494</td>\n",
              "      <td>9856</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Colombia</td>\n",
              "      <td>59.141383</td>\n",
              "      <td>27.740196</td>\n",
              "      <td>2.7623</td>\n",
              "      <td>7.024567</td>\n",
              "      <td>1.92345</td>\n",
              "      <td>0.295756</td>\n",
              "      <td>2.048770</td>\n",
              "      <td>9.534614</td>\n",
              "      <td>1689</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>64.396500</td>\n",
              "      <td>25.953300</td>\n",
              "      <td>14.3560</td>\n",
              "      <td>29.403400</td>\n",
              "      <td>10.13000</td>\n",
              "      <td>1.755940</td>\n",
              "      <td>14.822200</td>\n",
              "      <td>3.963302</td>\n",
              "      <td>12354</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>43.346600</td>\n",
              "      <td>16.356700</td>\n",
              "      <td>4.4208</td>\n",
              "      <td>11.746752</td>\n",
              "      <td>12.76840</td>\n",
              "      <td>2.788210</td>\n",
              "      <td>4.465639</td>\n",
              "      <td>4.933998</td>\n",
              "      <td>1427</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>50.000000</td>\n",
              "      <td>21.200000</td>\n",
              "      <td>5.2346</td>\n",
              "      <td>12.335000</td>\n",
              "      <td>13.14050</td>\n",
              "      <td>2.846766</td>\n",
              "      <td>4.353933</td>\n",
              "      <td>4.406087</td>\n",
              "      <td>1544</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>48.456700</td>\n",
              "      <td>18.465348</td>\n",
              "      <td>6.1344</td>\n",
              "      <td>12.768400</td>\n",
              "      <td>12.08600</td>\n",
              "      <td>2.947206</td>\n",
              "      <td>5.235000</td>\n",
              "      <td>3.937702</td>\n",
              "      <td>1659</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>49.000000</td>\n",
              "      <td>21.200000</td>\n",
              "      <td>11.8398</td>\n",
              "      <td>23.575700</td>\n",
              "      <td>13.53340</td>\n",
              "      <td>3.067476</td>\n",
              "      <td>7.345000</td>\n",
              "      <td>3.716811</td>\n",
              "      <td>1765</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>104 rows × 10 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "             Country  ...  Invest in TICS and I+D $US\n",
              "Time                  ...                            \n",
              "2016         Belgium  ...                        1752\n",
              "2017         Belgium  ...                        1885\n",
              "2018         Belgium  ...                        7768\n",
              "2019         Belgium  ...                        9856\n",
              "2016        Colombia  ...                        1689\n",
              "...              ...  ...                         ...\n",
              "2019  United Kingdom  ...                       12354\n",
              "2016          Brazil  ...                        1427\n",
              "2017          Brazil  ...                        1544\n",
              "2018          Brazil  ...                        1659\n",
              "2019          Brazil  ...                        1765\n",
              "\n",
              "[104 rows x 10 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 209
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "qUzoR4xLppt6"
      },
      "source": [
        "### ***2016***"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DERyVXDZp1nF",
        "outputId": "4a763db8-75df-415d-88b5-588691894362"
      },
      "source": [
        "DF_2016=df_TIME.loc[2016]\n",
        "DF_2016"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country</th>\n",
              "      <th>Employers using computer</th>\n",
              "      <th>Bussiness through computer networks</th>\n",
              "      <th>Bussineses demand Big data analyst</th>\n",
              "      <th>Businesses training employers in ICT</th>\n",
              "      <th>Bussines offered ICT specialist</th>\n",
              "      <th>GERD as a percentage of GDP</th>\n",
              "      <th>Total R&amp;D personnel per thousand total employment</th>\n",
              "      <th>Unemployment rate</th>\n",
              "      <th>Invest in TICS and I+D $US</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Time</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Belgium</td>\n",
              "      <td>63.427500</td>\n",
              "      <td>25.609600</td>\n",
              "      <td>6.956700</td>\n",
              "      <td>33.586100</td>\n",
              "      <td>10.639300</td>\n",
              "      <td>2.523377</td>\n",
              "      <td>16.920264</td>\n",
              "      <td>7.887972</td>\n",
              "      <td>1752</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Colombia</td>\n",
              "      <td>59.141383</td>\n",
              "      <td>27.740196</td>\n",
              "      <td>2.762300</td>\n",
              "      <td>7.024567</td>\n",
              "      <td>1.923450</td>\n",
              "      <td>0.295756</td>\n",
              "      <td>2.048770</td>\n",
              "      <td>9.534614</td>\n",
              "      <td>1689</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Czech Republic</td>\n",
              "      <td>47.616300</td>\n",
              "      <td>26.586500</td>\n",
              "      <td>6.757100</td>\n",
              "      <td>21.701700</td>\n",
              "      <td>5.952500</td>\n",
              "      <td>1.670029</td>\n",
              "      <td>12.496055</td>\n",
              "      <td>4.026550</td>\n",
              "      <td>686</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Denmark</td>\n",
              "      <td>85.780000</td>\n",
              "      <td>29.026600</td>\n",
              "      <td>9.366300</td>\n",
              "      <td>28.410200</td>\n",
              "      <td>11.350300</td>\n",
              "      <td>3.092834</td>\n",
              "      <td>21.852963</td>\n",
              "      <td>5.945430</td>\n",
              "      <td>983</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Estonia</td>\n",
              "      <td>46.523600</td>\n",
              "      <td>18.322200</td>\n",
              "      <td>11.691000</td>\n",
              "      <td>13.415700</td>\n",
              "      <td>8.995300</td>\n",
              "      <td>1.232657</td>\n",
              "      <td>9.239635</td>\n",
              "      <td>6.939463</td>\n",
              "      <td>104</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Finland</td>\n",
              "      <td>75.537000</td>\n",
              "      <td>21.752000</td>\n",
              "      <td>10.258200</td>\n",
              "      <td>34.346200</td>\n",
              "      <td>8.599300</td>\n",
              "      <td>2.724418</td>\n",
              "      <td>18.708307</td>\n",
              "      <td>8.946171</td>\n",
              "      <td>656</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>France</td>\n",
              "      <td>43.660000</td>\n",
              "      <td>21.036900</td>\n",
              "      <td>8.340000</td>\n",
              "      <td>20.396800</td>\n",
              "      <td>7.487300</td>\n",
              "      <td>2.222384</td>\n",
              "      <td>15.679798</td>\n",
              "      <td>10.141752</td>\n",
              "      <td>9881</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Germany</td>\n",
              "      <td>59.742000</td>\n",
              "      <td>28.457200</td>\n",
              "      <td>9.344500</td>\n",
              "      <td>29.069700</td>\n",
              "      <td>8.641000</td>\n",
              "      <td>2.940389</td>\n",
              "      <td>15.070301</td>\n",
              "      <td>4.212946</td>\n",
              "      <td>9222</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Greece</td>\n",
              "      <td>43.419200</td>\n",
              "      <td>12.166600</td>\n",
              "      <td>8.686700</td>\n",
              "      <td>14.900600</td>\n",
              "      <td>6.828300</td>\n",
              "      <td>1.006778</td>\n",
              "      <td>9.350010</td>\n",
              "      <td>23.704153</td>\n",
              "      <td>992</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Hungary</td>\n",
              "      <td>45.888000</td>\n",
              "      <td>15.098700</td>\n",
              "      <td>4.904600</td>\n",
              "      <td>15.793400</td>\n",
              "      <td>10.095500</td>\n",
              "      <td>1.181150</td>\n",
              "      <td>7.994076</td>\n",
              "      <td>5.148054</td>\n",
              "      <td>667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Iceland</td>\n",
              "      <td>48.657600</td>\n",
              "      <td>14.567800</td>\n",
              "      <td>10.644470</td>\n",
              "      <td>11.509700</td>\n",
              "      <td>9.572374</td>\n",
              "      <td>2.109803</td>\n",
              "      <td>13.764500</td>\n",
              "      <td>3.506388</td>\n",
              "      <td>57</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Ireland</td>\n",
              "      <td>56.784400</td>\n",
              "      <td>30.253900</td>\n",
              "      <td>6.234000</td>\n",
              "      <td>30.432600</td>\n",
              "      <td>10.442300</td>\n",
              "      <td>1.172448</td>\n",
              "      <td>16.805006</td>\n",
              "      <td>8.520664</td>\n",
              "      <td>628</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Italy</td>\n",
              "      <td>48.411200</td>\n",
              "      <td>11.019300</td>\n",
              "      <td>7.877400</td>\n",
              "      <td>11.776300</td>\n",
              "      <td>5.451000</td>\n",
              "      <td>1.366422</td>\n",
              "      <td>11.672240</td>\n",
              "      <td>11.892414</td>\n",
              "      <td>7827</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Korea</td>\n",
              "      <td>68.170000</td>\n",
              "      <td>11.170000</td>\n",
              "      <td>2.284579</td>\n",
              "      <td>12.347680</td>\n",
              "      <td>4.198300</td>\n",
              "      <td>3.987037</td>\n",
              "      <td>16.941505</td>\n",
              "      <td>3.797298</td>\n",
              "      <td>4954</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Lithuania</td>\n",
              "      <td>43.531700</td>\n",
              "      <td>19.642400</td>\n",
              "      <td>10.297400</td>\n",
              "      <td>9.657300</td>\n",
              "      <td>6.479800</td>\n",
              "      <td>0.842410</td>\n",
              "      <td>7.963260</td>\n",
              "      <td>8.062168</td>\n",
              "      <td>109</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Netherlands</td>\n",
              "      <td>67.726600</td>\n",
              "      <td>25.299000</td>\n",
              "      <td>16.845000</td>\n",
              "      <td>22.158200</td>\n",
              "      <td>8.990800</td>\n",
              "      <td>2.150812</td>\n",
              "      <td>12.913958</td>\n",
              "      <td>6.058304</td>\n",
              "      <td>1106</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Norway</td>\n",
              "      <td>74.327400</td>\n",
              "      <td>27.673700</td>\n",
              "      <td>6.342300</td>\n",
              "      <td>41.995300</td>\n",
              "      <td>5.765500</td>\n",
              "      <td>2.044602</td>\n",
              "      <td>16.155876</td>\n",
              "      <td>4.812131</td>\n",
              "      <td>1343</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Poland</td>\n",
              "      <td>43.963800</td>\n",
              "      <td>12.380000</td>\n",
              "      <td>4.531700</td>\n",
              "      <td>11.616300</td>\n",
              "      <td>5.392400</td>\n",
              "      <td>0.962872</td>\n",
              "      <td>16.177251</td>\n",
              "      <td>6.244360</td>\n",
              "      <td>125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Portugal</td>\n",
              "      <td>42.232900</td>\n",
              "      <td>18.800100</td>\n",
              "      <td>10.422700</td>\n",
              "      <td>22.869000</td>\n",
              "      <td>6.505600</td>\n",
              "      <td>1.280749</td>\n",
              "      <td>6.943546</td>\n",
              "      <td>9.698991</td>\n",
              "      <td>677</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Turkey</td>\n",
              "      <td>49.171400</td>\n",
              "      <td>15.323800</td>\n",
              "      <td>8.294300</td>\n",
              "      <td>20.090000</td>\n",
              "      <td>7.055900</td>\n",
              "      <td>0.790652</td>\n",
              "      <td>10.840391</td>\n",
              "      <td>8.102002</td>\n",
              "      <td>2459</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>United States</td>\n",
              "      <td>65.378500</td>\n",
              "      <td>20.305400</td>\n",
              "      <td>9.895800</td>\n",
              "      <td>27.485000</td>\n",
              "      <td>6.474800</td>\n",
              "      <td>2.007637</td>\n",
              "      <td>7.655159</td>\n",
              "      <td>19.746448</td>\n",
              "      <td>87659</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Spain</td>\n",
              "      <td>58.274100</td>\n",
              "      <td>20.573100</td>\n",
              "      <td>6.916400</td>\n",
              "      <td>22.692900</td>\n",
              "      <td>12.997300</td>\n",
              "      <td>1.190476</td>\n",
              "      <td>14.984395</td>\n",
              "      <td>7.106420</td>\n",
              "      <td>5419</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Sweden</td>\n",
              "      <td>65.435240</td>\n",
              "      <td>28.233700</td>\n",
              "      <td>6.932100</td>\n",
              "      <td>24.828300</td>\n",
              "      <td>8.368300</td>\n",
              "      <td>3.247361</td>\n",
              "      <td>18.549806</td>\n",
              "      <td>5.086143</td>\n",
              "      <td>1835</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Switzerland</td>\n",
              "      <td>46.234234</td>\n",
              "      <td>50.384664</td>\n",
              "      <td>6.234000</td>\n",
              "      <td>18.283000</td>\n",
              "      <td>5.474800</td>\n",
              "      <td>2.866460</td>\n",
              "      <td>13.464570</td>\n",
              "      <td>11.114843</td>\n",
              "      <td>3243</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>60.661000</td>\n",
              "      <td>21.534100</td>\n",
              "      <td>13.738600</td>\n",
              "      <td>28.323600</td>\n",
              "      <td>12.641900</td>\n",
              "      <td>1.660871</td>\n",
              "      <td>13.148076</td>\n",
              "      <td>4.978137</td>\n",
              "      <td>11018</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>43.346600</td>\n",
              "      <td>16.356700</td>\n",
              "      <td>4.420800</td>\n",
              "      <td>11.746752</td>\n",
              "      <td>12.768400</td>\n",
              "      <td>2.788210</td>\n",
              "      <td>4.465639</td>\n",
              "      <td>4.933998</td>\n",
              "      <td>1427</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "             Country  ...  Invest in TICS and I+D $US\n",
              "Time                  ...                            \n",
              "2016         Belgium  ...                        1752\n",
              "2016        Colombia  ...                        1689\n",
              "2016  Czech Republic  ...                         686\n",
              "2016         Denmark  ...                         983\n",
              "2016         Estonia  ...                         104\n",
              "2016         Finland  ...                         656\n",
              "2016          France  ...                        9881\n",
              "2016         Germany  ...                        9222\n",
              "2016          Greece  ...                         992\n",
              "2016         Hungary  ...                         667\n",
              "2016         Iceland  ...                          57\n",
              "2016         Ireland  ...                         628\n",
              "2016           Italy  ...                        7827\n",
              "2016           Korea  ...                        4954\n",
              "2016       Lithuania  ...                         109\n",
              "2016     Netherlands  ...                        1106\n",
              "2016          Norway  ...                        1343\n",
              "2016          Poland  ...                         125\n",
              "2016        Portugal  ...                         677\n",
              "2016          Turkey  ...                        2459\n",
              "2016   United States  ...                       87659\n",
              "2016           Spain  ...                        5419\n",
              "2016          Sweden  ...                        1835\n",
              "2016     Switzerland  ...                        3243\n",
              "2016  United Kingdom  ...                       11018\n",
              "2016          Brazil  ...                        1427\n",
              "\n",
              "[26 rows x 10 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 210
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1Pa21dY-qgHT"
      },
      "source": [
        "X=DF_2016[[\"Employers using computer\",\"Bussiness through computer networks\",\"Bussineses demand Big data analyst\",\"Businesses training employers in ICT\" , \"Bussines offered ICT specialist\" , \"GERD as a percentage of GDP\"]]\n",
        "y=DF_2016[['Unemployment rate']]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Vt4BNfR3qlpw"
      },
      "source": [
        "import time \n",
        "from sklearn import linear_model\n",
        "from sklearn.linear_model import LinearRegression\n",
        "from sklearn.metrics import mean_squared_error, r2_score\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "y1oKsic5qpLy",
        "outputId": "ba5c4459-3ea1-4466-f47a-95a2022bd47b"
      },
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "X_train, X_eval, y_train, y_eval = train_test_split(X, y, test_size = 0.1, shuffle=False)\n",
        "linear_model = LinearRegression()\n",
        "linear_model.fit(X_train,y_train)\n",
        "start_time = time.process_time()\n",
        "y_pred_in = linear_model.predict(X_train)\n",
        "y_pred_out = linear_model.predict(X_eval) \n",
        "print(\"Modelo Lineal 2016\")\n",
        "print(\"Coeficientes\", linear_model.coef_)  \n",
        "print(\"Intercepto\",linear_model.intercept_)\n",
        "print(\"El tiempo de ejecución es\", time.process_time() - start_time, \"segundos\")\n",
        "print(\"El error cuadratico dentro de muestra\",mean_squared_error(y_train, y_pred_in))\n",
        "print(\"El error cuadratico fuera de muestra\",mean_squared_error(y_eval, y_pred_out))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Modelo Lineal 2016\n",
            "Coeficientes [[ 0.05193827 -0.33222316  0.34049793  0.19295405 -0.48634029 -2.22509644]]\n",
            "Intercepto [13.20753177]\n",
            "El tiempo de ejecución es 0.0037787420000015004 segundos\n",
            "El error cuadratico dentro de muestra 16.164399733158604\n",
            "El error cuadratico fuera de muestra 92.51636086193514\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Qh--2o0YqurM",
        "outputId": "57e06118-c9dd-479a-e0c3-e760e207dba1"
      },
      "source": [
        "from sklearn.linear_model import Lasso\n",
        "lasso_model = Lasso(alpha=0.5)  \n",
        "start_time =time.process_time()\n",
        "lasso_model.fit(X_train,y_train)\n",
        "\n",
        "y_pred_in= lasso_model.predict(X_train)\n",
        "y_pred_out=lasso_model.predict(X_eval)\n",
        "\n",
        "print(\"Modelo Lasso 2016 \")\n",
        "print(\"Los coeficientes son\", lasso_model.coef_)\n",
        "print(\"El intercepto es\", lasso_model.intercept_)\n",
        "print(\"El tiempo de ejecucción es \", time.process_time()-start_time, \"en segundos\")\n",
        "print(\"El error cuadratico dentro de muestra es\", mean_squared_error(y_train,y_pred_in))\n",
        "print(\"El error cuadratico fuera de muesta es \", mean_squared_error(y_eval, y_pred_out))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Modelo Lasso 2016 \n",
            "Los coeficientes son [-0.         -0.26575456  0.25148704  0.14512725 -0.36361021 -1.13155826]\n",
            "El intercepto es [13.54652203]\n",
            "El tiempo de ejecucción es  0.005449306999999237 en segundos\n",
            "El error cuadratico dentro de muestra es 16.85681014793037\n",
            "El error cuadratico fuera de muesta es  53.10386011917901\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MO2k0mjvq4Ps",
        "outputId": "83534dc9-b29d-47a7-d262-483c1b2443d8"
      },
      "source": [
        "from sklearn.linear_model import Ridge\n",
        "\n",
        "ridge_model=Ridge(alpha=0.5)\n",
        "start_time= time.process_time()\n",
        "ridge_model.fit(X_train, y_train)\n",
        "\n",
        "y_pred_in =ridge_model.predict(X_train)\n",
        "y_pred_out =ridge_model.predict(X_eval)\n",
        "\n",
        "\n",
        "print(\"Modelo Ridge 2016 \")\n",
        "print(\"Los coeficientes son\", ridge_model.coef_)\n",
        "print(\"El intercepto es\", ridge_model.intercept_)\n",
        "print(\"El tiempo de ejecucción es \", time.process_time()-start_time, \"en segundos\")\n",
        "print(\"El error cuadratico dentro de muestra es\", mean_squared_error(y_train,y_pred_in))\n",
        "print(\"El error cuadratico fuera de muesta es \", mean_squared_error(y_eval, y_pred_out))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Modelo Ridge 2016 \n",
            "Los coeficientes son [[ 0.04661322 -0.32825649  0.33885019  0.19126689 -0.48593707 -2.12294515]]\n",
            "El intercepto es [13.28551841]\n",
            "El tiempo de ejecucción es  0.011087348000003772 en segundos\n",
            "El error cuadratico dentro de muestra es 16.16917123058649\n",
            "El error cuadratico fuera de muesta es  88.9974734871955\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3nOOfb2YrHpT",
        "outputId": "d9627968-a1ff-4da0-f6e6-331f5a0644ad"
      },
      "source": [
        "from sklearn.linear_model import ElasticNet\n",
        "\n",
        "elasticnet_model=ElasticNet(alpha=0.5,l1_ratio=0.5)\n",
        "start_time= time.process_time()\n",
        "elasticnet_model.fit(X_train, y_train)\n",
        "\n",
        "y_pred_in =elasticnet_model.predict(X_train)\n",
        "y_pred_out =elasticnet_model.predict(X_eval)\n",
        "\n",
        "print(\"Modelo ElasticNet 2016\")\n",
        "print(\"Los coeficientes son\", elasticnet_model.coef_)\n",
        "print(\"El intercepto es\", elasticnet_model.intercept_)\n",
        "print(\"El tiempo de ejecucción es \", time.process_time()-start_time, \"en segundos\")\n",
        "print(\"El error cuadratico dentro de muestra es\", mean_squared_error(y_train,y_pred_in))\n",
        "print(\"El error cuadratico fuera de muesta es \", mean_squared_error(y_eval, y_pred_out))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Modelo ElasticNet 2016\n",
            "Los coeficientes son [-0.00383335 -0.27506782  0.28102643  0.15684374 -0.41150164 -1.08672654]\n",
            "El intercepto es [13.75927622]\n",
            "El tiempo de ejecucción es  0.01216493399999763 en segundos\n",
            "El error cuadratico dentro de muestra es 16.81842318406491\n",
            "El error cuadratico fuera de muesta es  54.61643053271541\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2tyuwEV6rwnS"
      },
      "source": [
        "### ***2017***"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LlxaNIMOr0g3",
        "outputId": "6ecc52a8-204c-4703-c2fd-546de0e0d639"
      },
      "source": [
        "DF_2017=df_TIME.loc[2017]\n",
        "DF_2017"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country</th>\n",
              "      <th>Employers using computer</th>\n",
              "      <th>Bussiness through computer networks</th>\n",
              "      <th>Bussineses demand Big data analyst</th>\n",
              "      <th>Businesses training employers in ICT</th>\n",
              "      <th>Bussines offered ICT specialist</th>\n",
              "      <th>GERD as a percentage of GDP</th>\n",
              "      <th>Total R&amp;D personnel per thousand total employment</th>\n",
              "      <th>Unemployment rate</th>\n",
              "      <th>Invest in TICS and I+D $US</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Time</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>Belgium</td>\n",
              "      <td>64.324000</td>\n",
              "      <td>25.791600</td>\n",
              "      <td>7.687400</td>\n",
              "      <td>34.64990</td>\n",
              "      <td>13.019400</td>\n",
              "      <td>2.667015</td>\n",
              "      <td>17.402117</td>\n",
              "      <td>7.147249</td>\n",
              "      <td>1885</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>Colombia</td>\n",
              "      <td>58.257144</td>\n",
              "      <td>25.456616</td>\n",
              "      <td>3.214500</td>\n",
              "      <td>7.97355</td>\n",
              "      <td>2.032312</td>\n",
              "      <td>0.261546</td>\n",
              "      <td>2.006793</td>\n",
              "      <td>9.720731</td>\n",
              "      <td>1469</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>Czech Republic</td>\n",
              "      <td>48.831800</td>\n",
              "      <td>23.953400</td>\n",
              "      <td>5.673400</td>\n",
              "      <td>22.98450</td>\n",
              "      <td>6.752200</td>\n",
              "      <td>1.768550</td>\n",
              "      <td>13.044230</td>\n",
              "      <td>2.940991</td>\n",
              "      <td>649</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>Denmark</td>\n",
              "      <td>96.740000</td>\n",
              "      <td>30.237200</td>\n",
              "      <td>9.870000</td>\n",
              "      <td>26.51360</td>\n",
              "      <td>12.101200</td>\n",
              "      <td>3.025317</td>\n",
              "      <td>21.644500</td>\n",
              "      <td>5.890500</td>\n",
              "      <td>1104</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>Estonia</td>\n",
              "      <td>48.473000</td>\n",
              "      <td>19.063900</td>\n",
              "      <td>8.040000</td>\n",
              "      <td>13.21420</td>\n",
              "      <td>13.318500</td>\n",
              "      <td>1.275560</td>\n",
              "      <td>9.427903</td>\n",
              "      <td>5.921910</td>\n",
              "      <td>90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>Finland</td>\n",
              "      <td>76.369200</td>\n",
              "      <td>24.218000</td>\n",
              "      <td>11.380000</td>\n",
              "      <td>37.51390</td>\n",
              "      <td>9.738700</td>\n",
              "      <td>2.727871</td>\n",
              "      <td>19.126591</td>\n",
              "      <td>8.777300</td>\n",
              "      <td>683</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>France</td>\n",
              "      <td>59.782500</td>\n",
              "      <td>20.757300</td>\n",
              "      <td>9.560000</td>\n",
              "      <td>18.85570</td>\n",
              "      <td>8.801000</td>\n",
              "      <td>2.203483</td>\n",
              "      <td>15.857661</td>\n",
              "      <td>9.482023</td>\n",
              "      <td>10737</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>Germany</td>\n",
              "      <td>62.560000</td>\n",
              "      <td>25.710400</td>\n",
              "      <td>11.270000</td>\n",
              "      <td>27.78900</td>\n",
              "      <td>7.959100</td>\n",
              "      <td>3.053923</td>\n",
              "      <td>15.511413</td>\n",
              "      <td>3.829521</td>\n",
              "      <td>9551</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>Greece</td>\n",
              "      <td>43.714100</td>\n",
              "      <td>12.241000</td>\n",
              "      <td>7.650000</td>\n",
              "      <td>11.58780</td>\n",
              "      <td>6.272000</td>\n",
              "      <td>1.150668</td>\n",
              "      <td>10.701338</td>\n",
              "      <td>21.653166</td>\n",
              "      <td>575</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>Hungary</td>\n",
              "      <td>47.174700</td>\n",
              "      <td>15.532000</td>\n",
              "      <td>4.238648</td>\n",
              "      <td>16.89730</td>\n",
              "      <td>10.909600</td>\n",
              "      <td>1.318411</td>\n",
              "      <td>8.868559</td>\n",
              "      <td>4.194950</td>\n",
              "      <td>712</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>Iceland</td>\n",
              "      <td>55.703200</td>\n",
              "      <td>18.436470</td>\n",
              "      <td>14.374600</td>\n",
              "      <td>9.57980</td>\n",
              "      <td>9.526600</td>\n",
              "      <td>2.083751</td>\n",
              "      <td>15.965327</td>\n",
              "      <td>3.450500</td>\n",
              "      <td>69</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>Ireland</td>\n",
              "      <td>57.034545</td>\n",
              "      <td>32.841300</td>\n",
              "      <td>5.343560</td>\n",
              "      <td>30.21110</td>\n",
              "      <td>11.540600</td>\n",
              "      <td>1.223522</td>\n",
              "      <td>17.078413</td>\n",
              "      <td>6.765717</td>\n",
              "      <td>740</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>Italy</td>\n",
              "      <td>50.036600</td>\n",
              "      <td>12.527100</td>\n",
              "      <td>6.234790</td>\n",
              "      <td>12.91510</td>\n",
              "      <td>5.572000</td>\n",
              "      <td>1.370134</td>\n",
              "      <td>12.635222</td>\n",
              "      <td>11.428731</td>\n",
              "      <td>8071</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>Korea</td>\n",
              "      <td>66.780000</td>\n",
              "      <td>11.430000</td>\n",
              "      <td>4.510000</td>\n",
              "      <td>14.12370</td>\n",
              "      <td>3.961800</td>\n",
              "      <td>4.292056</td>\n",
              "      <td>17.631476</td>\n",
              "      <td>3.765282</td>\n",
              "      <td>4914</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>Lithuania</td>\n",
              "      <td>45.950300</td>\n",
              "      <td>22.849000</td>\n",
              "      <td>9.123140</td>\n",
              "      <td>10.90990</td>\n",
              "      <td>9.377900</td>\n",
              "      <td>0.896261</td>\n",
              "      <td>8.500698</td>\n",
              "      <td>7.299644</td>\n",
              "      <td>86</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>Netherlands</td>\n",
              "      <td>72.482100</td>\n",
              "      <td>25.507700</td>\n",
              "      <td>16.987530</td>\n",
              "      <td>23.62300</td>\n",
              "      <td>12.517900</td>\n",
              "      <td>2.178566</td>\n",
              "      <td>12.814883</td>\n",
              "      <td>4.863896</td>\n",
              "      <td>1119</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>Norway</td>\n",
              "      <td>75.488600</td>\n",
              "      <td>30.209900</td>\n",
              "      <td>7.412340</td>\n",
              "      <td>39.57090</td>\n",
              "      <td>6.426500</td>\n",
              "      <td>2.099186</td>\n",
              "      <td>16.424484</td>\n",
              "      <td>4.271554</td>\n",
              "      <td>1320</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>Poland</td>\n",
              "      <td>45.614300</td>\n",
              "      <td>11.767400</td>\n",
              "      <td>6.234250</td>\n",
              "      <td>12.07530</td>\n",
              "      <td>5.313200</td>\n",
              "      <td>1.034181</td>\n",
              "      <td>16.828274</td>\n",
              "      <td>4.966870</td>\n",
              "      <td>117</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>Portugal</td>\n",
              "      <td>42.317200</td>\n",
              "      <td>18.248900</td>\n",
              "      <td>9.980213</td>\n",
              "      <td>20.61360</td>\n",
              "      <td>5.889100</td>\n",
              "      <td>1.319284</td>\n",
              "      <td>8.832547</td>\n",
              "      <td>8.198009</td>\n",
              "      <td>727</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>Turkey</td>\n",
              "      <td>50.419700</td>\n",
              "      <td>17.899500</td>\n",
              "      <td>7.123000</td>\n",
              "      <td>16.79440</td>\n",
              "      <td>6.085000</td>\n",
              "      <td>0.886000</td>\n",
              "      <td>11.451047</td>\n",
              "      <td>6.665804</td>\n",
              "      <td>2234</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>United States</td>\n",
              "      <td>76.629800</td>\n",
              "      <td>24.667400</td>\n",
              "      <td>7.238700</td>\n",
              "      <td>26.73440</td>\n",
              "      <td>6.508400</td>\n",
              "      <td>1.865397</td>\n",
              "      <td>8.013891</td>\n",
              "      <td>17.330746</td>\n",
              "      <td>94472</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>Spain</td>\n",
              "      <td>58.894600</td>\n",
              "      <td>21.345700</td>\n",
              "      <td>7.124500</td>\n",
              "      <td>22.50840</td>\n",
              "      <td>10.753000</td>\n",
              "      <td>1.210418</td>\n",
              "      <td>14.867623</td>\n",
              "      <td>6.812220</td>\n",
              "      <td>5258</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>Sweden</td>\n",
              "      <td>78.020500</td>\n",
              "      <td>30.980500</td>\n",
              "      <td>6.984320</td>\n",
              "      <td>27.94340</td>\n",
              "      <td>9.549400</td>\n",
              "      <td>3.362786</td>\n",
              "      <td>17.754338</td>\n",
              "      <td>4.963286</td>\n",
              "      <td>2047</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>Switzerland</td>\n",
              "      <td>57.730748</td>\n",
              "      <td>57.234700</td>\n",
              "      <td>5.765000</td>\n",
              "      <td>17.94340</td>\n",
              "      <td>6.508400</td>\n",
              "      <td>3.178758</td>\n",
              "      <td>16.322722</td>\n",
              "      <td>11.150764</td>\n",
              "      <td>2998</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>61.719600</td>\n",
              "      <td>22.510700</td>\n",
              "      <td>14.654000</td>\n",
              "      <td>26.05860</td>\n",
              "      <td>9.703600</td>\n",
              "      <td>1.682585</td>\n",
              "      <td>13.836390</td>\n",
              "      <td>4.468894</td>\n",
              "      <td>9757</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>50.000000</td>\n",
              "      <td>21.200000</td>\n",
              "      <td>5.234600</td>\n",
              "      <td>12.33500</td>\n",
              "      <td>13.140500</td>\n",
              "      <td>2.846766</td>\n",
              "      <td>4.353933</td>\n",
              "      <td>4.406087</td>\n",
              "      <td>1544</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "             Country  ...  Invest in TICS and I+D $US\n",
              "Time                  ...                            \n",
              "2017         Belgium  ...                        1885\n",
              "2017        Colombia  ...                        1469\n",
              "2017  Czech Republic  ...                         649\n",
              "2017         Denmark  ...                        1104\n",
              "2017         Estonia  ...                          90\n",
              "2017         Finland  ...                         683\n",
              "2017          France  ...                       10737\n",
              "2017         Germany  ...                        9551\n",
              "2017          Greece  ...                         575\n",
              "2017         Hungary  ...                         712\n",
              "2017         Iceland  ...                          69\n",
              "2017         Ireland  ...                         740\n",
              "2017           Italy  ...                        8071\n",
              "2017           Korea  ...                        4914\n",
              "2017       Lithuania  ...                          86\n",
              "2017     Netherlands  ...                        1119\n",
              "2017          Norway  ...                        1320\n",
              "2017          Poland  ...                         117\n",
              "2017        Portugal  ...                         727\n",
              "2017          Turkey  ...                        2234\n",
              "2017   United States  ...                       94472\n",
              "2017           Spain  ...                        5258\n",
              "2017          Sweden  ...                        2047\n",
              "2017     Switzerland  ...                        2998\n",
              "2017  United Kingdom  ...                        9757\n",
              "2017          Brazil  ...                        1544\n",
              "\n",
              "[26 rows x 10 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 217
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Bsvmc6y2r7dI"
      },
      "source": [
        "X=DF_2017[[\"Employers using computer\",\"Bussiness through computer networks\",\"Bussineses demand Big data analyst\",\"Businesses training employers in ICT\" , \"Bussines offered ICT specialist\" , \"GERD as a percentage of GDP\"]]\n",
        "y=DF_2017[['Unemployment rate']]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nA7iHWKVr9oP",
        "outputId": "817a5d89-47a4-484d-cbe6-d463ca56b7b2"
      },
      "source": [
        "X_train, X_eval, y_train, y_eval = train_test_split(X, y, test_size = 0.1, shuffle=False)\n",
        "linear_model = LinearRegression()\n",
        "linear_model.fit(X_train,y_train)\n",
        "start_time = time.process_time()\n",
        "y_pred_in = linear_model.predict(X_train)\n",
        "y_pred_out = linear_model.predict(X_eval) \n",
        "print(\"Modelo Lineal 2017\")\n",
        "print(\"Coeficientes\", linear_model.coef_)  \n",
        "print(\"Intercepto\",linear_model.intercept_)\n",
        "print(\"El tiempo de ejecución es\", time.process_time() - start_time, \"segundos\")\n",
        "print(\"El error cuadratico dentro de muestra\",mean_squared_error(y_train, y_pred_in))\n",
        "print(\"El error cuadratico fuera de muestra\",mean_squared_error(y_eval, y_pred_out))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Modelo Lineal 2017\n",
            "Coeficientes [[ 0.17005851 -0.36481623  0.03157931  0.10891524 -0.239971   -2.92830876]]\n",
            "Intercepto [10.12440807]\n",
            "El tiempo de ejecución es 0.005643747999997117 segundos\n",
            "El error cuadratico dentro de muestra 14.056357405130791\n",
            "El error cuadratico fuera de muestra 153.88926201094208\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CGAARy0AsDoC",
        "outputId": "81604946-88ff-43bc-ae11-34646ec7cc0c"
      },
      "source": [
        "from sklearn.linear_model import Lasso\n",
        "lasso_model = Lasso(alpha=0.5)  \n",
        "start_time =time.process_time()\n",
        "lasso_model.fit(X_train,y_train)\n",
        "\n",
        "y_pred_in= lasso_model.predict(X_train)\n",
        "y_pred_out=lasso_model.predict(X_eval)\n",
        "\n",
        "print(\"Modelo Lasso 2017\")\n",
        "print(\"Los coeficientes son\", lasso_model.coef_)\n",
        "print(\"El intercepto es\", lasso_model.intercept_)\n",
        "print(\"El tiempo de ejecucción es \", time.process_time()-start_time, \"en segundos\")\n",
        "print(\"El error cuadratico dentro de muestra es\", mean_squared_error(y_train,y_pred_in))\n",
        "print(\"El error cuadratico fuera de muesta es \", mean_squared_error(y_eval, y_pred_out))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Modelo Lasso 2017\n",
            "Los coeficientes son [ 0.08610143 -0.21236496 -0.          0.03429351 -0.20032053 -1.43173141]\n",
            "El intercepto es [10.52487619]\n",
            "El tiempo de ejecucción es  0.009105229999995856 en segundos\n",
            "El error cuadratico dentro de muestra es 14.974520338790034\n",
            "El error cuadratico fuera de muesta es  60.072711461724886\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yuI6MyQzsJxX",
        "outputId": "3dd212a2-9678-48ad-fe0a-31e8781678b6"
      },
      "source": [
        "from sklearn.linear_model import Ridge\n",
        "\n",
        "ridge_model=Ridge(alpha=0.5)\n",
        "start_time= time.process_time()\n",
        "ridge_model.fit(X_train, y_train)\n",
        "\n",
        "y_pred_in =ridge_model.predict(X_train)\n",
        "y_pred_out =ridge_model.predict(X_eval)\n",
        "\n",
        "\n",
        "print(\"Modelo Ridge 2017\")\n",
        "print(\"Los coeficientes son\", ridge_model.coef_)\n",
        "print(\"El intercepto es\", ridge_model.intercept_)\n",
        "print(\"El tiempo de ejecucción es \", time.process_time()-start_time, \"en segundos\")\n",
        "print(\"El error cuadratico dentro de muestra es\", mean_squared_error(y_train,y_pred_in))\n",
        "print(\"El error cuadratico fuera de muesta es \", mean_squared_error(y_eval, y_pred_out))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Modelo Ridge 2017\n",
            "Los coeficientes son [[ 0.16164346 -0.35168955  0.0279906   0.10332528 -0.24158183 -2.76871672]]\n",
            "El intercepto es [10.20412607]\n",
            "El tiempo de ejecucción es  0.009462843999997972 en segundos\n",
            "El error cuadratico dentro de muestra es 14.066099378932597\n",
            "El error cuadratico fuera de muesta es  143.1863313107065\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7JtEl_ogsS4l",
        "outputId": "8d968122-3163-45f5-dbad-395c4ed11be9"
      },
      "source": [
        "from sklearn.linear_model import ElasticNet\n",
        "\n",
        "elasticnet_model=ElasticNet(alpha=0.5,l1_ratio=0.5)\n",
        "start_time= time.process_time()\n",
        "elasticnet_model.fit(X_train, y_train)\n",
        "\n",
        "y_pred_in =elasticnet_model.predict(X_train)\n",
        "y_pred_out =elasticnet_model.predict(X_eval)\n",
        "\n",
        "print(\"Modelo ElasticNet 2017 \")\n",
        "print(\"Los coeficientes son\", elasticnet_model.coef_)\n",
        "print(\"El intercepto es\", elasticnet_model.intercept_)\n",
        "print(\"El tiempo de ejecucción es \", time.process_time()-start_time, \"en segundos\")\n",
        "print(\"El error cuadratico dentro de muestra es\", mean_squared_error(y_train,y_pred_in))\n",
        "print(\"El error cuadratico fuera de muesta es \", mean_squared_error(y_eval, y_pred_out))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Modelo ElasticNet 2017 \n",
            "Los coeficientes son [ 0.08195314 -0.21671084 -0.          0.04087187 -0.22713799 -1.31134306]\n",
            "El intercepto es [10.7295741]\n",
            "El tiempo de ejecucción es  0.008394726999995328 en segundos\n",
            "El error cuadratico dentro de muestra es 15.077348765878094\n",
            "El error cuadratico fuera de muesta es  59.634544867982356\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_KkKGrzJsfrE"
      },
      "source": [
        "### ***2018***"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "w9MrjANdsixn",
        "outputId": "895e709b-7a85-4871-a641-56363665c8de"
      },
      "source": [
        "DF_2018=df_TIME.loc[2018]\n",
        "DF_2018"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country</th>\n",
              "      <th>Employers using computer</th>\n",
              "      <th>Bussiness through computer networks</th>\n",
              "      <th>Bussineses demand Big data analyst</th>\n",
              "      <th>Businesses training employers in ICT</th>\n",
              "      <th>Bussines offered ICT specialist</th>\n",
              "      <th>GERD as a percentage of GDP</th>\n",
              "      <th>Total R&amp;D personnel per thousand total employment</th>\n",
              "      <th>Unemployment rate</th>\n",
              "      <th>Invest in TICS and I+D $US</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Time</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>Belgium</td>\n",
              "      <td>64.316800</td>\n",
              "      <td>29.921200</td>\n",
              "      <td>8.23540</td>\n",
              "      <td>35.57970</td>\n",
              "      <td>12.828500</td>\n",
              "      <td>2.673260</td>\n",
              "      <td>18.274706</td>\n",
              "      <td>6.003281</td>\n",
              "      <td>7768</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>Colombia</td>\n",
              "      <td>60.351333</td>\n",
              "      <td>26.379277</td>\n",
              "      <td>3.95280</td>\n",
              "      <td>8.69665</td>\n",
              "      <td>3.571340</td>\n",
              "      <td>0.285997</td>\n",
              "      <td>1.858605</td>\n",
              "      <td>10.006153</td>\n",
              "      <td>1469</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>Czech Republic</td>\n",
              "      <td>50.220100</td>\n",
              "      <td>24.900500</td>\n",
              "      <td>6.57090</td>\n",
              "      <td>24.78670</td>\n",
              "      <td>8.101500</td>\n",
              "      <td>1.899447</td>\n",
              "      <td>13.836816</td>\n",
              "      <td>2.284104</td>\n",
              "      <td>736</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>Denmark</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>31.576200</td>\n",
              "      <td>10.18980</td>\n",
              "      <td>28.13970</td>\n",
              "      <td>12.543600</td>\n",
              "      <td>3.022687</td>\n",
              "      <td>21.796755</td>\n",
              "      <td>4.985612</td>\n",
              "      <td>1112</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>Estonia</td>\n",
              "      <td>50.388500</td>\n",
              "      <td>19.727500</td>\n",
              "      <td>9.62200</td>\n",
              "      <td>13.28270</td>\n",
              "      <td>6.531900</td>\n",
              "      <td>1.409690</td>\n",
              "      <td>9.519784</td>\n",
              "      <td>5.422043</td>\n",
              "      <td>95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>Finland</td>\n",
              "      <td>76.558400</td>\n",
              "      <td>23.846200</td>\n",
              "      <td>12.88170</td>\n",
              "      <td>35.91370</td>\n",
              "      <td>11.502600</td>\n",
              "      <td>2.754733</td>\n",
              "      <td>19.043943</td>\n",
              "      <td>7.471108</td>\n",
              "      <td>953</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>France</td>\n",
              "      <td>60.030000</td>\n",
              "      <td>18.532700</td>\n",
              "      <td>11.76860</td>\n",
              "      <td>19.21580</td>\n",
              "      <td>8.757800</td>\n",
              "      <td>2.195863</td>\n",
              "      <td>16.111902</td>\n",
              "      <td>9.148040</td>\n",
              "      <td>11510</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>Germany</td>\n",
              "      <td>74.450000</td>\n",
              "      <td>21.597200</td>\n",
              "      <td>14.46000</td>\n",
              "      <td>29.89320</td>\n",
              "      <td>8.941000</td>\n",
              "      <td>3.118482</td>\n",
              "      <td>15.777939</td>\n",
              "      <td>3.464468</td>\n",
              "      <td>10706</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>Greece</td>\n",
              "      <td>42.412700</td>\n",
              "      <td>11.752800</td>\n",
              "      <td>9.38630</td>\n",
              "      <td>14.10290</td>\n",
              "      <td>6.099600</td>\n",
              "      <td>1.212565</td>\n",
              "      <td>11.372336</td>\n",
              "      <td>19.452728</td>\n",
              "      <td>604</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>Hungary</td>\n",
              "      <td>49.335400</td>\n",
              "      <td>15.109500</td>\n",
              "      <td>4.29930</td>\n",
              "      <td>16.51770</td>\n",
              "      <td>11.092400</td>\n",
              "      <td>1.509130</td>\n",
              "      <td>11.711729</td>\n",
              "      <td>3.748222</td>\n",
              "      <td>796</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>Iceland</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>26.653900</td>\n",
              "      <td>16.76180</td>\n",
              "      <td>10.60820</td>\n",
              "      <td>9.583234</td>\n",
              "      <td>2.006432</td>\n",
              "      <td>16.013200</td>\n",
              "      <td>3.165696</td>\n",
              "      <td>70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>Ireland</td>\n",
              "      <td>58.555400</td>\n",
              "      <td>35.093500</td>\n",
              "      <td>6.24380</td>\n",
              "      <td>30.19420</td>\n",
              "      <td>10.484700</td>\n",
              "      <td>1.165932</td>\n",
              "      <td>16.476285</td>\n",
              "      <td>5.599492</td>\n",
              "      <td>745</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>Italy</td>\n",
              "      <td>54.105300</td>\n",
              "      <td>14.186000</td>\n",
              "      <td>5.91200</td>\n",
              "      <td>16.94120</td>\n",
              "      <td>5.981200</td>\n",
              "      <td>1.422127</td>\n",
              "      <td>13.639993</td>\n",
              "      <td>10.824172</td>\n",
              "      <td>9893</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>Korea</td>\n",
              "      <td>66.880000</td>\n",
              "      <td>15.700000</td>\n",
              "      <td>4.55000</td>\n",
              "      <td>15.46800</td>\n",
              "      <td>5.185000</td>\n",
              "      <td>4.516334</td>\n",
              "      <td>18.685203</td>\n",
              "      <td>3.933027</td>\n",
              "      <td>5130</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>Lithuania</td>\n",
              "      <td>66.880000</td>\n",
              "      <td>22.379300</td>\n",
              "      <td>10.47510</td>\n",
              "      <td>8.76790</td>\n",
              "      <td>8.420200</td>\n",
              "      <td>0.937120</td>\n",
              "      <td>8.659858</td>\n",
              "      <td>6.334833</td>\n",
              "      <td>95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>Netherlands</td>\n",
              "      <td>72.826600</td>\n",
              "      <td>27.334900</td>\n",
              "      <td>18.80140</td>\n",
              "      <td>25.57870</td>\n",
              "      <td>13.133800</td>\n",
              "      <td>2.138796</td>\n",
              "      <td>12.182709</td>\n",
              "      <td>3.830758</td>\n",
              "      <td>1143</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>Norway</td>\n",
              "      <td>73.847000</td>\n",
              "      <td>28.642400</td>\n",
              "      <td>9.02900</td>\n",
              "      <td>41.58520</td>\n",
              "      <td>6.942000</td>\n",
              "      <td>2.047809</td>\n",
              "      <td>16.695934</td>\n",
              "      <td>3.920439</td>\n",
              "      <td>1356</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>Poland</td>\n",
              "      <td>46.106100</td>\n",
              "      <td>13.988100</td>\n",
              "      <td>5.40250</td>\n",
              "      <td>13.36410</td>\n",
              "      <td>5.995200</td>\n",
              "      <td>1.208915</td>\n",
              "      <td>16.687914</td>\n",
              "      <td>3.910156</td>\n",
              "      <td>95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>Portugal</td>\n",
              "      <td>43.562600</td>\n",
              "      <td>18.869600</td>\n",
              "      <td>10.02560</td>\n",
              "      <td>19.48680</td>\n",
              "      <td>7.092300</td>\n",
              "      <td>1.349555</td>\n",
              "      <td>9.875400</td>\n",
              "      <td>6.607804</td>\n",
              "      <td>712</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>Turkey</td>\n",
              "      <td>50.561900</td>\n",
              "      <td>16.344000</td>\n",
              "      <td>6.32360</td>\n",
              "      <td>17.53630</td>\n",
              "      <td>4.951200</td>\n",
              "      <td>0.838995</td>\n",
              "      <td>11.833255</td>\n",
              "      <td>5.202433</td>\n",
              "      <td>1947</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>United States</td>\n",
              "      <td>78.501000</td>\n",
              "      <td>25.377200</td>\n",
              "      <td>9.31450</td>\n",
              "      <td>28.53190</td>\n",
              "      <td>7.960700</td>\n",
              "      <td>1.946519</td>\n",
              "      <td>8.375546</td>\n",
              "      <td>15.350343</td>\n",
              "      <td>94997</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>Spain</td>\n",
              "      <td>68.666100</td>\n",
              "      <td>20.065200</td>\n",
              "      <td>7.31860</td>\n",
              "      <td>21.19160</td>\n",
              "      <td>11.242800</td>\n",
              "      <td>1.241114</td>\n",
              "      <td>15.358856</td>\n",
              "      <td>6.467226</td>\n",
              "      <td>6283</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>Sweden</td>\n",
              "      <td>81.343470</td>\n",
              "      <td>31.701300</td>\n",
              "      <td>7.48010</td>\n",
              "      <td>23.85520</td>\n",
              "      <td>9.028500</td>\n",
              "      <td>3.321061</td>\n",
              "      <td>18.077984</td>\n",
              "      <td>4.872938</td>\n",
              "      <td>1782</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>Switzerland</td>\n",
              "      <td>60.123100</td>\n",
              "      <td>60.173306</td>\n",
              "      <td>7.87324</td>\n",
              "      <td>20.85520</td>\n",
              "      <td>8.960700</td>\n",
              "      <td>3.465700</td>\n",
              "      <td>17.346400</td>\n",
              "      <td>11.184357</td>\n",
              "      <td>2854</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>63.340100</td>\n",
              "      <td>22.016200</td>\n",
              "      <td>15.56700</td>\n",
              "      <td>28.20490</td>\n",
              "      <td>10.380200</td>\n",
              "      <td>1.730882</td>\n",
              "      <td>14.285878</td>\n",
              "      <td>4.254834</td>\n",
              "      <td>9911</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>48.456700</td>\n",
              "      <td>18.465348</td>\n",
              "      <td>6.13440</td>\n",
              "      <td>12.76840</td>\n",
              "      <td>12.086000</td>\n",
              "      <td>2.947206</td>\n",
              "      <td>5.235000</td>\n",
              "      <td>3.937702</td>\n",
              "      <td>1659</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "             Country  ...  Invest in TICS and I+D $US\n",
              "Time                  ...                            \n",
              "2018         Belgium  ...                        7768\n",
              "2018        Colombia  ...                        1469\n",
              "2018  Czech Republic  ...                         736\n",
              "2018         Denmark  ...                        1112\n",
              "2018         Estonia  ...                          95\n",
              "2018         Finland  ...                         953\n",
              "2018          France  ...                       11510\n",
              "2018         Germany  ...                       10706\n",
              "2018          Greece  ...                         604\n",
              "2018         Hungary  ...                         796\n",
              "2018         Iceland  ...                          70\n",
              "2018         Ireland  ...                         745\n",
              "2018           Italy  ...                        9893\n",
              "2018           Korea  ...                        5130\n",
              "2018       Lithuania  ...                          95\n",
              "2018     Netherlands  ...                        1143\n",
              "2018          Norway  ...                        1356\n",
              "2018          Poland  ...                          95\n",
              "2018        Portugal  ...                         712\n",
              "2018          Turkey  ...                        1947\n",
              "2018   United States  ...                       94997\n",
              "2018           Spain  ...                        6283\n",
              "2018          Sweden  ...                        1782\n",
              "2018     Switzerland  ...                        2854\n",
              "2018  United Kingdom  ...                        9911\n",
              "2018          Brazil  ...                        1659\n",
              "\n",
              "[26 rows x 10 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 223
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WBRrN8qGsm4K"
      },
      "source": [
        "X=DF_2018[[\"Employers using computer\",\"Bussiness through computer networks\",\"Bussineses demand Big data analyst\",\"Businesses training employers in ICT\" , \"Bussines offered ICT specialist\" , \"GERD as a percentage of GDP\"]]\n",
        "y=DF_2018[['Unemployment rate']]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2WagJqv0sstZ",
        "outputId": "986029bd-07d1-4310-dfdf-1ff3a46aac47"
      },
      "source": [
        "X_train, X_eval, y_train, y_eval = train_test_split(X, y, test_size = 0.1, shuffle=False)\n",
        "linear_model = LinearRegression()\n",
        "linear_model.fit(X_train,y_train)\n",
        "start_time = time.process_time()\n",
        "y_pred_in = linear_model.predict(X_train)\n",
        "y_pred_out = linear_model.predict(X_eval) \n",
        "print(\"Modelo Lineal 2018\")\n",
        "print(\"Coeficientes\", linear_model.coef_)  \n",
        "print(\"Intercepto\",linear_model.intercept_)\n",
        "print(\"El tiempo de ejecución es\", time.process_time() - start_time, \"segundos\")\n",
        "print(\"El error cuadratico dentro de muestra\",mean_squared_error(y_train, y_pred_in))\n",
        "print(\"El error cuadratico fuera de muestra\",mean_squared_error(y_eval, y_pred_out))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Modelo Lineal 2018\n",
            "Coeficientes [[ 0.05425212 -0.23941967  0.03398032  0.11648529 -0.34317418 -1.54922762]]\n",
            "Intercepto [11.56970643]\n",
            "El tiempo de ejecución es 0.003997001000001887 segundos\n",
            "El error cuadratico dentro de muestra 12.847720633592605\n",
            "El error cuadratico fuera de muestra 94.39071131518995\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gpWLQSBJswod",
        "outputId": "408c65e9-dc4d-49c1-cad7-7c2f10d451ea"
      },
      "source": [
        "from sklearn.linear_model import Lasso\n",
        "lasso_model = Lasso(alpha=0.5)  \n",
        "start_time =time.process_time()\n",
        "lasso_model.fit(X_train,y_train)\n",
        "\n",
        "y_pred_in= lasso_model.predict(X_train)\n",
        "y_pred_out=lasso_model.predict(X_eval)\n",
        "\n",
        "print(\"Modelo Lasso 2018\")\n",
        "print(\"Los coeficientes son\", lasso_model.coef_)\n",
        "print(\"El intercepto es\", lasso_model.intercept_)\n",
        "print(\"El tiempo de ejecucción es \", time.process_time()-start_time, \"en segundos\")\n",
        "print(\"El error cuadratico dentro de muestra es\", mean_squared_error(y_train,y_pred_in))\n",
        "print(\"El error cuadratico fuera de muesta es \", mean_squared_error(y_eval, y_pred_out))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Modelo Lasso 2018\n",
            "Los coeficientes son [ 4.30126485e-05 -1.39967479e-01  1.53563036e-03  3.19885672e-02\n",
            " -1.94946927e-01 -4.31525840e-01]\n",
            "El intercepto es [11.55110214]\n",
            "El tiempo de ejecucción es  0.0072024759999962384 en segundos\n",
            "El error cuadratico dentro de muestra es 13.615962551800939\n",
            "El error cuadratico fuera de muesta es  40.54994515228194\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BlpZuR8fs3Ws",
        "outputId": "137be185-a43c-4ff2-fd59-9cc4b1cc507f"
      },
      "source": [
        "from sklearn.linear_model import Ridge\n",
        "\n",
        "ridge_model=Ridge(alpha=0.5)\n",
        "start_time= time.process_time()\n",
        "ridge_model.fit(X_train, y_train)\n",
        "\n",
        "y_pred_in =ridge_model.predict(X_train)\n",
        "y_pred_out =ridge_model.predict(X_eval)\n",
        "\n",
        "\n",
        "print(\"Modelo Ridge 2018\")\n",
        "print(\"Los coeficientes son\", ridge_model.coef_)\n",
        "print(\"El intercepto es\", ridge_model.intercept_)\n",
        "print(\"El tiempo de ejecucción es \", time.process_time()-start_time, \"en segundos\")\n",
        "print(\"El error cuadratico dentro de muestra es\", mean_squared_error(y_train,y_pred_in))\n",
        "print(\"El error cuadratico fuera de muesta es \", mean_squared_error(y_eval, y_pred_out))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Modelo Ridge 2018\n",
            "Los coeficientes son [[ 0.05136102 -0.23466595  0.03577108  0.11297942 -0.34215752 -1.48369393]]\n",
            "El intercepto es [11.57473805]\n",
            "El tiempo de ejecucción es  0.0061071740000002706 en segundos\n",
            "El error cuadratico dentro de muestra es 12.849876630325316\n",
            "El error cuadratico fuera de muesta es  91.04512917536177\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-9R66Vous8Aw",
        "outputId": "9343f23d-b9b3-4188-e4a5-a7151cd4d3c8"
      },
      "source": [
        "from sklearn.linear_model import ElasticNet\n",
        "\n",
        "elasticnet_model=ElasticNet(alpha=0.5,l1_ratio=0.5)\n",
        "start_time= time.process_time()\n",
        "elasticnet_model.fit(X_train, y_train)\n",
        "\n",
        "y_pred_in =elasticnet_model.predict(X_train)\n",
        "y_pred_out =elasticnet_model.predict(X_eval)\n",
        "\n",
        "print(\"Modelo ElasticNet 2018\")\n",
        "print(\"Los coeficientes son\", elasticnet_model.coef_)\n",
        "print(\"El intercepto es\", elasticnet_model.intercept_)\n",
        "print(\"El tiempo de ejecucción es \", time.process_time()-start_time, \"en segundos\")\n",
        "print(\"El error cuadratico dentro de muestra es\", mean_squared_error(y_train,y_pred_in))\n",
        "print(\"El error cuadratico fuera de muesta es \", mean_squared_error(y_eval, y_pred_out))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Modelo ElasticNet 2018\n",
            "Los coeficientes son [ 0.01215066 -0.16519013  0.02531144  0.05548198 -0.25713375 -0.65593306]\n",
            "El intercepto es [11.57201985]\n",
            "El tiempo de ejecucción es  0.006327600000005873 en segundos\n",
            "El error cuadratico dentro de muestra es 13.295209089359025\n",
            "El error cuadratico fuera de muesta es  50.934638506242266\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CeriTiL1tPeQ"
      },
      "source": [
        "### ***2019***"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TrmJ9ImMtTQP",
        "outputId": "518ca127-8080-492a-c8ca-3f9c316d31df"
      },
      "source": [
        "DF_2019=df_TIME.loc[2019]\n",
        "DF_2019"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country</th>\n",
              "      <th>Employers using computer</th>\n",
              "      <th>Bussiness through computer networks</th>\n",
              "      <th>Bussineses demand Big data analyst</th>\n",
              "      <th>Businesses training employers in ICT</th>\n",
              "      <th>Bussines offered ICT specialist</th>\n",
              "      <th>GERD as a percentage of GDP</th>\n",
              "      <th>Total R&amp;D personnel per thousand total employment</th>\n",
              "      <th>Unemployment rate</th>\n",
              "      <th>Invest in TICS and I+D $US</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Time</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>Belgium</td>\n",
              "      <td>64.992900</td>\n",
              "      <td>30.549500</td>\n",
              "      <td>21.947600</td>\n",
              "      <td>36.37300</td>\n",
              "      <td>14.46340</td>\n",
              "      <td>2.889670</td>\n",
              "      <td>19.653375</td>\n",
              "      <td>5.409494</td>\n",
              "      <td>9856</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>Colombia</td>\n",
              "      <td>63.570000</td>\n",
              "      <td>27.780000</td>\n",
              "      <td>7.017000</td>\n",
              "      <td>11.70000</td>\n",
              "      <td>3.97630</td>\n",
              "      <td>0.280656</td>\n",
              "      <td>2.016755</td>\n",
              "      <td>10.831563</td>\n",
              "      <td>1507</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>Czech Republic</td>\n",
              "      <td>53.655800</td>\n",
              "      <td>29.822600</td>\n",
              "      <td>9.123500</td>\n",
              "      <td>24.53150</td>\n",
              "      <td>8.15050</td>\n",
              "      <td>1.941657</td>\n",
              "      <td>14.589510</td>\n",
              "      <td>2.060711</td>\n",
              "      <td>798</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>Denmark</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>33.553300</td>\n",
              "      <td>23.706000</td>\n",
              "      <td>30.64340</td>\n",
              "      <td>13.78250</td>\n",
              "      <td>2.956186</td>\n",
              "      <td>20.210661</td>\n",
              "      <td>4.885563</td>\n",
              "      <td>1238</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>Estonia</td>\n",
              "      <td>50.264400</td>\n",
              "      <td>21.099600</td>\n",
              "      <td>7.969600</td>\n",
              "      <td>17.11170</td>\n",
              "      <td>7.55790</td>\n",
              "      <td>1.611247</td>\n",
              "      <td>9.922334</td>\n",
              "      <td>4.562025</td>\n",
              "      <td>102</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>Finland</td>\n",
              "      <td>77.551000</td>\n",
              "      <td>28.525100</td>\n",
              "      <td>19.196600</td>\n",
              "      <td>36.56360</td>\n",
              "      <td>12.23250</td>\n",
              "      <td>2.794919</td>\n",
              "      <td>19.277291</td>\n",
              "      <td>6.786861</td>\n",
              "      <td>987</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>France</td>\n",
              "      <td>60.450000</td>\n",
              "      <td>18.850800</td>\n",
              "      <td>19.503700</td>\n",
              "      <td>21.34900</td>\n",
              "      <td>9.67230</td>\n",
              "      <td>2.191456</td>\n",
              "      <td>16.311332</td>\n",
              "      <td>8.530485</td>\n",
              "      <td>12347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>Germany</td>\n",
              "      <td>78.570000</td>\n",
              "      <td>20.108400</td>\n",
              "      <td>16.572400</td>\n",
              "      <td>31.60940</td>\n",
              "      <td>10.05080</td>\n",
              "      <td>3.176075</td>\n",
              "      <td>16.223667</td>\n",
              "      <td>3.210756</td>\n",
              "      <td>12568</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>Greece</td>\n",
              "      <td>41.935000</td>\n",
              "      <td>11.072500</td>\n",
              "      <td>12.229400</td>\n",
              "      <td>15.25850</td>\n",
              "      <td>8.50440</td>\n",
              "      <td>1.273941</td>\n",
              "      <td>12.010659</td>\n",
              "      <td>17.469046</td>\n",
              "      <td>834</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>Hungary</td>\n",
              "      <td>48.480800</td>\n",
              "      <td>15.034100</td>\n",
              "      <td>6.377600</td>\n",
              "      <td>16.42640</td>\n",
              "      <td>10.23350</td>\n",
              "      <td>1.477881</td>\n",
              "      <td>12.050433</td>\n",
              "      <td>3.454182</td>\n",
              "      <td>802</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>Iceland</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>34.387230</td>\n",
              "      <td>22.441300</td>\n",
              "      <td>17.71110</td>\n",
              "      <td>9.87665</td>\n",
              "      <td>2.345119</td>\n",
              "      <td>16.479238</td>\n",
              "      <td>4.043546</td>\n",
              "      <td>73</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>Ireland</td>\n",
              "      <td>58.344600</td>\n",
              "      <td>39.242900</td>\n",
              "      <td>7.355400</td>\n",
              "      <td>30.67760</td>\n",
              "      <td>10.62980</td>\n",
              "      <td>1.228237</td>\n",
              "      <td>16.504336</td>\n",
              "      <td>4.537798</td>\n",
              "      <td>765</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>Italy</td>\n",
              "      <td>55.847200</td>\n",
              "      <td>14.033700</td>\n",
              "      <td>7.376100</td>\n",
              "      <td>19.43370</td>\n",
              "      <td>6.44040</td>\n",
              "      <td>1.447666</td>\n",
              "      <td>13.950128</td>\n",
              "      <td>10.163255</td>\n",
              "      <td>9954</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>Korea</td>\n",
              "      <td>65.789765</td>\n",
              "      <td>19.457383</td>\n",
              "      <td>5.236432</td>\n",
              "      <td>14.14200</td>\n",
              "      <td>5.70250</td>\n",
              "      <td>4.640189</td>\n",
              "      <td>19.381436</td>\n",
              "      <td>3.828882</td>\n",
              "      <td>6324</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>Lithuania</td>\n",
              "      <td>51.021900</td>\n",
              "      <td>25.687700</td>\n",
              "      <td>8.680000</td>\n",
              "      <td>10.87950</td>\n",
              "      <td>9.08180</td>\n",
              "      <td>0.991586</td>\n",
              "      <td>9.330482</td>\n",
              "      <td>6.474850</td>\n",
              "      <td>98</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>Netherlands</td>\n",
              "      <td>72.542700</td>\n",
              "      <td>27.341700</td>\n",
              "      <td>25.983000</td>\n",
              "      <td>28.34932</td>\n",
              "      <td>11.78220</td>\n",
              "      <td>2.162797</td>\n",
              "      <td>12.668986</td>\n",
              "      <td>3.374726</td>\n",
              "      <td>1180</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>Norway</td>\n",
              "      <td>76.170700</td>\n",
              "      <td>27.516900</td>\n",
              "      <td>16.787900</td>\n",
              "      <td>44.37210</td>\n",
              "      <td>7.18240</td>\n",
              "      <td>2.153041</td>\n",
              "      <td>16.713892</td>\n",
              "      <td>3.784827</td>\n",
              "      <td>1456</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>Poland</td>\n",
              "      <td>47.700900</td>\n",
              "      <td>15.740700</td>\n",
              "      <td>7.895800</td>\n",
              "      <td>13.37430</td>\n",
              "      <td>4.50180</td>\n",
              "      <td>1.323788</td>\n",
              "      <td>17.164298</td>\n",
              "      <td>3.336179</td>\n",
              "      <td>230</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>Portugal</td>\n",
              "      <td>44.626400</td>\n",
              "      <td>16.941000</td>\n",
              "      <td>10.179800</td>\n",
              "      <td>27.93080</td>\n",
              "      <td>6.64210</td>\n",
              "      <td>1.402649</td>\n",
              "      <td>10.022795</td>\n",
              "      <td>5.836779</td>\n",
              "      <td>756</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>Turkey</td>\n",
              "      <td>51.798400</td>\n",
              "      <td>15.183100</td>\n",
              "      <td>4.564800</td>\n",
              "      <td>18.06940</td>\n",
              "      <td>5.82050</td>\n",
              "      <td>0.827346</td>\n",
              "      <td>12.408551</td>\n",
              "      <td>4.502213</td>\n",
              "      <td>2165</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>United States</td>\n",
              "      <td>86.549800</td>\n",
              "      <td>24.934500</td>\n",
              "      <td>5.148100</td>\n",
              "      <td>28.43910</td>\n",
              "      <td>7.73320</td>\n",
              "      <td>2.044233</td>\n",
              "      <td>8.668416</td>\n",
              "      <td>14.188762</td>\n",
              "      <td>95397</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>Spain</td>\n",
              "      <td>68.935300</td>\n",
              "      <td>20.818700</td>\n",
              "      <td>6.494000</td>\n",
              "      <td>21.73160</td>\n",
              "      <td>11.91470</td>\n",
              "      <td>1.250992</td>\n",
              "      <td>16.226676</td>\n",
              "      <td>6.934967</td>\n",
              "      <td>6875</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>Sweden</td>\n",
              "      <td>83.897320</td>\n",
              "      <td>32.993200</td>\n",
              "      <td>13.026500</td>\n",
              "      <td>32.45530</td>\n",
              "      <td>9.78610</td>\n",
              "      <td>3.404136</td>\n",
              "      <td>17.811817</td>\n",
              "      <td>4.522355</td>\n",
              "      <td>2234</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>Switzerland</td>\n",
              "      <td>66.453000</td>\n",
              "      <td>64.223400</td>\n",
              "      <td>8.757500</td>\n",
              "      <td>32.45530</td>\n",
              "      <td>7.73320</td>\n",
              "      <td>4.178950</td>\n",
              "      <td>17.653400</td>\n",
              "      <td>14.025006</td>\n",
              "      <td>3134</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>64.396500</td>\n",
              "      <td>25.953300</td>\n",
              "      <td>14.356000</td>\n",
              "      <td>29.40340</td>\n",
              "      <td>10.13000</td>\n",
              "      <td>1.755940</td>\n",
              "      <td>14.822200</td>\n",
              "      <td>3.963302</td>\n",
              "      <td>12354</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>49.000000</td>\n",
              "      <td>21.200000</td>\n",
              "      <td>11.839800</td>\n",
              "      <td>23.57570</td>\n",
              "      <td>13.53340</td>\n",
              "      <td>3.067476</td>\n",
              "      <td>7.345000</td>\n",
              "      <td>3.716811</td>\n",
              "      <td>1765</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "             Country  ...  Invest in TICS and I+D $US\n",
              "Time                  ...                            \n",
              "2019         Belgium  ...                        9856\n",
              "2019        Colombia  ...                        1507\n",
              "2019  Czech Republic  ...                         798\n",
              "2019         Denmark  ...                        1238\n",
              "2019         Estonia  ...                         102\n",
              "2019         Finland  ...                         987\n",
              "2019          France  ...                       12347\n",
              "2019         Germany  ...                       12568\n",
              "2019          Greece  ...                         834\n",
              "2019         Hungary  ...                         802\n",
              "2019         Iceland  ...                          73\n",
              "2019         Ireland  ...                         765\n",
              "2019           Italy  ...                        9954\n",
              "2019           Korea  ...                        6324\n",
              "2019       Lithuania  ...                          98\n",
              "2019     Netherlands  ...                        1180\n",
              "2019          Norway  ...                        1456\n",
              "2019          Poland  ...                         230\n",
              "2019        Portugal  ...                         756\n",
              "2019          Turkey  ...                        2165\n",
              "2019   United States  ...                       95397\n",
              "2019           Spain  ...                        6875\n",
              "2019          Sweden  ...                        2234\n",
              "2019     Switzerland  ...                        3134\n",
              "2019  United Kingdom  ...                       12354\n",
              "2019          Brazil  ...                        1765\n",
              "\n",
              "[26 rows x 10 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 229
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0ZqXgUOntYFv"
      },
      "source": [
        "X=DF_2019[[\"Employers using computer\",\"Bussiness through computer networks\",\"Bussineses demand Big data analyst\",\"Businesses training employers in ICT\" , \"Bussines offered ICT specialist\" , \"GERD as a percentage of GDP\"]]\n",
        "y=DF_2019[['Unemployment rate']]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nFeaz50xtbm0",
        "outputId": "2c14d6a3-b554-4efc-98a1-2172db589f9f"
      },
      "source": [
        "X_train, X_eval, y_train, y_eval = train_test_split(X, y, test_size = 0.1, shuffle=False)\n",
        "linear_model = LinearRegression()\n",
        "linear_model.fit(X_train,y_train)\n",
        "start_time = time.process_time()\n",
        "y_pred_in = linear_model.predict(X_train)\n",
        "y_pred_out = linear_model.predict(X_eval) \n",
        "print(\"Modelo Lineal 2019\")\n",
        "print(\"Coeficientes\", linear_model.coef_)  \n",
        "print(\"Intercepto\",linear_model.intercept_)\n",
        "print(\"El tiempo de ejecución es\", time.process_time() - start_time, \"segundos\")\n",
        "print(\"El error cuadratico dentro de muestra\",mean_squared_error(y_train, y_pred_in))\n",
        "print(\"El error cuadratico fuera de muestra\",mean_squared_error(y_eval, y_pred_out))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Modelo Lineal 2019\n",
            "Coeficientes [[ 0.09273353 -0.23139585 -0.05968769 -0.00613976  0.13032585 -1.54888224]]\n",
            "Intercepto [8.49248443]\n",
            "El tiempo de ejecución es 0.006647753000002865 segundos\n",
            "El error cuadratico dentro de muestra 10.469627000221257\n",
            "El error cuadratico fuera de muestra 140.48729642303593\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Mg3qOZ0atire",
        "outputId": "9222aa32-a4a3-4cb0-d854-79c8cadaa140"
      },
      "source": [
        "from sklearn.linear_model import Lasso\n",
        "lasso_model = Lasso(alpha=0.5)  \n",
        "start_time =time.process_time()\n",
        "lasso_model.fit(X_train,y_train)\n",
        "\n",
        "y_pred_in= lasso_model.predict(X_train)\n",
        "y_pred_out=lasso_model.predict(X_eval)\n",
        "\n",
        "print(\"Modelo Lasso 2019\")\n",
        "print(\"Los coeficientes son\", lasso_model.coef_)\n",
        "print(\"El intercepto es\", lasso_model.intercept_)\n",
        "print(\"El tiempo de ejecucción es \", time.process_time()-start_time, \"en segundos\")\n",
        "print(\"El error cuadratico dentro de muestra es\", mean_squared_error(y_train,y_pred_in))\n",
        "print(\"El error cuadratico fuera de muesta es \", mean_squared_error(y_eval, y_pred_out))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Modelo Lasso 2019\n",
            "Los coeficientes son [ 0.05367898 -0.17983862 -0.02982378 -0.01695403  0.         -0.66715239]\n",
            "El intercepto es [9.1073628]\n",
            "El tiempo de ejecucción es  0.004966228999997213 en segundos\n",
            "El error cuadratico dentro de muestra es 10.994695067475858\n",
            "El error cuadratico fuera de muesta es  92.5321153492768\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8Hip1N7ltrMq",
        "outputId": "e0f44bd6-d143-46af-ffba-241425f94bf8"
      },
      "source": [
        "from sklearn.linear_model import Ridge\n",
        "\n",
        "ridge_model=Ridge(alpha=0.5)\n",
        "start_time= time.process_time()\n",
        "ridge_model.fit(X_train, y_train)\n",
        "\n",
        "y_pred_in =ridge_model.predict(X_train)\n",
        "y_pred_out =ridge_model.predict(X_eval)\n",
        "\n",
        "\n",
        "print(\"Modelo Ridge 2019 \")\n",
        "print(\"Los coeficientes son\", ridge_model.coef_)\n",
        "print(\"El intercepto es\", ridge_model.intercept_)\n",
        "print(\"El tiempo de ejecucción es \", time.process_time()-start_time, \"en segundos\")\n",
        "print(\"El error cuadratico dentro de muestra es\", mean_squared_error(y_train,y_pred_in))\n",
        "print(\"El error cuadratico fuera de muesta es \", mean_squared_error(y_eval, y_pred_out))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Modelo Ridge 2019 \n",
            "Los coeficientes son [[ 0.09096118 -0.22941419 -0.05999403 -0.00736246  0.12783765 -1.4935082 ]]\n",
            "El intercepto es [8.50577173]\n",
            "El tiempo de ejecucción es  0.011963606000001903 en segundos\n",
            "El error cuadratico dentro de muestra es 10.471444568285039\n",
            "El error cuadratico fuera de muesta es  137.88349957301628\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rVNOlJW0tv9t",
        "outputId": "d362af2b-42ad-41c1-baa6-eff388de8c81"
      },
      "source": [
        "from sklearn.linear_model import ElasticNet\n",
        "\n",
        "elasticnet_model=ElasticNet(alpha=0.5,l1_ratio=0.5)\n",
        "start_time= time.process_time()\n",
        "elasticnet_model.fit(X_train, y_train)\n",
        "\n",
        "y_pred_in =elasticnet_model.predict(X_train)\n",
        "y_pred_out =elasticnet_model.predict(X_eval)\n",
        "\n",
        "print(\"Modelo ElasticNet 2019 \")\n",
        "print(\"Los coeficientes son\", elasticnet_model.coef_)\n",
        "print(\"El intercepto es\", elasticnet_model.intercept_)\n",
        "print(\"El tiempo de ejecucción es \", time.process_time()-start_time, \"en segundos\")\n",
        "print(\"El error cuadratico dentro de muestra es\", mean_squared_error(y_train,y_pred_in))\n",
        "print(\"El error cuadratico fuera de muesta es \", mean_squared_error(y_eval, y_pred_out))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Modelo ElasticNet 2019 \n",
            "Los coeficientes son [ 0.0619777  -0.19056785 -0.03960198 -0.0171555   0.01667238 -0.77186769]\n",
            "El intercepto es [9.00741645]\n",
            "El tiempo de ejecucción es  0.006632189000001176 en segundos\n",
            "El error cuadratico dentro de muestra es 10.865459417051655\n",
            "El error cuadratico fuera de muesta es  99.56128194691746\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "0HMx7UhkkhIX"
      },
      "source": [
        "### **TODA LA BASE**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fqE6UIQqkgOv"
      },
      "source": [
        "import time \n",
        "from sklearn import linear_model\n",
        "from sklearn.linear_model import LinearRegression\n",
        "from sklearn.metrics import mean_squared_error, r2_score\n",
        "import matplotlib.pyplot as plt"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "APOEnG-xuQYD"
      },
      "source": [
        "X=Economia_digital[[\"Employers using computer\",\"Bussiness through computer networks\",\"Bussineses demand Big data analyst\",\"Businesses training employers in ICT\" , \"Bussines offered ICT specialist\" , \"GERD as a percentage of GDP\"]]\n",
        "y=Economia_digital[['Unemployment rate']]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_7pcijOhkpSq"
      },
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "X_train, X_eval, y_train, y_eval = train_test_split(X, y, test_size = 0.1, shuffle=False)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hkuKL4YSkuFS"
      },
      "source": [
        "linear_model = LinearRegression()\n",
        "linear_model.fit(X_train,y_train)\n",
        "start_time = time.process_time()\n",
        "y_pred_in = linear_model.predict(X_train)\n",
        "y_pred_out = linear_model.predict(X_eval) "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uh0G-D_AkyLt",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a526c48c-cb3e-4bc0-b007-2174a3ba58b5"
      },
      "source": [
        "print(\"Modelo Lineal\")\n",
        "print(\"Coeficientes\", linear_model.coef_)  \n",
        "print(\"Intercepto\",linear_model.intercept_)\n",
        "print(\"El tiempo de ejecución es\", time.process_time() - start_time, \"segundos\")\n",
        "print(\"El error cuadratico dentro de muestra\",mean_squared_error(y_train, y_pred_in))\n",
        "print(\"El error cuadratico fuera de muestra\",mean_squared_error(y_eval, y_pred_out))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Modelo Lineal\n",
            "Coeficientes [[ 0.01974317 -0.11023609  0.02720743  0.05370038 -0.32024138 -1.34107951]]\n",
            "Intercepto [12.25184049]\n",
            "El tiempo de ejecución es 0.01570136499999819 segundos\n",
            "El error cuadratico dentro de muestra 15.63147002685978\n",
            "El error cuadratico fuera de muestra 37.81815180147529\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wH_1r27syJMk",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7a8a5643-2044-4e3e-b2b2-a41e354626d0"
      },
      "source": [
        "X, y.corr()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(     Employers using computer  ...  GERD as a percentage of GDP\n",
              " 0                   63.427500  ...                     2.523377\n",
              " 1                   64.324000  ...                     2.667015\n",
              " 2                   64.316800  ...                     2.673260\n",
              " 3                   64.992900  ...                     2.889670\n",
              " 4                   59.141383  ...                     0.295756\n",
              " ..                        ...  ...                          ...\n",
              " 99                  64.396500  ...                     1.755940\n",
              " 100                 43.346600  ...                     2.788210\n",
              " 101                 50.000000  ...                     2.846766\n",
              " 102                 48.456700  ...                     2.947206\n",
              " 103                 49.000000  ...                     3.067476\n",
              " \n",
              " [104 rows x 6 columns],                    Unemployment rate\n",
              " Unemployment rate                1.0)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 240
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "w2eSibnMyWlF",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8d9b4612-90da-42b3-e379-abd650a8a46f"
      },
      "source": [
        "X,y.cov()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(     Employers using computer  ...  GERD as a percentage of GDP\n",
              " 0                   63.427500  ...                     2.523377\n",
              " 1                   64.324000  ...                     2.667015\n",
              " 2                   64.316800  ...                     2.673260\n",
              " 3                   64.992900  ...                     2.889670\n",
              " 4                   59.141383  ...                     0.295756\n",
              " ..                        ...  ...                          ...\n",
              " 99                  64.396500  ...                     1.755940\n",
              " 100                 43.346600  ...                     2.788210\n",
              " 101                 50.000000  ...                     2.846766\n",
              " 102                 48.456700  ...                     2.947206\n",
              " 103                 49.000000  ...                     3.067476\n",
              " \n",
              " [104 rows x 6 columns],                    Unemployment rate\n",
              " Unemployment rate          17.946951)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 241
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "EwTHkTRBk8H4"
      },
      "source": [
        "from sklearn.linear_model import Lasso"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "o9l3y1W-lAoD",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "10d4689b-b8f6-4bd0-de8d-f77c020ffa4a"
      },
      "source": [
        "lasso_model = Lasso(alpha=0.5)  \n",
        "start_time =time.process_time()\n",
        "lasso_model.fit(X_train,y_train)\n",
        "\n",
        "y_pred_in= lasso_model.predict(X_train)\n",
        "y_pred_out=lasso_model.predict(X_eval)\n",
        "\n",
        "print(\"Modelo Lasso \")\n",
        "print(\"Los coeficientes son\", lasso_model.coef_)\n",
        "print(\"El intercepto es\", lasso_model.intercept_)\n",
        "print(\"El tiempo de ejecucción es \", time.process_time()-start_time, \"en segundos\")\n",
        "print(\"El error cuadratico dentro de muestra es\", mean_squared_error(y_train,y_pred_in))\n",
        "print(\"El error cuadratico fuera de muesta es \", mean_squared_error(y_eval, y_pred_out))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Modelo Lasso \n",
            "Los coeficientes son [-0.00651663 -0.08087566  0.          0.00670052 -0.20915828 -0.45863736]\n",
            "El intercepto es [11.86869945]\n",
            "El tiempo de ejecucción es  0.008005715999999552 en segundos\n",
            "El error cuadratico dentro de muestra es 16.15505666204573\n",
            "El error cuadratico fuera de muesta es  24.64894465946405\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "k5vzRIVh2uSY",
        "outputId": "328a4fc7-8f1a-4384-b3d9-377043b9d7e5"
      },
      "source": [
        "from sklearn.linear_model import Ridge\n",
        "\n",
        "\n",
        "ridge_model=Ridge(alpha=0.5)\n",
        "start_time= time.process_time()\n",
        "ridge_model.fit(X_train, y_train)\n",
        "\n",
        "y_pred_in =ridge_model.predict(X_train)\n",
        "y_pred_out =ridge_model.predict(X_eval)\n",
        "\n",
        "\n",
        "print(\"Modelo Ridge \")\n",
        "print(\"Los coeficientes son\", ridge_model.coef_)\n",
        "print(\"El intercepto es\", ridge_model.intercept_)\n",
        "print(\"El tiempo de ejecucción es \", time.process_time()-start_time, \"en segundos\")\n",
        "print(\"El error cuadratico dentro de muestra es\", mean_squared_error(y_train,y_pred_in))\n",
        "print(\"El error cuadratico fuera de muesta es \", mean_squared_error(y_eval, y_pred_out))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Modelo Ridge \n",
            "Los coeficientes son [[ 0.0193338  -0.10999652  0.02714037  0.05333807 -0.31985412 -1.32860449]]\n",
            "El intercepto es [12.25304209]\n",
            "El tiempo de ejecucción es  0.007781457999996633 en segundos\n",
            "El error cuadratico dentro de muestra es 15.631560100169448\n",
            "El error cuadratico fuera de muesta es  37.624339787633936\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QiAEn8xXlSov",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9cf280d5-c9a5-430c-a50e-9edff5ea8626"
      },
      "source": [
        "import time\n",
        "from sklearn.linear_model import ElasticNet\n",
        "\n",
        "elasticnet_model=ElasticNet(alpha=0.5,l1_ratio=0.5)\n",
        "start_time= time.process_time()\n",
        "elasticnet_model.fit(X_train, y_train)\n",
        "\n",
        "y_pred_in =elasticnet_model.predict(X_train)\n",
        "y_pred_out =elasticnet_model.predict(X_eval)\n",
        "\n",
        "print(\"Modelo ElasticNet \")\n",
        "print(\"Los coeficientes son\", elasticnet_model.coef_)\n",
        "print(\"El intercepto es\", elasticnet_model.intercept_)\n",
        "print(\"El tiempo de ejecucción es \", time.process_time()-start_time, \"en segundos\")\n",
        "print(\"El error cuadratico dentro de muestra es\", mean_squared_error(y_train,y_pred_in))\n",
        "print(\"El error cuadratico fuera de muesta es \", mean_squared_error(y_eval, y_pred_out))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Modelo ElasticNet \n",
            "Los coeficientes son [-0.00138894 -0.09048584  0.          0.02186566 -0.24400748 -0.62649594]\n",
            "El intercepto es [12.05148845]\n",
            "El tiempo de ejecucción es  0.007380259999997918 en segundos\n",
            "El error cuadratico dentro de muestra es 15.959569466961046\n",
            "El error cuadratico fuera de muesta es  27.128698028494735\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "3U6mRFsxwDZE"
      },
      "source": [
        "### **Ajuste y predicción - Estimadores**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "w0XAsAvkxGnF",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d4017211-3d26-4b1a-8732-6f575ff1ad0d"
      },
      "source": [
        "from sklearn.preprocessing import StandardScaler\n",
        "X_1 = Economia_digital[[\"Employers using computer\",\"Bussiness through computer networks\",\"Bussineses demand Big data analyst\",\"Businesses training employers in ICT\" , \"Bussines offered ICT specialist\" , \"GERD as a percentage of GDP\"]]\n",
        "# sacale data acording to computed scaling values\n",
        "StandardScaler().fit(X_1).transform(X_1)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 0.16471642,  0.21376012, -0.53251731,  1.32453265,  0.72015953,\n",
              "         0.55111442],\n",
              "       [ 0.22664004,  0.23311163, -0.37611273,  1.44574575,  1.57062395,\n",
              "         0.70105594],\n",
              "       [ 0.22614272,  0.67219961, -0.25881465,  1.55169041,  1.502411  ,\n",
              "         0.70757468],\n",
              "       [ 0.27284274,  0.73900487,  2.6762488 ,  1.64208179,  2.08659834,\n",
              "         0.93348176],\n",
              "       [-0.13133701,  0.44029998, -1.43031854, -1.7019813 , -2.39421398,\n",
              "        -1.77426127],\n",
              "       [-0.19241375,  0.19749375, -1.33352622, -1.59385086, -2.35531509,\n",
              "        -1.80997273],\n",
              "       [-0.04776258,  0.29559759, -1.17549488, -1.51145832, -1.80538501,\n",
              "        -1.78444859],\n",
              "       [ 0.17455927,  0.44453224, -0.51961024, -1.16924612, -1.6606835 ,\n",
              "        -1.79002366],\n",
              "       [-0.92740498,  0.31763097, -0.57524121, -0.02961744, -0.95454182,\n",
              "        -0.33968134],\n",
              "       [-0.84344718,  0.03766134, -0.80720459,  0.11654928, -0.66879064,\n",
              "        -0.2368371 ],\n",
              "       [-0.74755362,  0.13836364, -0.61509687,  0.32189825, -0.18665474,\n",
              "        -0.10019535],\n",
              "       [-0.51024074,  0.66171577, -0.06871898,  0.29281987, -0.16914591,\n",
              "        -0.05613375],\n",
              "       [ 1.7086627 ,  0.57707948, -0.01674822,  0.73477251,  0.97421616,\n",
              "         1.14556027],\n",
              "       [ 2.46569888,  0.70579895,  0.09106755,  0.51866727,  1.24252999,\n",
              "         1.07508127],\n",
              "       [ 2.6908757 ,  0.8481708 ,  0.15951997,  0.70395079,  1.40060968,\n",
              "         1.07233526],\n",
              "       [ 2.6908757 ,  1.05838991,  3.05263009,  0.98923113,  1.84329712,\n",
              "         1.00291595],\n",
              "       [-1.00288065, -0.56108726,  0.48084823, -0.97375326,  0.13272054,\n",
              "        -0.7962463 ],\n",
              "       [-0.86823044, -0.48222453, -0.30063955, -0.99671287,  1.67749926,\n",
              "        -0.75146001],\n",
              "       [-0.73592179, -0.41166593,  0.03798375, -0.98890774, -0.74750889,\n",
              "        -0.6114443 ],\n",
              "       [-0.74449371, -0.26577465, -0.3157085 , -0.55261809, -0.38089551,\n",
              "        -0.40104254],\n",
              "       [ 1.0011516 , -0.19640692,  0.17416083,  1.41114111, -0.00877936,\n",
              "         0.76097778],\n",
              "       [ 1.05863386,  0.06579547,  0.41427942,  1.77207992,  0.39835445,\n",
              "         0.76458239],\n",
              "       [ 1.0717024 ,  0.02626309,  0.7357147 ,  1.58974754,  1.02863646,\n",
              "         0.7926225 ],\n",
              "       [ 1.14026391,  0.52375649,  2.08740386,  1.66379942,  1.2894465 ,\n",
              "         0.83457221],\n",
              "       [-1.20067708, -0.27244136, -0.23642527, -0.17830231, -0.40612251,\n",
              "         0.23691275],\n",
              "       [-0.08705337, -0.30217038,  0.0247128 , -0.35390063,  0.06329269,\n",
              "         0.21718221],\n",
              "       [-0.06995789, -0.53870543,  0.49745832, -0.31286958,  0.04785634,\n",
              "         0.2092281 ],\n",
              "       [-0.04094738, -0.50488281,  2.15313788, -0.06980531,  0.3746282 ,\n",
              "         0.20462724],\n",
              "       [-0.08985081,  0.51653689, -0.02141446,  0.80991824,  0.00612101,\n",
              "         0.98642619],\n",
              "       [ 0.1047959 ,  0.22447788,  0.39073419,  0.66399081, -0.23753753,\n",
              "         1.10494225],\n",
              "       [ 0.92606964, -0.21286634,  1.07354602,  0.90375071,  0.11331791,\n",
              "         1.17233433],\n",
              "       [ 1.21064893, -0.37116598,  1.52570016,  1.09930054,  0.50987495,\n",
              "         1.23245413],\n",
              "       [-1.21730977, -1.21559375, -0.16221497, -0.80455856, -0.64159836,\n",
              "        -1.03203692],\n",
              "       [-1.19694025, -1.20768302, -0.38411811, -1.18203058, -0.84037713,\n",
              "        -0.88183315],\n",
              "       [-1.28683139, -1.25959186, -0.01246727, -0.89545129, -0.90197961,\n",
              "        -0.8172201 ],\n",
              "       [-1.31982739, -1.33192612,  0.59609145, -0.76377818, -0.04268931,\n",
              "        -0.75315039],\n",
              "       [-1.04678323, -0.90383235, -0.97176438, -0.70282981,  0.52584729,\n",
              "        -0.85001369],\n",
              "       [-0.95790746, -0.85776086, -1.11430974, -0.57704758,  0.81674393,\n",
              "        -0.70672869],\n",
              "       [-0.80866219, -0.90268402, -1.10132739, -0.62030053,  0.88206257,\n",
              "        -0.50764101],\n",
              "       [-0.86769167, -0.91070107, -0.65647227, -0.63070357,  0.57515786,\n",
              "        -0.54026058],\n",
              "       [-0.85547963, -0.96028135,  0.256841  , -1.19092956,  0.33892235,\n",
              "         0.11939116],\n",
              "       [-0.36882141, -0.54893728,  1.05526635, -1.41082912,  0.32256624,\n",
              "         0.09219582],\n",
              "       [ 2.6908757 ,  0.32479741,  1.56624078, -1.29364963,  0.34280287,\n",
              "         0.01148453],\n",
              "       [ 2.6908757 ,  1.14705919,  2.7819241 , -0.48432036,  0.44764715,\n",
              "         0.36503434],\n",
              "       [-0.29414007,  0.70757461, -0.68720951,  0.96521184,  0.6497669 ,\n",
              "        -0.85909739],\n",
              "       [-0.27686189,  0.98268509, -0.87780605,  0.93997335,  1.04221473,\n",
              "        -0.8057818 ],\n",
              "       [-0.17181241,  1.22215476, -0.68511184,  0.93804771,  0.66491739,\n",
              "        -0.86589948],\n",
              "       [-0.18637293,  1.66334801, -0.44717653,  0.99312799,  0.71676496,\n",
              "        -0.80086002],\n",
              "       [-0.87249913, -1.33758271, -0.33544369, -1.16055223, -1.1337393 ,\n",
              "        -0.65661071],\n",
              "       [-0.76022845, -1.17726286, -0.68704041, -1.03079337, -1.09050322,\n",
              "        -0.65273622],\n",
              "       [-0.47919259, -1.000877  , -0.75613283, -0.57204546, -0.94428665,\n",
              "        -0.59846134],\n",
              "       [-0.35887495, -1.0170706 , -0.44274575, -0.28804129, -0.78020394,\n",
              "        -0.57180245],\n",
              "       [ 0.49229343, -1.32155923, -1.53257358, -1.09544719, -1.5813578 ,\n",
              "         2.07900412],\n",
              "       [ 0.39628246, -1.29391421, -1.05622756, -0.89308126, -1.66586468,\n",
              "         2.39740762],\n",
              "       [ 0.40318972, -0.83989792, -1.04766566, -0.73990702, -1.22878721,\n",
              "         2.63152784],\n",
              "       [ 0.32788429, -0.44038671, -0.90073654, -0.8909961 , -1.04387257,\n",
              "         2.76081805],\n",
              "       [-1.2095391 , -0.42071436,  0.1825515 , -1.4019985 , -0.76612542,\n",
              "        -1.20361861],\n",
              "       [-1.04248   , -0.0797662 , -0.06879603, -1.25927287,  0.26943232,\n",
              "        -1.14740414],\n",
              "       [ 0.40318972, -0.12970799,  0.22058775, -1.50333984, -0.0727759 ,\n",
              "        -1.10475201],\n",
              "       [-0.69217118,  0.22206426, -0.16364909, -1.26273676,  0.16362898,\n",
              "        -1.04789586],\n",
              "       [ 0.46166662,  0.18073495,  1.58404954,  0.02239776,  0.13111259,\n",
              "         0.16220049],\n",
              "       [ 0.79014158,  0.2029254 ,  1.61455774,  0.1893022 ,  1.39142648,\n",
              "         0.19117232],\n",
              "       [ 0.81393711,  0.39720609,  2.00281225,  0.4121415 ,  1.6115017 ,\n",
              "         0.14965638],\n",
              "       [ 0.79432738,  0.39792912,  3.54001647,  0.72783563,  1.12854396,\n",
              "         0.1747113 ],\n",
              "       [ 0.91760133,  0.43322968, -0.66402815,  2.28270631, -1.02136122,\n",
              "         0.05132942],\n",
              "       [ 0.99780849,  0.70289622, -0.43498866,  2.0064617 , -0.78517073,\n",
              "         0.10830866],\n",
              "       [ 0.88441883,  0.53622865, -0.08894647,  2.23597808, -0.60097073,\n",
              "         0.05467748],\n",
              "       [ 1.04492294,  0.41655761,  1.57182742,  2.55352721, -0.51507029,\n",
              "         0.16452661],\n",
              "       [-1.17969281, -1.19290356, -1.05158273, -1.17878319, -1.15467843,\n",
              "        -1.07786984],\n",
              "       [-1.06568841, -1.25803948, -0.68715599, -1.12648312, -1.18297841,\n",
              "        -1.00343167],\n",
              "       [-1.03171848, -1.02191911, -0.86519008, -0.97963274, -0.93928413,\n",
              "        -0.82103032],\n",
              "       [-0.92156143, -0.83557041, -0.33150521, -0.97847052, -1.47291027,\n",
              "        -0.70111617],\n",
              "       [-1.29925065, -0.51027359,  0.20937166,  0.1033888 , -0.75690648,\n",
              "        -0.74604345],\n",
              "       [-1.29342782, -0.56888103,  0.11465838, -0.15359936, -0.9771961 ,\n",
              "        -0.70581812],\n",
              "       [-1.20740475, -0.50288386,  0.12437336, -0.28199089, -0.54726509,\n",
              "        -0.67421854],\n",
              "       [-1.13392527, -0.70794612,  0.1573795 ,  0.680148  , -0.7081319 ,\n",
              "        -0.61879489],\n",
              "       [-0.81999011, -0.87989814, -0.24620724, -0.21326018, -0.56027165,\n",
              "        -1.25764804],\n",
              "       [-0.73376672, -0.60603169, -0.49692119, -0.58877236, -0.90719653,\n",
              "        -1.15811578],\n",
              "       [-0.72394459, -0.77142333, -0.66803084, -0.50423768, -1.31232933,\n",
              "        -1.2071829 ],\n",
              "       [-0.63853627, -0.89485835, -1.04449775, -0.44349441, -1.00170846,\n",
              "        -1.21934372],\n",
              "       [ 0.29947715, -0.35021956,  0.09658998,  0.62935198, -0.76791203,\n",
              "         0.01274219],\n",
              "       [ 1.07663419,  0.11357882, -0.47215589,  0.543826  , -0.75590598,\n",
              "        -0.13573976],\n",
              "       [ 1.20588292,  0.18904972, -0.02783589,  0.74863943, -0.23696581,\n",
              "        -0.05105835],\n",
              "       [ 1.76183482,  0.14197876, -0.91964379,  0.73806548, -0.31825679,\n",
              "         0.05094378],\n",
              "       [-0.19124255, -0.32175582, -0.54114343,  0.08332335,  1.56272712,\n",
              "        -0.84027803],\n",
              "       [-0.14838297, -0.23960758, -0.49660012,  0.06230078,  0.76078715,\n",
              "        -0.81946141],\n",
              "       [ 0.52656037, -0.3757593 , -0.45505348, -0.08774002,  0.93580394,\n",
              "        -0.7874184 ],\n",
              "       [ 0.54515473, -0.29564191, -0.63155713, -0.02621053,  1.17588926,\n",
              "        -0.77710646],\n",
              "       [ 0.30339633,  0.4927728 , -0.53778288,  0.3266383 , -0.09132097,\n",
              "         1.30686893],\n",
              "       [ 1.17269352,  0.7848318 , -0.52660531,  0.68158368,  0.33071321,\n",
              "         1.42735869],\n",
              "       [ 1.40221984,  0.86147231, -0.4204848 ,  0.21575988,  0.14458367,\n",
              "         1.38380325],\n",
              "       [ 1.57862101,  0.99883616,  0.76670879,  1.19568535,  0.41529156,\n",
              "         1.470524  ],\n",
              "       [-1.02286793,  2.84801834, -0.68720951, -0.41915608, -1.12523501,\n",
              "         0.90925278],\n",
              "       [-0.22877329,  3.57636214, -0.78759783, -0.45785129, -0.75590598,\n",
              "         1.23525485],\n",
              "       [-0.06352723,  3.88881533, -0.33633412, -0.12607061,  0.12035717,\n",
              "         1.53478916],\n",
              "       [ 0.3736957 ,  4.31944964, -0.1470604 ,  1.19568535, -0.31825679,\n",
              "         2.27933862],\n",
              "       [-0.02637305, -0.21957557,  0.91913208,  0.724905  ,  1.43573453,\n",
              "        -0.34924058],\n",
              "       [ 0.04674725, -0.11573662,  1.11507125,  0.46682298,  0.38581241,\n",
              "        -0.32657381],\n",
              "       [ 0.15867947, -0.16831532,  1.31049671,  0.71137991,  0.62757714,\n",
              "        -0.27615728],\n",
              "       [ 0.23164781,  0.25030471,  1.05128507,  0.84794119,  0.53817493,\n",
              "        -0.25000047],\n",
              "       [-1.22232444, -0.77007298, -1.07532061, -1.16391898,  1.48093588,\n",
              "         0.82756863],\n",
              "       [-0.76275651, -0.25509942, -0.90112867, -1.096892  ,  1.61389577,\n",
              "         0.88869503],\n",
              "       [-0.86935633, -0.54586677, -0.70852865, -1.04750891,  1.23709868,\n",
              "         0.99354213],\n",
              "       [-0.83182916, -0.25509942,  0.51269851,  0.18391267,  1.75428797,\n",
              "         1.11908963]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 246
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-7FwL7GzxYdt",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "21c8ecc6-8cad-4aff-f681-1fc7c1b2e467"
      },
      "source": [
        "y_1 = Economia_digital[['Unemployment rate']]\n",
        "# sacale data acording to computed scaling values\n",
        "StandardScaler().fit(y_1).transform(y_1)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 0.19162036],\n",
              "       [ 0.01592576],\n",
              "       [-0.25541599],\n",
              "       [-0.39625841],\n",
              "       [ 0.58219309],\n",
              "       [ 0.62633881],\n",
              "       [ 0.69403908],\n",
              "       [ 0.88982086],\n",
              "       [-0.72428355],\n",
              "       [-0.981771  ],\n",
              "       [-1.13758053],\n",
              "       [-1.19056779],\n",
              "       [-0.26913789],\n",
              "       [-0.28216693],\n",
              "       [-0.49680041],\n",
              "       [-0.52053146],\n",
              "       [-0.03335959],\n",
              "       [-0.27471663],\n",
              "       [-0.39328182],\n",
              "       [-0.59727254],\n",
              "       [ 0.44261833],\n",
              "       [ 0.40256333],\n",
              "       [ 0.09274309],\n",
              "       [-0.069556  ],\n",
              "       [ 0.72620224],\n",
              "       [ 0.56971884],\n",
              "       [ 0.49050031],\n",
              "       [ 0.3440203 ],\n",
              "       [-0.6800717 ],\n",
              "       [-0.77101762],\n",
              "       [-0.85760572],\n",
              "       [-0.91778453],\n",
              "       [ 3.94311525],\n",
              "       [ 3.45663444],\n",
              "       [ 2.93470483],\n",
              "       [ 2.46418848],\n",
              "       [-0.45827015],\n",
              "       [-0.68434013],\n",
              "       [-0.79030128],\n",
              "       [-0.86004551],\n",
              "       [-0.84766273],\n",
              "       [-0.86091894],\n",
              "       [-0.92847255],\n",
              "       [-0.7202523 ],\n",
              "       [ 0.34169088],\n",
              "       [-0.07457107],\n",
              "       [-0.35119207],\n",
              "       [-0.60301882],\n",
              "       [ 1.141448  ],\n",
              "       [ 1.03146536],\n",
              "       [ 0.88806783],\n",
              "       [ 0.73130264],\n",
              "       [-0.77866064],\n",
              "       [-0.78625465],\n",
              "       [-0.7464667 ],\n",
              "       [-0.77116925],\n",
              "       [ 0.23293858],\n",
              "       [ 0.05207281],\n",
              "       [-0.17677397],\n",
              "       [-0.14356298],\n",
              "       [-0.24236484],\n",
              "       [-0.5256706 ],\n",
              "       [-0.77072416],\n",
              "       [-0.878892  ],\n",
              "       [-0.53794892],\n",
              "       [-0.66617036],\n",
              "       [-0.74945253],\n",
              "       [-0.78161877],\n",
              "       [-0.19823351],\n",
              "       [-0.50124594],\n",
              "       [-0.75189157],\n",
              "       [-0.88803504],\n",
              "       [ 0.62118226],\n",
              "       [ 0.26515907],\n",
              "       [-0.11202697],\n",
              "       [-0.29490915],\n",
              "       [ 0.24238703],\n",
              "       [-0.09826973],\n",
              "       [-0.44537183],\n",
              "       [-0.61145946],\n",
              "       [ 3.00437339],\n",
              "       [ 2.43138456],\n",
              "       [ 1.96164613],\n",
              "       [ 1.68612652],\n",
              "       [ 0.00624135],\n",
              "       [-0.06354082],\n",
              "       [-0.14537133],\n",
              "       [-0.03442612],\n",
              "       [-0.47295513],\n",
              "       [-0.50209603],\n",
              "       [-0.52352604],\n",
              "       [-0.60668202],\n",
              "       [ 0.9570132 ],\n",
              "       [ 0.96553337],\n",
              "       [ 0.97350144],\n",
              "       [ 1.64728484],\n",
              "       [-0.49857339],\n",
              "       [-0.61936243],\n",
              "       [-0.67013604],\n",
              "       [-0.73928559],\n",
              "       [-0.50904296],\n",
              "       [-0.63425991],\n",
              "       [-0.74535782],\n",
              "       [-0.79775176]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 247
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Balf50IU29ZO"
      },
      "source": [
        "### ***Breves Conclusiones***"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zFfmKrkS2_oo"
      },
      "source": [
        "Al tener una base de serie de tiempo decidimos realizar por cada año unas regresiones distintas, en los 4 años. Para las regresiones partimos nuestra base en 90/10 es decir que las regresiones solo entrenaron con un 10% de los datos debido a tamaño de la base de datos, el mejor estimador en este caso en los 4 años años fue con el de regresión lasso, el cual nos daba el menor error cuadratico fuera y dentro de muestra en la mayoria de pruebas que hicimos. Para la regresión  total con toda la base el modelo lasso tambien fue el mejor, sin embargo debemos tener cuidado con los resultados ya que pueden estar del todo certero debido a la cualidade de la base de datos. Variables como: \"Bussiness through computer networks\" , \"Bussines offered ICT specialist\" , \"GERD as a percentage of GDP\" afectaban negativamente nuestra variable 'Unemployment rate' en todas las regresiones. "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "lu5uwY2BR9O6"
      },
      "source": [
        "## **Bases secundarias**\n",
        "\n",
        "\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "---\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "L7zIdWkIjHa4"
      },
      "source": [
        "### **Inteligencia artificial** \n",
        "\n",
        "Fuente: OECD Statistics.\n",
        "\n",
        "Variables:\n",
        "\n",
        "*   Años : desde el 2017 al 2020.\n",
        "*   Concepto: (machine learning\ty artificial intelligence) \t\n",
        "*   Probabilidad de obtener al menos un empleo en estas areas.\n",
        "* Paises: Todos, USA, Alemania(DEU), Reino unido(GBR)."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SdsoTqs3Htog",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "0be2cda9-f035-44a1-b41e-de54509e262e"
      },
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "IA_subtemas_demandalab = pd.read_csv(\"/content/relative-domestic-demand.csv\")\n",
        "IA_subtemas_demandalab"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>concept</th>\n",
              "      <th>Probability of appearance in a single job posting</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2017-11-26</td>\n",
              "      <td>machine learning</td>\n",
              "      <td>0.009822</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2017-12-03</td>\n",
              "      <td>machine learning</td>\n",
              "      <td>0.009944</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2017-12-10</td>\n",
              "      <td>machine learning</td>\n",
              "      <td>0.010113</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2017-12-17</td>\n",
              "      <td>machine learning</td>\n",
              "      <td>0.010315</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2017-12-24</td>\n",
              "      <td>machine learning</td>\n",
              "      <td>0.010460</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>319</th>\n",
              "      <td>2020-11-29</td>\n",
              "      <td>artificial intelligence</td>\n",
              "      <td>0.018913</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>320</th>\n",
              "      <td>2020-12-06</td>\n",
              "      <td>artificial intelligence</td>\n",
              "      <td>0.018653</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>321</th>\n",
              "      <td>2020-12-13</td>\n",
              "      <td>artificial intelligence</td>\n",
              "      <td>0.018498</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>322</th>\n",
              "      <td>2020-12-20</td>\n",
              "      <td>artificial intelligence</td>\n",
              "      <td>0.018442</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323</th>\n",
              "      <td>2020-12-27</td>\n",
              "      <td>artificial intelligence</td>\n",
              "      <td>0.018548</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>324 rows × 3 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "           date  ... Probability of appearance in a single job posting\n",
              "0    2017-11-26  ...                                          0.009822\n",
              "1    2017-12-03  ...                                          0.009944\n",
              "2    2017-12-10  ...                                          0.010113\n",
              "3    2017-12-17  ...                                          0.010315\n",
              "4    2017-12-24  ...                                          0.010460\n",
              "..          ...  ...                                               ...\n",
              "319  2020-11-29  ...                                          0.018913\n",
              "320  2020-12-06  ...                                          0.018653\n",
              "321  2020-12-13  ...                                          0.018498\n",
              "322  2020-12-20  ...                                          0.018442\n",
              "323  2020-12-27  ...                                          0.018548\n",
              "\n",
              "[324 rows x 3 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "D9WHRKzZQTXq",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2ca5b4a5-7f19-40c7-d885-73dac59bf368"
      },
      "source": [
        "IA_subtemas_demandalab.info()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 324 entries, 0 to 323\n",
            "Data columns (total 3 columns):\n",
            " #   Column                                             Non-Null Count  Dtype  \n",
            "---  ------                                             --------------  -----  \n",
            " 0   date                                               324 non-null    object \n",
            " 1   concept                                            324 non-null    object \n",
            " 2   Probability of appearance in a single job posting  324 non-null    float64\n",
            "dtypes: float64(1), object(2)\n",
            "memory usage: 7.7+ KB\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GTwXzbSrQrDX"
      },
      "source": [
        "IA_demandlab = IA_subtemas_demandalab.set_index([\"date\",\"concept\"])\n"
      ],
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mXlAJXGjRJ4L",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "02c5b83a-9900-470f-ade1-0b531a1fb2cf"
      },
      "source": [
        "IA_demandlab.mean(1)"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "date        concept                \n",
              "2017-11-26  machine learning           0.009822\n",
              "2017-12-03  machine learning           0.009944\n",
              "2017-12-10  machine learning           0.010113\n",
              "2017-12-17  machine learning           0.010315\n",
              "2017-12-24  machine learning           0.010460\n",
              "                                         ...   \n",
              "2020-11-29  artificial intelligence    0.018913\n",
              "2020-12-06  artificial intelligence    0.018653\n",
              "2020-12-13  artificial intelligence    0.018498\n",
              "2020-12-20  artificial intelligence    0.018442\n",
              "2020-12-27  artificial intelligence    0.018548\n",
              "Length: 324, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "id": "XshpTG6h61O2",
        "outputId": "c9f37583-5e21-4b47-b4b3-c07b707d057d"
      },
      "source": [
        "IA_demandlab.describe()"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Probability of appearance in a single job posting</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>324.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>0.017413</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>0.003070</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.009822</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>0.015296</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>0.017839</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>0.020072</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>0.022550</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "       Probability of appearance in a single job posting\n",
              "count                                         324.000000\n",
              "mean                                            0.017413\n",
              "std                                             0.003070\n",
              "min                                             0.009822\n",
              "25%                                             0.015296\n",
              "50%                                             0.017839\n",
              "75%                                             0.020072\n",
              "max                                             0.022550"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0eGCGUFSYbUf",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7b0c75ce-a7d3-4c01-bc9f-57cc79c529a8"
      },
      "source": [
        "IA_demandlabt = IA_demandlab.groupby(['concept'])['Probability of appearance in a single job posting'].sum()\n",
        "IA_demandlabt"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "concept\n",
              "artificial intelligence    3.048465\n",
              "machine learning           2.593223\n",
              "Name: Probability of appearance in a single job posting, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YaxSCfkrZqc-",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 388
        },
        "outputId": "be53984c-73b9-4ede-eaeb-3f824808f81e"
      },
      "source": [
        "IA_demandlabt.plot(kind='bar', color = (\"cadetblue\", 'darkseagreen'), title = 'Posibilidad de obtener trabajo en IA y Machine Learning')\n",
        "plt.show()"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXUAAAFzCAYAAADBpJnVAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nO3deZgcZb328e+dBZA1YKJASAgERMGFJbII7zGC+gIK+AIqqKwKrgfwgOIOBzfkeFyQo4giIYDIKicioMgiIgJOIIAQ0cgihCWBkACyBn7vH/V0Umm6p3uGztT00/fnuuaa7qqnqn5T1X1P9VPVVYoIzMwsDyOqLsDMzDrHoW5mlhGHuplZRhzqZmYZcaibmWXEoW5mlpFsQl3SFyT9ND2eJCkkjRpoW0mXSjqgyXT9zreNGkPSRm22PVbSmYNZTov5TpP0tU7PdziTdLWkjwxy2pMlfbnTNfUqSQdKuraf8U3ffzmQdLukqctzGZWFuqR7JD0t6UlJD6ewWXWw84uIb0REW2/c/tpGxC4Rcfpg6+h2A/nHMxSqriciPhYRX61q+QCSpkq6v8HwaZIWS1qng8ualtb5HnXDv5uGH9ipZTWyvN5/y2snaaAiYrOIuHp5LqPqPfXdImJVYEtgCvCliuuxiryMTz+Dmq7bSVoF2AtYBHyow7P/G7B/aVmjgPcB/+jwcrIyXF6LVYc6ABExF7gUeD2ApN3Tx5SF6aPz62ptJR0taa6kJyTdKWmnNLzRf+KDJT0g6UFJR5Xm0fS/dvmjuqSRkr4t6RFJdwHvqmt7kKTZqZa7JH20bvxn0rIfkHRwf+tA0gaSfp/mdTkwtm78tpKuS+vklv4+wkl6Xfo7Fqb1uHtdk7GSLk/L+r2k9dN016Txt6RPUO9Pw98taVaa33WS3lha1j2SjpJ0q6RFks6RtFJpfKtpj5Z0K/Cv+jdFo3pqe61puoeA0yStKeliSfMlPZYer1f3N0+WdKOkxyX9r6S1Sss5T9JDqf5rJG1WGrdMd5WkQyTNkbRA0gxJ6/azHZpus7R9virpj2k7/FbS2GbzamAvYCFwHNC0u0LSm1V8Eh5ZGranpFv6mfevgB0krZme7wzcCjxUmsdkSVdKejS9P86SNKY0foKkC9M2eVTSSXV1fTttq7sl7VIaXn7/HSjp2n7ariHp1PQemyvpa+W/s10tttNBavIeb/JaPFbSuZKmp2lulzSlNM09kt6eHrdqu6Wkm9O489J7q3XXaURU8gPcA7w9PZ4A3A58FXgN8C/gHcBo4LPAHGAFYBPgPmDdNN0kYHJ6fCxwZml4AGcDqwBvAOaXlteo7aj0/GrgI+nxx4C/pvrWAq6qa/suYDIg4K3AU8CWadzOwMMU/6hWAX6ept2oyfr4E/AdYEXg34AnSjWOBx4FdqX4R/yO9Hxcg/mMTuvrC2md7ZjmtUkaPy09/7e0rO8D15amX6ZGYAtgHrANMJIiQO4BVixtxxuBddM6mg18bADTzkrr9xVN1kt9PVOBxcC3Uv2vAF5JEXIrA6sB5wEXlaa5Gphb2hYX1NZtGn9wmm5F4HvArNK4acDX0uMdgUcoPlmuCPwAuKZJ3f1us1TTPyhe769Iz49vMq+pwP11w64ATgBendbHVv281+4Adik9/yVwZJO204CvAacAH0/DzgX2Ba4FDkzDNkp/04rAOOAa4Htp3EjgFuC7aX2vBOyQxh0IPA8cktp9HHgAUIP3X6u2vwR+nJbxKorX4Ueb/F3Hlrf5ALZTf+/xqbz0tXgs8Eya30jgm8D1TXKvaVuK9+69wOEU7+k9gedIr8V+s7WKQC/9cU9S7G3cC/wwrZQvA+eW2o2geENOTS+kecDbgdHNNhpLg/q1pfEnAKf207ZRqF9JCqj0/J3ltg3+pouAw9Pjn1F6k1K8eRuGOjAxvThWKQ37eanGo4Ez6qb5DXBAg3n9H4o9qhGlYWcDx5betL8ojVsVeAGYkJ7Xh+iPgK/WLeNO4K2l7fihuvV88gCmPbjF66RRqD8HrNTPNJsDj5WeX123LTZN8xjZYNoxaZlrlNZXLdRPBU6oW3fPA5MazKffbZZq+lJp3CeAy5r8PVMphXp6vbwIbF6a7/f7WR9HA2elx2tRBNM6TdpOowj1HSh2NMZQ7Jy8glKoN5juPcDN6fF2FDtRL3mfUAT1nNLzldP6XrvB+69pW4p/Zs9S2hmg+MdzVZP6jqVxqLf93oqXvsdf8lpMy/ld3Wvt6dLze1g21Bu2pdjpmkv6B5aGXUsboV5198t7ImJMRKwfEZ+IiKcp9vjurTWIiBcp9s7HR8Qc4AiKlTFP0i/6+/ibpqu5N817INZtMI8lJO0i6fr0UXwhxX/cse1M22A5j0XEv5q0Xx94b/p4uDAtaweg0QGydYH70norz2t86fmSuiLiSWABzdfN+sCRdcueUNf+odLjpyjCrt1py+uoXfMj4pnaE0krS/qxpHslPU6x1zim7qN4/bYYTdENNVLS8ZL+kaa9J7Vp1BVS/9p8kmKvbnyDtu1ss2brrZX9gNkRMSs9Pwv4gKTRTdqfCeymoh/+fcAfIuLB/hYQEddS7IF/Ebg4vTeXkPTq9P6bm9bbmSxdZxOAeyNicZPZL/m7I+Kp9LDZ396s7foU2/DB0vr9McUe+0D0u51avMeh7rVYXzPFdl1Jzfvbm7VdF5gbKc2Ttt4rVYd6Iw9QrGgAJIniRTIXICJ+HhE7pDZB8dGnmQmlxxPTvAfiwQbzqNW1IsXH+G8Dr46IMcAlFB/T+p22yXLWTG+6Ru3vo9ibGFP6WSUijm8wrweACZLK23Yiaf0lS+pSccbRWjRfN/cBX69b9soRcXY/f89Apo1mE/ejfpojKbrmtomI1Sn2cmDptoCXbovnKbpSPgDsQfHpbw2KT27109bUvzZXoej6mdug7UC22UDtD2yo4jjAQxTddmMpAuclojhm9SeKj/D7AWe0uZwzKdbt9AbjvkGxHd6Q1vmHWLrO7gMm9hNknXAfxZ762NL6XT0iNms1YYP5NNxObbzHYXCv33Y8CIxP+VczoVnjsuEY6ucC75K0U9rzOJJi410naRNJO6aV/QzwNMXH0Ga+nPbiNgMOAs4ZRC2HSVpPxUGjz5XGrUDRjzYfWJwO4LyzbtoDJW0qaWXgmGYLiYh7gT7gPyWtIGkHYLdSk9qe1v9Ne5YrpYM09QcDAW6g+I//WUmj00Gf3YBflNrsKmkHSStQHMe4PiJqewEPAxuW2v4E+JikbVRYRdK7JK3W7O/p0LQ19fU0shrFa2GhigOgjdb1h0rb4jjg/Ih4IU37LMUe98oUYdXM2cBBkjZPr8FvADdExD0N2g5km7VN0nYUfbxbU3QzbU5xrODnlM5YaWA6xfGpNwAXtrm4Eyn6mK9pMG41iu7TRZLGA58pjbuRIpSOT9t8JUnbt7nMtqRPGr8F/lvS6pJGqDh4+9Z+JhuRaqn9rEj/26nVe3x5+hNFt+inJI1ScYrp1u1MOOxCPSLupPiv/wOKPandKE59fI5iBR+fhj9E8VHr8/3M7vcUBw2vAL4dEb8dYDk/oehfuwW4idKbISKeAA6jCO/HKPb4ZpTGX0px0O3KVMOVLZb1AYoDigsoQmnJ3lEK3D0oDn7Op9i7+AwNtl9aT7sBu1Cspx8C+0fEX0vNfp6WsQDYimVPiTsWOD19FH1fRPRRHKg6Kf2dcyj6Olt6OdM2q6dJm+9R9Pk+AlwPXNagzRkU/cUPURy4OywNn07RpTKX4oDi9c0KiYjfURzzuYAitCYD+zRp2/Y2G6ADgP+NiNsi4qHaD8UB73erdFZPnV9SfMr4Zakbo18RsSAirqjrAqj5T4oDxouAX7Pse+MFitfgRsA/gfuB97f35w3I/hTBewfF6+t8GndJ1uxL8c+/9vOP/rZTq/f48pTex3sCH6Y47vgh4GKKHZB+qfH2MjMASdMpDtYdV3UtL5ekf1CcHfK7qmuxgZN0A8VJCKf1127Y7ambDRepT3gT4O6qa3m5JO1F0f/b6hOjDROS3ipp7dT9cgDwRhp/Cl3GsPgGlNkw9RAwk6K7pWtJupridLn96s6KsuFtE4qun1WAu4C9W521BO5+MTPLirtfzMwy4lA3M8tIZX3qY8eOjUmTJlW1eDOzrjRz5sxHImJcs/GVhfqkSZPo6+uravFmZl1JUn+XHHH3i5lZThzqZmYZcaibmWXEoW5mlhGHuplZRhzqZmYZcaibmWXEoW5mlpGWXz6StBLFnU9WTO3Pj4hj6tqsSHGzga0o7iDz/iZ3g+k6B552etUlZGXaQQdUXYJZ1trZU38W2DEi3kRx66ydJW1b1+bDFDdO3gj4Lv3fN9TMzJaTlqEehSfT09Hpp/56vXsAtV3a84Gd6m6YamZmQ6CtPvV0Q9ZZwDzg8oi4oa7JeIp7+xERiynuW/jKThZqZmattRXqEfFCRGwOrAdsLen1g1mYpEMl9Unqmz9//mBmYWZm/RjQ2S8RsRC4Cti5btRcYAIsua/jGhQHTOunPyUipkTElHHjml450szMBqllqEsaJ2lMevwK4B3AX+uazQBqpzXsDVwZvk+emdmQa+d66usAp0saSfFP4NyIuFjScUBfRMwATgXOkDQHWADss9wqNjOzplqGekTcCmzRYPhXSo+fAd7b2dLMzGyg/I1SM7OMONTNzDLiUDczy4hD3cwsIw51M7OMONTNzDLiUDczy4hD3cwsIw51M7OMONTNzDLiUDczy4hD3cwsIw51M7OMONTNzDLiUDczy4hD3cwsIw51M7OMONTNzDLiUDczy4hD3cwsIw51M7OMONTNzDIyquoCzGxwvnfF96ouIStH7HRE1SV0hPfUzcwy4lA3M8tIy1CXNEHSVZLukHS7pMMbtJkqaZGkWennK8unXDMz6087feqLgSMj4iZJqwEzJV0eEXfUtftDRLy78yWamVm7Wu6pR8SDEXFTevwEMBsYv7wLMzOzgRtQn7qkScAWwA0NRm8n6RZJl0rarAO1mZnZALV9SqOkVYELgCMi4vG60TcB60fEk5J2BS4CNm4wj0OBQwEmTpw46KLNzKyxtvbUJY2mCPSzIuLC+vER8XhEPJkeXwKMljS2QbtTImJKREwZN27cyyzdzMzqtXP2i4BTgdkR8Z0mbdZO7ZC0dZrvo50s1MzMWmun+2V7YD/gNkmz0rAvABMBIuJkYG/g45IWA08D+0RELId6zcysHy1DPSKuBdSizUnASZ0qyszMBsffKDUzy4hD3cwsIw51M7OMONTNzDLiUDczy4hD3cwsIw51M7OMONTNzDLiUDczy4hD3cwsIw51M7OMONTNzDLiUDczy4hD3cwsIw51M7OMONTNzDLiUDczy4hD3cwsIw51M7OMONTNzDLiUDczy4hD3cwsIw51M7OMONTNzDLiUDczy0jLUJc0QdJVku6QdLukwxu0kaQTJc2RdKukLZdPuWZm1p9RbbRZDBwZETdJWg2YKenyiLij1GYXYOP0sw3wo/TbzMyGUMs99Yh4MCJuSo+fAGYD4+ua7QFMj8L1wBhJ63S8WjMz69eA+tQlTQK2AG6oGzUeuK/0/H5eGvxmZractR3qklYFLgCOiIjHB7MwSYdK6pPUN3/+/MHMwszM+tFWqEsaTRHoZ0XEhQ2azAUmlJ6vl4YtIyJOiYgpETFl3Lhxg6nXzMz60c7ZLwJOBWZHxHeaNJsB7J/OgtkWWBQRD3awTjMza0M7Z79sD+wH3CZpVhr2BWAiQEScDFwC7ArMAZ4CDup8qWZm1krLUI+IawG1aBPAJztVlJmZDY6/UWpmlhGHuplZRhzqZmYZcaibmWXEoW5mlhGHuplZRhzqZmYZcaibmWXEoW5mlhGHuplZRhzqZmYZcaibmWXEoW5mlhGHuplZRhzqZmYZcaibmWXEoW5mlhGHuplZRhzqZmYZcaibmWXEoW5mlhGHuplZRhzqZmYZcaibmWXEoW5mlpGWoS7pZ5LmSfpLk/FTJS2SNCv9fKXzZZqZWTtGtdFmGnASML2fNn+IiHd3pCIzMxu0lnvqEXENsGAIajEzs5epU33q20m6RdKlkjbr0DzNzGyA2ul+aeUmYP2IeFLSrsBFwMaNGko6FDgUYOLEiR1YtJmZlb3sPfWIeDwinkyPLwFGSxrbpO0pETElIqaMGzfu5S7azMzqvOxQl7S2JKXHW6d5Pvpy52tmZgPXsvtF0tnAVGCspPuBY4DRABFxMrA38HFJi4GngX0iIpZbxWZm1lTLUI+IfVuMP4nilEczM6uYv1FqZpYRh7qZWUYc6mZmGXGom5llxKFuZpYRh7qZWUYc6mZmGXGom5llxKFuZpYRh7qZWUYc6mZmGXGom5llxKFuZpYRh7qZWUYc6mZmGXGom5llxKFuZpYRh7qZWUYc6mZmGXGom5llxKFuZpYRh7qZWUYc6mZmGXGom5llxKFuZpaRlqEu6WeS5kn6S5PxknSipDmSbpW0ZefLNDOzdrSzpz4N2Lmf8bsAG6efQ4EfvfyyzMxsMFqGekRcAyzop8kewPQoXA+MkbROpwo0M7P2daJPfTxwX+n5/WnYS0g6VFKfpL758+d3YNFmZlY2pAdKI+KUiJgSEVPGjRs3lIs2M+sJnQj1ucCE0vP10jAzMxtinQj1GcD+6SyYbYFFEfFgB+ZrZmYDNKpVA0lnA1OBsZLuB44BRgNExMnAJcCuwBzgKeCg5VWsmZn1r2WoR8S+LcYH8MmOVWRmZoPmb5SamWXEoW5mlhGHuplZRhzqZmYZcaibmWXEoW5mlhGHuplZRhzqZmYZcaibmWXEoW5mlhGHuplZRhzqZmYZcaibmWXEoW5mlhGHuplZRhzqZmYZcaibmWXEoW5mlhGHuplZRhzqZmYZcaibmWXEoW5mlhGHuplZRhzqZmYZcaibmWWkrVCXtLOkOyXNkfS5BuMPlDRf0qz085HOl2pmZq2MatVA0kjgf4B3APcDf5Y0IyLuqGt6TkR8ajnUaGZmbWpnT31rYE5E3BURzwG/APZYvmWZmdlgtBPq44H7Ss/vT8Pq7SXpVknnS5rQaEaSDpXUJ6lv/vz5gyjXzMz606kDpb8CJkXEG4HLgdMbNYqIUyJiSkRMGTduXIcWbWZmNe2E+lygvOe9Xhq2REQ8GhHPpqc/BbbqTHlmZjYQ7YT6n4GNJW0gaQVgH2BGuYGkdUpPdwdmd65EMzNrV8uzXyJisaRPAb8BRgI/i4jbJR0H9EXEDOAwSbsDi4EFwIHLsWYzM2uiZagDRMQlwCV1w75Sevx54POdLc3MzAbK3yg1M8uIQ93MLCMOdTOzjDjUzcwy4lA3M8uIQ93MLCMOdTOzjDjUzcwy4lA3M8uIQ93MLCMOdTOzjDjUzcwy4lA3M8uIQ93MLCMOdTOzjDjUzcwy4lA3M8uIQ93MLCMOdTOzjDjUzcwy4lA3M8uIQ93MLCMOdTOzjDjUzcwy4lA3M8tIW6EuaWdJd0qaI+lzDcavKOmcNP4GSZM6XaiZmbXWMtQljQT+B9gF2BTYV9Kmdc0+DDwWERsB3wW+1elCzcystXb21LcG5kTEXRHxHPALYI+6NnsAp6fH5wM7SVLnyjQzs3aMaqPNeOC+0vP7gW2atYmIxZIWAa8EHik3knQocGh6+qSkOwdTtDU0lrr1PRydfvCBVZdgQ68rXpuf5tNVl9Cu9fsb2U6od0xEnAKcMpTL7BWS+iJiStV1mNXza3NotdP9MheYUHq+XhrWsI2kUcAawKOdKNDMzNrXTqj/GdhY0gaSVgD2AWbUtZkBHJAe7w1cGRHRuTLNzKwdLbtfUh/5p4DfACOBn0XE7ZKOA/oiYgZwKnCGpDnAAorgt6Hlbi0brvzaHELyDrWZWT78jVIzs4w41M3MMuJQNzPLyJCep26dI+nVwDeAdSNil3Tphu0i4tSKS7MeJ2nPBoMXAbdFxLyhrqfX+EBpl5J0KXAa8MWIeFP6fsDNEfGGikuzHifp18B2wFVp0FRgJrABcFxEnFFRaT3B3S/da2xEnAu8CMWpp8AL1ZZkBhQ9AK+LiL0iYi+KCwEGxeVFjq60sh7gUO9e/5L0Soo3C5K2pfiIa1a1CRHxcOn5vDRsAfB8RTX1DPepd6//oPgm72RJfwTGUXyb16xqV0u6GDgvPd8rDVsFWFhdWb3BfepdLPWjbwIIuDMivBdklUuX3d4L2D4N+iNwgS8dMjQc6l1K0ieBsyJiYXq+JrBvRPyw2srMrEruU+9eh9QCHSAiHgMOqbAeM6A4pVHS3yUtkvS4pCckPV51Xb3Cferda6Qk1T7SptsOrlBxTWYAJwC7RcTsqgvpRQ717nUZcI6kH6fnH03DzKr2sAO9Ou5T71KSRlAE+U5p0OXATyPC56pbpSR9H1gbuAh4tjY8Ii6srKge4lA3s46SdFqDwRERBw95MT3Iod6lJG0PHEtxE9pRFKc1RkRsWGVdZlYth3qXkvRX4NMU19RY0uUSEb43rFVC0mcj4gRJPyB907ksIg6roKye4wOl3WtRRFxadRFmJbWDo32VVtHjvKfepSQdT3HP2AtZ9mDUTZUVZWaVc6h3KUlXNRgcEbHjkBdjViLpNcBRwCRKvQF+bQ4Nh7qZdZSkW4CTeenxnpmVFdVDHOpdync+suFK0syI2KrqOnqVr/3SvaYBvwHWTc//BhxRWTVmS/1K0ickrSNprdpP1UX1Cu+pdylJf46IN0u6OSK2SMNmRcTmVddmvU3S3Q0G+zsUQ8SnNHYv3/nIhp10+YrPRcQ5VdfSq7yn3qUkbQn8AHg98BfSnY8i4tZKC7OeJ6kvIqZUXUevcqh3Md/5yIaj9B2KR4BzgH/Vhqd7lNpy5lDvUpL2bDB4EXBbRMwb6nrMatynXi2HepeS9GtgO6D2JaSpFOcFbwAcFxFnVFSamVXIB0q71yjgdRHxMCw5b306sA1wDeBQt8pIej2wKbBSbVhETK+uot7hUO9eE2qBnsxLwxZIct+6VUbSMRSfHDcFLgF2Aa6l2Omw5cyh3r2ulnQxcF56vlcatgqwsPlkZsvd3sCbgJsj4qD0KfLMimvqGQ717vVJiiDfPj2fDlyQbkT9tsqqMoOnI+JFSYslrU76FFl1Ub3Cod6lUnifn37MhpM+SWOAn1AcvH8S+FO1JfUOn/3SZSRdGxE7SHqCZe8uU7ud3eoVlWb2EpImAav7S3FDx6FuZh0lScAHgQ0j4jhJE4G1I+LGikvrCQ71LtPqanf+1p5VTdKPgBeBHSPidZLWBH4bEW+uuLSe4D717jOTottFDcYF4G/tWdW2iYgtJd0MEBGPSVqh6qJ6hUO9y0TEBlXXYNbC85JGsvQKouMo9txtCDjUu0y6OmNTvvG0DQMnAr8EXiXp6xTnrX+p2pJ6h/vUu0yTG07X+MbTNixIei2wE0U34RURMbviknqGQ93MOsIH8YcHh3qXkrQy8B/AxIg4VNLGwCYRcXHFpVmPSpfcLR/Er4VL7TsUPog/BBzqXUrSORRnwuwfEa9PIX+d71Fq1ttGVF2ADdrkiDgBeB4gIp6i8WmOZtZDHOrd6zlJr2DpaWOTgWerLcnMquZTGrvXscBlwARJZ1FcrfGgSisys8q5T72LSXolsC1Ft8v1EfFIxSWZASBpB2DjiDgtfflo1YhodO9S6zCHepeSdEVE7NRqmNlQS3c+mkJxNtZrJK0LnBcR27eY1DrA3S9dRtJKwMrA2HShpNrB0dWB8ZUVZrbU/wO2AG4CiIgHJK1WbUm9w6HefT4KHAGsS3FKYy3UHwdOqqoos5LnIiIk1Q7ir1J1Qb3E3S9dStK/R8QPqq7DrJ6ko4CNgXcA3wQOBn7u1+vQcKh3MUlvASZR+sQVEb5ju1VO0juAd1J8kvxNRFxecUk9w6HepSSdAUwGZgEvpMEREYdVV5WZVc2h3qUkzQY2DW9AG2Yk7Ql8C3gVxZ667587hPyN0u71F2Dtqoswa+AEYPeIWCMiVo+I1RzoQ8dnv3SvscAdkm6kdHmAiNi9upLMAHjY10+vjkO9ex1bdQFmTfSlq4hexLI7HBdWV1LvcJ+6mXWUpNMaDI6IOHjIi+lBDvUuI+naiNhB0hMsvQkB+GCUmeFQN7MOkfTZiDhB0g9YdocDAJ9uOzTcp25mnVI7ONpXaRU9znvqZmYZ8Z66mXWUpNcAR/HSS1jsWFVNvcR76mbWUZJuAU6muIpo7RIWRMTMyorqIQ71LtPgrJclo/DZLzYMSJoZEVtVXUevcqibWUdIWis9PAyYB/ySZb98tKCKunqNQ73LSXoVsFLteUT8s8JyrIdJupviU6QajI6I2HCIS+pJDvUuJWl34L8p7oA0D1gfmB0Rm1VamJlVyldp7F5fBbYF/hYRGwA7AddXW5IZSPqkpDGl52tK+kSVNfUSh3r3ej4iHgVGSBoREVdR3MHdrGqHRMTC2pOIeAw4pMJ6eorPU+9eCyWtClwDnCVpHvCvimsyAxgpSbUbuEgaCaxQcU09w33qXSrdof0ZioNSHwTWAM5Ke+9mlZH0XxTHeH6cBn0UuC8ijqyuqt7hUDezjpI0giLId0qDLgd+GhEvNJ/KOsWh3mV86V0z649D3cw6StLGwDeBTVn2OxQ+T30I+OyXLiVpW0mrlZ6vJmmbKmsyS04DfgQsBt4GTAfOrLSiHuI99S4l6WZgy9IZBiOAvojYstrKrNfVrv0i6baIeEN5WNW19QKf0ti9lpwyBhARL0ry9rTh4Nm0k/F3SZ8C5gKrVlxTz3D3S/e6S9Jhkkann8OBu6ouygw4HFiZ4sJeWwH7AQdUWlEPcfdLl0oX8joR2JHiLJgrgCMiYl6lhZlZpRzqZtZRkqYAX6T4AlL5zkdvrKyoHuJQ7zK+Y7sNd5LuBD4D3Aa8WBseEfdWVlQP8YG17nNH+u07tttwNT8iZlRdRK9yqHef9wMXA2Mi4vtVF2PWwDGSfkpxnKd856MLqyupdzjUu89WktYFDpY0nbq7zPiWYTYMHAS8FhjN0u6XABzqQ8Ch3n1OptgD2pDibu3lUI803KxKb46ITaouolf5QGmXkvSjiPh41XWY1ZN0GuF4yKoAAANJSURBVPBfEXFHy8bWcQ71LiNp9Yh4vHTn9mW4+8WqJmk2MBm4m6JPvXYFUZ/SOAQc6l1G0sUR8e4md273HdutcpLWbzTcpzQODYe6mVlGfO2XLiXpinaGmVlv8dkvXUbSShQXSxoraU2Wdr+sDoyvrDAzGxYc6t3no8ARwLose0rj48BJVRVlZsOD+9S7kKSRwBci4qtV12Jmw4v71LtQuiv7nlXXYWbDj0O9e10haS9Jat3UzHqFu1+6lKQngFUobu77DEu/4LF6pYWZWaUc6mZmGfHZL10sndK4MbBSbVhEXFNdRWZWNYd6l5L0EYob/K4HzAK2Bf5Ecc9SM+tRPlDavQ4H3gzcGxFvA7YAFlZbkplVzaHevZ6JiGcAJK0YEX8FfA1rsx7n7pfudb+kMcBFwOWSHgN8FTyzHuezXzIg6a3AGsBlEfFc1fWYWXUc6mZmGXGfuplZRhzqZmYZcaibdZikzSXtWnUd1psc6madtzngULdKONQtG5L2l3SrpFsknSFpkqQr07ArJE1M7aZJOlHSdZLukrR3aR5HS7otzeP4NGyypMskzZT0B0mvLc3nZEl9kv4m6d2SVgCOA94vaZak91exLqx3+Tx1y4KkzYAvAW+JiEckrQWcDpweEadLOhg4EXhPmmQdYAfgtcAM4HxJuwB7ANtExFNpHgCnAB+LiL9L2gb4IUsvxzAJ2BqYDFwFbAR8BZgSEZ9arn+0WQMOdcvFjsB5EfEIQEQskLQdS28mcgZwQqn9RRHxInCHpFenYW8HTouIp0rzWBV4C3Be6dL1K5bmc26az98l3UXxT8KsMg5161XPlh73d6OREcDCiNi8yfj6L3r4ix9WKfepWy6uBN4r6ZUAqevkOmCfNP6DwB9azONy4CBJK9fmERGPA3dLem8aJklvKk3zXkkjJE0GNgTuBJ4AVuvQ32U2IA51y0JE3A58Hfi9pFuA7wD/ThHStwL7UVzZsr95XEbRv94naRZwVBr1QeDDab63U/S71/wTuBG4lKLf/RmKvvVNfaDUquDLBJgNkqRpwMURcX7VtZjVeE/dzCwj3lM3M8uI99TNzDLiUDczy4hD3cwsIw51M7OMONTNzDLiUDczy8j/B8co4f2SZYfuAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8nFgWJNA85Do"
      },
      "source": [
        "A partir de las estadisticas descripitvas y la grafica se puede observar que hay una posibilidad más alta de obtener un trabajo en inteligencia artificial que en machine learning. No obstante, se ha notado un crecimiento en la demanda laboral a traves del tiempo en ambas areas."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "J3IDuRW5g-na"
      },
      "source": [
        "- **IA por paises**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8-JoMFnBDqZF",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "bd9b0094-54d1-4d97-e226-1197109d852f"
      },
      "source": [
        "IA_subtemas_demandlabint = pd.read_csv(\"/content/relative-international-demand.csv\")\n",
        "IA_subtemas_demandlabint"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>country</th>\n",
              "      <th>Probability of appearance in a single job posting</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2017-11-26</td>\n",
              "      <td>All</td>\n",
              "      <td>0.009822</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2017-12-03</td>\n",
              "      <td>All</td>\n",
              "      <td>0.009944</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2017-12-10</td>\n",
              "      <td>All</td>\n",
              "      <td>0.010113</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2017-12-17</td>\n",
              "      <td>All</td>\n",
              "      <td>0.010315</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2017-12-24</td>\n",
              "      <td>All</td>\n",
              "      <td>0.010460</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>643</th>\n",
              "      <td>2020-11-29</td>\n",
              "      <td>GBR</td>\n",
              "      <td>0.031335</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>644</th>\n",
              "      <td>2020-12-06</td>\n",
              "      <td>GBR</td>\n",
              "      <td>0.031066</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>645</th>\n",
              "      <td>2020-12-13</td>\n",
              "      <td>GBR</td>\n",
              "      <td>0.030899</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>646</th>\n",
              "      <td>2020-12-20</td>\n",
              "      <td>GBR</td>\n",
              "      <td>0.030802</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>647</th>\n",
              "      <td>2020-12-27</td>\n",
              "      <td>GBR</td>\n",
              "      <td>0.030822</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>648 rows × 3 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "           date country  Probability of appearance in a single job posting\n",
              "0    2017-11-26     All                                           0.009822\n",
              "1    2017-12-03     All                                           0.009944\n",
              "2    2017-12-10     All                                           0.010113\n",
              "3    2017-12-17     All                                           0.010315\n",
              "4    2017-12-24     All                                           0.010460\n",
              "..          ...     ...                                                ...\n",
              "643  2020-11-29     GBR                                           0.031335\n",
              "644  2020-12-06     GBR                                           0.031066\n",
              "645  2020-12-13     GBR                                           0.030899\n",
              "646  2020-12-20     GBR                                           0.030802\n",
              "647  2020-12-27     GBR                                           0.030822\n",
              "\n",
              "[648 rows x 3 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jPQpyjx6hH-y",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "dd146d37-f0d8-4b6c-c9d2-62d6d22bb32b"
      },
      "source": [
        "IA_subtemas_demandlabint.info()"
      ],
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 648 entries, 0 to 647\n",
            "Data columns (total 3 columns):\n",
            " #   Column                                             Non-Null Count  Dtype  \n",
            "---  ------                                             --------------  -----  \n",
            " 0   date                                               648 non-null    object \n",
            " 1   country                                            648 non-null    object \n",
            " 2   Probability of appearance in a single job posting  648 non-null    float64\n",
            "dtypes: float64(1), object(2)\n",
            "memory usage: 15.3+ KB\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RlIFJw1ChV13",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 450
        },
        "outputId": "5e8f30bf-4836-4c4c-b5e0-da0cf1263554"
      },
      "source": [
        "IA_demandint = IA_subtemas_demandlabint.set_index([\"date\",\"country\"])\n",
        "\n",
        "IA_demandint"
      ],
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Probability of appearance in a single job posting</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>date</th>\n",
              "      <th>country</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2017-11-26</th>\n",
              "      <th>All</th>\n",
              "      <td>0.009822</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-12-03</th>\n",
              "      <th>All</th>\n",
              "      <td>0.009944</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-12-10</th>\n",
              "      <th>All</th>\n",
              "      <td>0.010113</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-12-17</th>\n",
              "      <th>All</th>\n",
              "      <td>0.010315</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-12-24</th>\n",
              "      <th>All</th>\n",
              "      <td>0.010460</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-11-29</th>\n",
              "      <th>GBR</th>\n",
              "      <td>0.031335</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-12-06</th>\n",
              "      <th>GBR</th>\n",
              "      <td>0.031066</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-12-13</th>\n",
              "      <th>GBR</th>\n",
              "      <td>0.030899</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-12-20</th>\n",
              "      <th>GBR</th>\n",
              "      <td>0.030802</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-12-27</th>\n",
              "      <th>GBR</th>\n",
              "      <td>0.030822</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>648 rows × 1 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                    Probability of appearance in a single job posting\n",
              "date       country                                                   \n",
              "2017-11-26 All                                               0.009822\n",
              "2017-12-03 All                                               0.009944\n",
              "2017-12-10 All                                               0.010113\n",
              "2017-12-17 All                                               0.010315\n",
              "2017-12-24 All                                               0.010460\n",
              "...                                                               ...\n",
              "2020-11-29 GBR                                               0.031335\n",
              "2020-12-06 GBR                                               0.031066\n",
              "2020-12-13 GBR                                               0.030899\n",
              "2020-12-20 GBR                                               0.030802\n",
              "2020-12-27 GBR                                               0.030822\n",
              "\n",
              "[648 rows x 1 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ew4TP1l-ljWn"
      },
      "source": [
        "Porcentaje total de la probabilidad que tienen las personas en estos paises de conseguir un trabajo relacionada con IA."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KlCEJlb0hyVi",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "afd33d5c-ca96-4f44-c403-e58a5bcfc211"
      },
      "source": [
        "IA_demandint2 = IA_demandint.groupby(['country'])['Probability of appearance in a single job posting'].sum()\n",
        "IA_demandint2"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "country\n",
              "All    2.593223\n",
              "DEU    1.123426\n",
              "GBR    4.214882\n",
              "USA    3.835558\n",
              "Name: Probability of appearance in a single job posting, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "N-3Thy8XiF_i",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 307
        },
        "outputId": "83f05c69-a0cc-4ddd-984d-df9a7d502616"
      },
      "source": [
        "IA_demandint2.plot(kind='bar', color = (\"cadetblue\", 'peru'),title = 'Probabilidad de obtener trabajo en IA y Machine Learning por paises')\n",
        "plt.show()"
      ],
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-eBPtPEq-Px2"
      },
      "source": [
        "De acuerdo con las estadísticas los resultados por países indican que el panorama mundial respecto a la demanda laboral de estas áreas de IA y Machine learning, tiene un comportamiento creciente, pero de una  forma desigual, donde dominan países como Alemania con una probabilidad de 4.21% por cada oferta de trabajo relacionado a IA a lo largo de los cuatro años y Estados Unidos un 3.83% de probabilidad."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "f81WGnwZTiMi"
      },
      "source": [
        "### **Tasa de ocupación a nivel mundial** \n",
        "Fuente: OECD Statstics\n",
        "\n",
        "Variables:\n",
        "\n",
        "*   **Paises:** 30 paises.\n",
        "*   **Sexo**\n",
        "*   **Edad:** Entre 15 a más de 80 años.\n",
        "*   **Categorias:**\n",
        "\n",
        "1. Employment/population ratio.(Relación empleo / población)\n",
        "\n",
        "2. Labour force participation rate. (Tasa de participación de la fuerza laboral)\n",
        "\n",
        "3. Unemployment rate. (Tasa de desempleo)\n",
        "\n",
        "*   **Año:** Desde 2016 hasta el 2019.\n",
        "*   **Porcentaje:** Basado en la población total activa.\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "M-wjxYeYK-KB"
      },
      "source": [
        "Tasa_empleo1 = pd.read_csv(\"/content/LFS_SEXAGE_I_R_02072021054030464.csv\")"
      ],
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oDg-FTPAP4w1"
      },
      "source": [
        "Tasa_empleo = Tasa_empleo1.drop(['Flags', 'PowerCode', 'PowerCode Code','Reference Period Code', 'Reference Period', 'Flag Codes', 'Time' ], axis = 1 )"
      ],
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UfADNhU-tVWW",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2a5ca23b-8bb2-4e97-e49c-ee4ff9a046c8"
      },
      "source": [
        "Tasa_empleo.info()"
      ],
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 32683 entries, 0 to 32682\n",
            "Data columns (total 14 columns):\n",
            " #   Column     Non-Null Count  Dtype  \n",
            "---  ------     --------------  -----  \n",
            " 0   COUNTRY    32683 non-null  object \n",
            " 1   Country    32683 non-null  object \n",
            " 2   SEX        32683 non-null  object \n",
            " 3   Sex        32683 non-null  object \n",
            " 4   AGE        32683 non-null  int64  \n",
            " 5   Age        32683 non-null  object \n",
            " 6   SERIES     32683 non-null  object \n",
            " 7   Series     32683 non-null  object \n",
            " 8   FREQ       32683 non-null  object \n",
            " 9   Frequency  32683 non-null  object \n",
            " 10  TIME       32683 non-null  int64  \n",
            " 11  Unit Code  32683 non-null  object \n",
            " 12  Unit       32683 non-null  object \n",
            " 13  Value      32683 non-null  float64\n",
            "dtypes: float64(1), int64(2), object(11)\n",
            "memory usage: 3.5+ MB\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pu_nLxFJskhT",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 337
        },
        "outputId": "189852c6-328e-4557-fbfa-6d6bcb4b79a8"
      },
      "source": [
        "Tasa_empleo_mundo = Tasa_empleo.set_index([\"Country\",\"TIME\"])\n",
        "\n",
        "Tasa_empleo_mundo.head()"
      ],
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>COUNTRY</th>\n",
              "      <th>SEX</th>\n",
              "      <th>Sex</th>\n",
              "      <th>AGE</th>\n",
              "      <th>Age</th>\n",
              "      <th>SERIES</th>\n",
              "      <th>Series</th>\n",
              "      <th>FREQ</th>\n",
              "      <th>Frequency</th>\n",
              "      <th>Unit Code</th>\n",
              "      <th>Unit</th>\n",
              "      <th>Value</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Country</th>\n",
              "      <th>TIME</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th rowspan=\"5\" valign=\"top\">Australia</th>\n",
              "      <th>2016</th>\n",
              "      <td>AUS</td>\n",
              "      <td>MW</td>\n",
              "      <td>All persons</td>\n",
              "      <td>1519</td>\n",
              "      <td>15 to 19</td>\n",
              "      <td>EPR</td>\n",
              "      <td>Employment/population ratio</td>\n",
              "      <td>A</td>\n",
              "      <td>Annual</td>\n",
              "      <td>PC</td>\n",
              "      <td>Percentage</td>\n",
              "      <td>43.893990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>AUS</td>\n",
              "      <td>MW</td>\n",
              "      <td>All persons</td>\n",
              "      <td>1519</td>\n",
              "      <td>15 to 19</td>\n",
              "      <td>EPR</td>\n",
              "      <td>Employment/population ratio</td>\n",
              "      <td>A</td>\n",
              "      <td>Annual</td>\n",
              "      <td>PC</td>\n",
              "      <td>Percentage</td>\n",
              "      <td>43.725506</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>AUS</td>\n",
              "      <td>MW</td>\n",
              "      <td>All persons</td>\n",
              "      <td>1519</td>\n",
              "      <td>15 to 19</td>\n",
              "      <td>EPR</td>\n",
              "      <td>Employment/population ratio</td>\n",
              "      <td>A</td>\n",
              "      <td>Annual</td>\n",
              "      <td>PC</td>\n",
              "      <td>Percentage</td>\n",
              "      <td>45.889107</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>AUS</td>\n",
              "      <td>MW</td>\n",
              "      <td>All persons</td>\n",
              "      <td>1519</td>\n",
              "      <td>15 to 19</td>\n",
              "      <td>EPR</td>\n",
              "      <td>Employment/population ratio</td>\n",
              "      <td>A</td>\n",
              "      <td>Annual</td>\n",
              "      <td>PC</td>\n",
              "      <td>Percentage</td>\n",
              "      <td>45.398401</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>AUS</td>\n",
              "      <td>MEN</td>\n",
              "      <td>Men</td>\n",
              "      <td>1519</td>\n",
              "      <td>15 to 19</td>\n",
              "      <td>EPR</td>\n",
              "      <td>Employment/population ratio</td>\n",
              "      <td>A</td>\n",
              "      <td>Annual</td>\n",
              "      <td>PC</td>\n",
              "      <td>Percentage</td>\n",
              "      <td>40.956707</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "               COUNTRY  SEX          Sex  ...  Unit Code        Unit      Value\n",
              "Country   TIME                            ...                                  \n",
              "Australia 2016     AUS   MW  All persons  ...         PC  Percentage  43.893990\n",
              "          2017     AUS   MW  All persons  ...         PC  Percentage  43.725506\n",
              "          2018     AUS   MW  All persons  ...         PC  Percentage  45.889107\n",
              "          2019     AUS   MW  All persons  ...         PC  Percentage  45.398401\n",
              "          2016     AUS  MEN          Men  ...         PC  Percentage  40.956707\n",
              "\n",
              "[5 rows x 12 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KeCO6rcbtl5c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "outputId": "60c0f6e2-9431-48eb-8166-9518b518b500"
      },
      "source": [
        "Tasa_empleo_mundo.describe()"
      ],
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>AGE</th>\n",
              "      <th>Value</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>32683.000000</td>\n",
              "      <td>32683.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>42625.256280</td>\n",
              "      <td>42.503809</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>181659.374315</td>\n",
              "      <td>35.145397</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1519.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2534.000000</td>\n",
              "      <td>5.582966</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>4044.000000</td>\n",
              "      <td>41.046365</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>6064.000000</td>\n",
              "      <td>78.940362</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>900000.000000</td>\n",
              "      <td>97.633569</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                 AGE         Value\n",
              "count   32683.000000  32683.000000\n",
              "mean    42625.256280     42.503809\n",
              "std    181659.374315     35.145397\n",
              "min      1519.000000      0.000000\n",
              "25%      2534.000000      5.582966\n",
              "50%      4044.000000     41.046365\n",
              "75%      6064.000000     78.940362\n",
              "max    900000.000000     97.633569"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 450
        },
        "id": "wOWrY3PPAYoB",
        "outputId": "3b1d9fd2-d3b6-4b23-a6c8-13819e2c54ff"
      },
      "source": [
        "Empleo = Tasa_empleo_mundo.groupby(['Country','Value' ])['Series'].describe()\n",
        "Empleo"
      ],
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>unique</th>\n",
              "      <th>top</th>\n",
              "      <th>freq</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Country</th>\n",
              "      <th>Value</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th rowspan=\"5\" valign=\"top\">Australia</th>\n",
              "      <th>1.029526</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Unemployment rate</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1.037786</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Unemployment rate</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1.042088</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Unemployment rate</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1.070002</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Unemployment rate</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1.167092</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Unemployment rate</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"5\" valign=\"top\">United States</th>\n",
              "      <th>90.826052</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Labour force participation rate</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>90.897486</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Labour force participation rate</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>90.919125</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Labour force participation rate</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91.049649</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Labour force participation rate</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91.114701</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Labour force participation rate</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>31478 rows × 4 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                        count unique                              top freq\n",
              "Country       Value                                                       \n",
              "Australia     1.029526      1      1                Unemployment rate    1\n",
              "              1.037786      1      1                Unemployment rate    1\n",
              "              1.042088      1      1                Unemployment rate    1\n",
              "              1.070002      1      1                Unemployment rate    1\n",
              "              1.167092      1      1                Unemployment rate    1\n",
              "...                       ...    ...                              ...  ...\n",
              "United States 90.826052     1      1  Labour force participation rate    1\n",
              "              90.897486     1      1  Labour force participation rate    1\n",
              "              90.919125     1      1  Labour force participation rate    1\n",
              "              91.049649     1      1  Labour force participation rate    1\n",
              "              91.114701     1      1  Labour force participation rate    1\n",
              "\n",
              "[31478 rows x 4 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "SJMaF7VOGRTn"
      },
      "source": [
        "**AMERICA**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 450
        },
        "id": "pc5WgF8tCD9p",
        "outputId": "97538188-6576-4d0f-998f-39d289fc8a21"
      },
      "source": [
        "Empleo_amca = [\"Colombia\" , \"Mexico\" ,'Chile', \"United States\"]\n",
        "\n",
        "Empleo_America = Empleo.loc[Empleo_amca]\n",
        "Empleo_America.round(3)"
      ],
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>unique</th>\n",
              "      <th>top</th>\n",
              "      <th>freq</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Country</th>\n",
              "      <th>Value</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th rowspan=\"5\" valign=\"top\">Colombia</th>\n",
              "      <th>0.000000</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Unemployment rate</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0.375783</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Unemployment rate</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0.461023</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Unemployment rate</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0.900611</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Unemployment rate</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1.068005</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Unemployment rate</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"5\" valign=\"top\">United States</th>\n",
              "      <th>90.826052</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Labour force participation rate</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>90.897486</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Labour force participation rate</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>90.919125</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Labour force participation rate</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91.049649</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Labour force participation rate</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91.114701</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Labour force participation rate</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3415 rows × 4 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                        count unique                              top freq\n",
              "Country       Value                                                       \n",
              "Colombia      0.000000      1      1                Unemployment rate    1\n",
              "              0.375783      1      1                Unemployment rate    1\n",
              "              0.461023      1      1                Unemployment rate    1\n",
              "              0.900611      1      1                Unemployment rate    1\n",
              "              1.068005      1      1                Unemployment rate    1\n",
              "...                       ...    ...                              ...  ...\n",
              "United States 90.826052     1      1  Labour force participation rate    1\n",
              "              90.897486     1      1  Labour force participation rate    1\n",
              "              90.919125     1      1  Labour force participation rate    1\n",
              "              91.049649     1      1  Labour force participation rate    1\n",
              "              91.114701     1      1  Labour force participation rate    1\n",
              "\n",
              "[3415 rows x 4 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DGSRUUvvDYZn",
        "outputId": "6e8778c0-3f57-48cc-e868-bed0c6969804"
      },
      "source": [
        "Empleo_value = Empleo_America.mean(1)\n",
        "Empleo_value"
      ],
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Country        Value    \n",
              "Colombia       0.000000    NaN\n",
              "               0.375783    NaN\n",
              "               0.461023    NaN\n",
              "               0.900611    NaN\n",
              "               1.068005    NaN\n",
              "                            ..\n",
              "United States  90.826052   NaN\n",
              "               90.897486   NaN\n",
              "               90.919125   NaN\n",
              "               91.049649   NaN\n",
              "               91.114701   NaN\n",
              "Length: 3415, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ueDXPJKUv-F-"
      },
      "source": [
        "### **Población con acceso a TICS**\n",
        "\n",
        "**Variables:**\n",
        "\n",
        "*   **Años:** Desde el 2016 hasta el 2019.\n",
        "*   **Paises:** 197 paises.\n",
        "*   **Regiones:** Africa,Arab States, Asia & Pacific,Europe, The Americas.\n",
        "*   **Indicadores:**\n",
        "\n",
        "1. Female Internet users as a % of total female population. (Mujeres usuarias de Internet como% del total de la población femenina.)\n",
        "\n",
        "2. Female mobile phone ownership as a % of total female population.(Propiedad femenina de teléfonos móviles como% del total de la población femenina.)\n",
        "\n",
        "3. Fixed broadband basket as a % of GNI p.c.(Canasta de banda ancha fija como% del INB p.c. )\n",
        "\n",
        "4. Households with a computer at home (%).( Hogares con ordenador en casa (%). )\n",
        "\n",
        "5. Households with Internet access at home, urban (%).(Hogares con acceso a Internet en el hogar, urbano (%).)\n",
        "\n",
        "6. Individuals using the Internet, total (%).(Personas que utilizan Internet, total (%). )\n",
        "\n",
        "7. Individuals with advanced ICT skills (%).(Individuos con habilidades TIC avanzadas (%).)\n",
        "\n",
        "8. Individuals with basic ICT skills (%).(Personas con competencias básicas en TIC (%). )\n",
        "\n",
        "9. Individuals with standard ICT skills (%).(Personas con competencias estándar en TIC (%). )\n",
        "\n",
        "10. International bandwidth per Internet user (kbit/s).(Ancho de banda internacional por usuario de Internet (kbit / s).  )\n",
        "\n",
        "11. Internet users: < 15 years as a % of all < 15 years.( Usuarios de Internet: <15 años como% de todos los <15 años.)\n",
        "\n",
        "12. Internet users: 15-24 years as a % of all 15-24 years.(Usuarios de Internet: 15-24 años como% de todos los 15-24 años.  )\n",
        "\n",
        "13. Internet users: 25-74 years as a % of all 25-74 years.(Usuarios de Internet: 25-74 años como% de todos los 25-74 años.  )\n",
        "\n",
        "14. Internet users: 75+ years as a % of all 75+ years.( Usuarios de Internet: 75+ años como% de los 75+ años. )\n",
        "\n",
        "15. Male Internet users as a % of total male population.(Usuarios masculinos de Internet como porcentaje del total de la población masculina.  )\n",
        "\n",
        "16. Male mobile phone ownership as a % of total male population(Propiedad masculina de teléfonos móviles como% del total de la población masculina  )\n",
        "\n",
        "17. Mobile broadband basket as a % of GNI p.c.(Canasta de banda ancha móvil como% del PIB p.c.  )\n",
        "\n",
        "18. Mobile-cellular subscriptions per 100 inhabitants.(Suscripciones a telefonía móvil por cada 100 habitantes.  )\n",
        "\n",
        "19. Monthly mobile broadband Internet traffic per mobile broadband subscription \n",
        "(MB).(Tráfico mensual de Internet de banda ancha móvil por suscripción de banda ancha móvil (MB). )\n",
        "\n",
        "20. Population covered by a mobile-cellular network (%).(Población cubierta por una red celular móvil (%). )\n",
        "\n",
        "21. Population covered by at least a 3G mobile network (%).(Población cubierta por al menos una red móvil 3G (%).  )\n",
        "\n",
        "23. Population covered by at least a 4G mobile network (%).(Población cubierta por al menos una red móvil 4G (%).  )\n",
        "\n",
        "24. Total fixed broadband subscriptions.( Suscripciones totales de banda ancha fija. )\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pWWjrSRSwFYN",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "8b46c41d-a247-435b-cd20-f0581d3f3497"
      },
      "source": [
        "import pandas as pd\n",
        "\n",
        "pobla_tics= pd.read_excel('/content/Acceso población a TICS.xlsx')\n",
        "pobla_tics"
      ],
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country</th>\n",
              "      <th>Region</th>\n",
              "      <th>ISO</th>\n",
              "      <th>Indicator name</th>\n",
              "      <th>Year</th>\n",
              "      <th>Value</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Armenia</td>\n",
              "      <td>CIS</td>\n",
              "      <td>ARM</td>\n",
              "      <td>Female Internet users as a % of total female p...</td>\n",
              "      <td>2016</td>\n",
              "      <td>6.336845e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Austria</td>\n",
              "      <td>Europe</td>\n",
              "      <td>AUT</td>\n",
              "      <td>Female Internet users as a % of total female p...</td>\n",
              "      <td>2016</td>\n",
              "      <td>8.073138e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Belgium</td>\n",
              "      <td>Europe</td>\n",
              "      <td>BEL</td>\n",
              "      <td>Female Internet users as a % of total female p...</td>\n",
              "      <td>2016</td>\n",
              "      <td>8.543921e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Bulgaria</td>\n",
              "      <td>Europe</td>\n",
              "      <td>BGR</td>\n",
              "      <td>Female Internet users as a % of total female p...</td>\n",
              "      <td>2016</td>\n",
              "      <td>5.912575e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Croatia</td>\n",
              "      <td>Europe</td>\n",
              "      <td>HRV</td>\n",
              "      <td>Female Internet users as a % of total female p...</td>\n",
              "      <td>2016</td>\n",
              "      <td>6.873948e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32261</th>\n",
              "      <td>Suriname</td>\n",
              "      <td>The Americas</td>\n",
              "      <td>SUR</td>\n",
              "      <td>Total fixed broadband subscriptions</td>\n",
              "      <td>2019</td>\n",
              "      <td>8.032000e+04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32262</th>\n",
              "      <td>Trinidad and Tobago</td>\n",
              "      <td>The Americas</td>\n",
              "      <td>TTO</td>\n",
              "      <td>Total fixed broadband subscriptions</td>\n",
              "      <td>2019</td>\n",
              "      <td>3.393400e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32263</th>\n",
              "      <td>United States</td>\n",
              "      <td>The Americas</td>\n",
              "      <td>USA</td>\n",
              "      <td>Total fixed broadband subscriptions</td>\n",
              "      <td>2019</td>\n",
              "      <td>1.142590e+08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32264</th>\n",
              "      <td>Uruguay</td>\n",
              "      <td>The Americas</td>\n",
              "      <td>URY</td>\n",
              "      <td>Total fixed broadband subscriptions</td>\n",
              "      <td>2019</td>\n",
              "      <td>1.012410e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32265</th>\n",
              "      <td>Venezuela</td>\n",
              "      <td>The Americas</td>\n",
              "      <td>VEN</td>\n",
              "      <td>Total fixed broadband subscriptions</td>\n",
              "      <td>2019</td>\n",
              "      <td>2.560994e+06</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>32266 rows × 6 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                   Country        Region  ...  Year         Value\n",
              "0                  Armenia           CIS  ...  2016  6.336845e+01\n",
              "1                  Austria        Europe  ...  2016  8.073138e+01\n",
              "2                  Belgium        Europe  ...  2016  8.543921e+01\n",
              "3                 Bulgaria        Europe  ...  2016  5.912575e+01\n",
              "4                  Croatia        Europe  ...  2016  6.873948e+01\n",
              "...                    ...           ...  ...   ...           ...\n",
              "32261             Suriname  The Americas  ...  2019  8.032000e+04\n",
              "32262  Trinidad and Tobago  The Americas  ...  2019  3.393400e+05\n",
              "32263        United States  The Americas  ...  2019  1.142590e+08\n",
              "32264              Uruguay  The Americas  ...  2019  1.012410e+06\n",
              "32265            Venezuela  The Americas  ...  2019  2.560994e+06\n",
              "\n",
              "[32266 rows x 6 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 65
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HajbHbgXmjpw",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c2f0f56d-ed3a-48e4-c488-1b5d4a32eee0"
      },
      "source": [
        "pobla_tics.info()"
      ],
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 32266 entries, 0 to 32265\n",
            "Data columns (total 6 columns):\n",
            " #   Column          Non-Null Count  Dtype  \n",
            "---  ------          --------------  -----  \n",
            " 0   Country         32266 non-null  object \n",
            " 1   Region          32266 non-null  object \n",
            " 2   ISO             32266 non-null  object \n",
            " 3   Indicator name  32266 non-null  object \n",
            " 4   Year            32266 non-null  int64  \n",
            " 5   Value           20133 non-null  float64\n",
            "dtypes: float64(1), int64(1), object(4)\n",
            "memory usage: 1.5+ MB\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 450
        },
        "id": "HD62Z2keg33m",
        "outputId": "69990719-a69e-48c9-b36d-c5253840eb39"
      },
      "source": [
        "pobtics = pobla_tics.set_index([\"Country\",\"Year\"])\n",
        "pobtics"
      ],
      "execution_count": 67,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Region</th>\n",
              "      <th>ISO</th>\n",
              "      <th>Indicator name</th>\n",
              "      <th>Value</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Country</th>\n",
              "      <th>Year</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Armenia</th>\n",
              "      <th>2016</th>\n",
              "      <td>CIS</td>\n",
              "      <td>ARM</td>\n",
              "      <td>Female Internet users as a % of total female p...</td>\n",
              "      <td>6.336845e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Austria</th>\n",
              "      <th>2016</th>\n",
              "      <td>Europe</td>\n",
              "      <td>AUT</td>\n",
              "      <td>Female Internet users as a % of total female p...</td>\n",
              "      <td>8.073138e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Belgium</th>\n",
              "      <th>2016</th>\n",
              "      <td>Europe</td>\n",
              "      <td>BEL</td>\n",
              "      <td>Female Internet users as a % of total female p...</td>\n",
              "      <td>8.543921e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Bulgaria</th>\n",
              "      <th>2016</th>\n",
              "      <td>Europe</td>\n",
              "      <td>BGR</td>\n",
              "      <td>Female Internet users as a % of total female p...</td>\n",
              "      <td>5.912575e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Croatia</th>\n",
              "      <th>2016</th>\n",
              "      <td>Europe</td>\n",
              "      <td>HRV</td>\n",
              "      <td>Female Internet users as a % of total female p...</td>\n",
              "      <td>6.873948e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Suriname</th>\n",
              "      <th>2019</th>\n",
              "      <td>The Americas</td>\n",
              "      <td>SUR</td>\n",
              "      <td>Total fixed broadband subscriptions</td>\n",
              "      <td>8.032000e+04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Trinidad and Tobago</th>\n",
              "      <th>2019</th>\n",
              "      <td>The Americas</td>\n",
              "      <td>TTO</td>\n",
              "      <td>Total fixed broadband subscriptions</td>\n",
              "      <td>3.393400e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>United States</th>\n",
              "      <th>2019</th>\n",
              "      <td>The Americas</td>\n",
              "      <td>USA</td>\n",
              "      <td>Total fixed broadband subscriptions</td>\n",
              "      <td>1.142590e+08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Uruguay</th>\n",
              "      <th>2019</th>\n",
              "      <td>The Americas</td>\n",
              "      <td>URY</td>\n",
              "      <td>Total fixed broadband subscriptions</td>\n",
              "      <td>1.012410e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Venezuela</th>\n",
              "      <th>2019</th>\n",
              "      <td>The Americas</td>\n",
              "      <td>VEN</td>\n",
              "      <td>Total fixed broadband subscriptions</td>\n",
              "      <td>2.560994e+06</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>32266 rows × 4 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                                Region  ...         Value\n",
              "Country             Year                ...              \n",
              "Armenia             2016           CIS  ...  6.336845e+01\n",
              "Austria             2016        Europe  ...  8.073138e+01\n",
              "Belgium             2016        Europe  ...  8.543921e+01\n",
              "Bulgaria            2016        Europe  ...  5.912575e+01\n",
              "Croatia             2016        Europe  ...  6.873948e+01\n",
              "...                                ...  ...           ...\n",
              "Suriname            2019  The Americas  ...  8.032000e+04\n",
              "Trinidad and Tobago 2019  The Americas  ...  3.393400e+05\n",
              "United States       2019  The Americas  ...  1.142590e+08\n",
              "Uruguay             2019  The Americas  ...  1.012410e+06\n",
              "Venezuela           2019  The Americas  ...  2.560994e+06\n",
              "\n",
              "[32266 rows x 4 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ljYg0u-emy5E",
        "outputId": "e4c5ce5a-2b71-4896-cac8-8736ec47673d"
      },
      "source": [
        "pobtics['Value'].describe()"
      ],
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "count    2.013300e+04\n",
              "mean     3.949606e+05\n",
              "std      7.968256e+06\n",
              "min      0.000000e+00\n",
              "25%      1.618566e+01\n",
              "50%      7.690743e+01\n",
              "75%      1.000000e+02\n",
              "max      4.492790e+08\n",
              "Name: Value, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 68
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 450
        },
        "id": "Prao9-KasRmg",
        "outputId": "f32d9644-afdd-4eac-e0a3-e1da9d304353"
      },
      "source": [
        "pobtics_amca = [\"Colombia\" , \"Brazil\" , \"United States\"]\n",
        "\n",
        "pobtics_America = pobtics.loc[pobtics_amca]\n",
        "pobtics_America.round(3)"
      ],
      "execution_count": 69,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Region</th>\n",
              "      <th>ISO</th>\n",
              "      <th>Indicator name</th>\n",
              "      <th>Value</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Country</th>\n",
              "      <th>Year</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th rowspan=\"5\" valign=\"top\">Colombia</th>\n",
              "      <th>2016</th>\n",
              "      <td>The Americas</td>\n",
              "      <td>COL</td>\n",
              "      <td>Female Internet users as a % of total female p...</td>\n",
              "      <td>5.817400e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>The Americas</td>\n",
              "      <td>COL</td>\n",
              "      <td>Female Internet users as a % of total female p...</td>\n",
              "      <td>6.242000e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>The Americas</td>\n",
              "      <td>COL</td>\n",
              "      <td>Female Internet users as a % of total female p...</td>\n",
              "      <td>6.458900e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>The Americas</td>\n",
              "      <td>COL</td>\n",
              "      <td>Female Internet users as a % of total female p...</td>\n",
              "      <td>6.589700e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>The Americas</td>\n",
              "      <td>COL</td>\n",
              "      <td>Female mobile phone ownership as a % of total ...</td>\n",
              "      <td>7.310300e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"5\" valign=\"top\">United States</th>\n",
              "      <th>2019</th>\n",
              "      <td>The Americas</td>\n",
              "      <td>USA</td>\n",
              "      <td>Population covered by at least a 4G mobile net...</td>\n",
              "      <td>9.990000e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>The Americas</td>\n",
              "      <td>USA</td>\n",
              "      <td>Total fixed broadband subscriptions</td>\n",
              "      <td>1.057140e+08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>The Americas</td>\n",
              "      <td>USA</td>\n",
              "      <td>Total fixed broadband subscriptions</td>\n",
              "      <td>1.082000e+08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>The Americas</td>\n",
              "      <td>USA</td>\n",
              "      <td>Total fixed broadband subscriptions</td>\n",
              "      <td>1.108650e+08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>The Americas</td>\n",
              "      <td>USA</td>\n",
              "      <td>Total fixed broadband subscriptions</td>\n",
              "      <td>1.142590e+08</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>532 rows × 4 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                          Region  ...         Value\n",
              "Country       Year                ...              \n",
              "Colombia      2016  The Americas  ...  5.817400e+01\n",
              "              2017  The Americas  ...  6.242000e+01\n",
              "              2018  The Americas  ...  6.458900e+01\n",
              "              2019  The Americas  ...  6.589700e+01\n",
              "              2016  The Americas  ...  7.310300e+01\n",
              "...                          ...  ...           ...\n",
              "United States 2019  The Americas  ...  9.990000e+01\n",
              "              2016  The Americas  ...  1.057140e+08\n",
              "              2017  The Americas  ...  1.082000e+08\n",
              "              2018  The Americas  ...  1.108650e+08\n",
              "              2019  The Americas  ...  1.142590e+08\n",
              "\n",
              "[532 rows x 4 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 69
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tnzBT88iGp9G",
        "outputId": "01f6c367-896b-472b-da15-aedb5156a05b"
      },
      "source": [
        "pobtics_America.mean(1)"
      ],
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Country        Year\n",
              "Colombia       2016    5.817418e+01\n",
              "               2017    6.241987e+01\n",
              "               2018    6.458878e+01\n",
              "               2019    6.589684e+01\n",
              "               2016    7.310334e+01\n",
              "                           ...     \n",
              "United States  2019    9.990000e+01\n",
              "               2016    1.057140e+08\n",
              "               2017    1.082000e+08\n",
              "               2018    1.108650e+08\n",
              "               2019    1.142590e+08\n",
              "Length: 532, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 73
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "lnReRAWDtMsV"
      },
      "source": [
        "**Colombia**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 450
        },
        "id": "j4rdOdZFtI3S",
        "outputId": "e30bbaae-180e-4e41-9b41-8cfad03de5ec"
      },
      "source": [
        "pobtics_America.loc[\"Colombia\"]"
      ],
      "execution_count": 83,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Region</th>\n",
              "      <th>ISO</th>\n",
              "      <th>Indicator name</th>\n",
              "      <th>Value</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Year</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>The Americas</td>\n",
              "      <td>COL</td>\n",
              "      <td>Female Internet users as a % of total female p...</td>\n",
              "      <td>5.817418e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>The Americas</td>\n",
              "      <td>COL</td>\n",
              "      <td>Female Internet users as a % of total female p...</td>\n",
              "      <td>6.241987e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>The Americas</td>\n",
              "      <td>COL</td>\n",
              "      <td>Female Internet users as a % of total female p...</td>\n",
              "      <td>6.458878e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>The Americas</td>\n",
              "      <td>COL</td>\n",
              "      <td>Female Internet users as a % of total female p...</td>\n",
              "      <td>6.589684e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>The Americas</td>\n",
              "      <td>COL</td>\n",
              "      <td>Female mobile phone ownership as a % of total ...</td>\n",
              "      <td>7.310334e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>The Americas</td>\n",
              "      <td>COL</td>\n",
              "      <td>Population covered by at least a 4G mobile net...</td>\n",
              "      <td>9.800000e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>The Americas</td>\n",
              "      <td>COL</td>\n",
              "      <td>Total fixed broadband subscriptions</td>\n",
              "      <td>5.912968e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>The Americas</td>\n",
              "      <td>COL</td>\n",
              "      <td>Total fixed broadband subscriptions</td>\n",
              "      <td>6.331032e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>The Americas</td>\n",
              "      <td>COL</td>\n",
              "      <td>Total fixed broadband subscriptions</td>\n",
              "      <td>6.678543e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>The Americas</td>\n",
              "      <td>COL</td>\n",
              "      <td>Total fixed broadband subscriptions</td>\n",
              "      <td>6.949852e+06</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>179 rows × 4 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "            Region  ...         Value\n",
              "Year                ...              \n",
              "2016  The Americas  ...  5.817418e+01\n",
              "2017  The Americas  ...  6.241987e+01\n",
              "2018  The Americas  ...  6.458878e+01\n",
              "2019  The Americas  ...  6.589684e+01\n",
              "2016  The Americas  ...  7.310334e+01\n",
              "...            ...  ...           ...\n",
              "2019  The Americas  ...  9.800000e+01\n",
              "2016  The Americas  ...  5.912968e+06\n",
              "2017  The Americas  ...  6.331032e+06\n",
              "2018  The Americas  ...  6.678543e+06\n",
              "2019  The Americas  ...  6.949852e+06\n",
              "\n",
              "[179 rows x 4 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 83
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NOU_UiY0tc1V",
        "outputId": "3836bd83-21f8-499f-e72b-1002f6e515d7"
      },
      "source": [
        "pobtics_America.mean()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Value    2.624215e+06\n",
              "dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 270
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qVqP7AfUtuV3",
        "outputId": "d74e64b8-b67d-4598-ee59-75772fbf2195"
      },
      "source": [
        "pobtics_America.loc[\"Colombia\"].mean().round(3)"
      ],
      "execution_count": 87,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Value    312074.416\n",
              "dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 87
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ABUUsWMZ0UTE",
        "outputId": "110e0557-38a6-4b88-fe10-149bcd8071e0"
      },
      "source": [
        "pobtics_America.loc[\"Brazil\"].mean().round(3)"
      ],
      "execution_count": 88,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Value    1412766.409\n",
              "dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 88
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HLJMt1qy0V2x",
        "outputId": "2be4e150-9482-4201-fed7-a4a41374a3ed"
      },
      "source": [
        "pobtics_America.loc[\"United States\"].mean() "
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Value    8.179221e+06\n",
              "dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 273
        }
      ]
    }
  ]
}
